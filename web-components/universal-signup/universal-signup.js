var Xd=Object.defineProperty;var Yd=(t,e,n)=>e in t?Xd(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var at=(t,e,n)=>Yd(t,typeof e!="symbol"?e+"":e,n);const Qd="modulepreload",e1=function(t,e){return t[0]==="."?new URL(t,e).href:t},po={},mo=function(e,n,r){let i=Promise.resolve();if(n&&n.length>0){const s=document.getElementsByTagName("link"),o=document.querySelector("meta[property=csp-nonce]"),l=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));i=Promise.all(n.map(a=>{if(a=e1(a,r),a in po)return;po[a]=!0;const d=a.endsWith(".css"),u=d?'[rel="stylesheet"]':"";if(!!r)for(let b=s.length-1;b>=0;b--){const m=s[b];if(m.href===a&&(!d||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${a}"]${u}`))return;const h=document.createElement("link");if(h.rel=d?"stylesheet":Qd,d||(h.as="script",h.crossOrigin=""),h.href=a,l&&h.setAttribute("nonce",l),document.head.appendChild(h),d)return new Promise((b,m)=>{h.addEventListener("load",b),h.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${a}`)))})}))}return i.then(()=>e()).catch(s=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=s,window.dispatchEvent(o),!o.defaultPrevented)throw s})};function oe(){}const Qr=t=>t;function gt(t,e){for(const n in e)t[n]=e[n];return t}function oa(t){return t()}function go(){return Object.create(null)}function it(t){t.forEach(oa)}function Et(t){return typeof t=="function"}function qe(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}let mi;function Yn(t,e){return t===e?!0:(mi||(mi=document.createElement("a")),mi.href=e,t===mi.href)}function t1(t){return Object.keys(t).length===0}function As(t,...e){if(t==null){for(const r of e)r(void 0);return oe}const n=t.subscribe(...e);return n.unsubscribe?()=>n.unsubscribe():n}function Ye(t,e,n){t.$$.on_destroy.push(As(e,n))}function dt(t,e,n,r){if(t){const i=la(t,e,n,r);return t[0](i)}}function la(t,e,n,r){return t[1]&&r?gt(n.ctx.slice(),t[1](r(e))):n.ctx}function ut(t,e,n,r){if(t[2]&&r){const i=t[2](r(n));if(e.dirty===void 0)return i;if(typeof i=="object"){const s=[],o=Math.max(e.dirty.length,i.length);for(let l=0;l<o;l+=1)s[l]=e.dirty[l]|i[l];return s}return e.dirty|i}return e.dirty}function ct(t,e,n,r,i,s){if(i){const o=la(e,n,r,s);t.p(o,i)}}function ft(t){if(t.ctx.length>32){const e=[],n=t.ctx.length/32;for(let r=0;r<n;r++)e[r]=-1;return e}return-1}function fn(t){const e={};for(const n in t)n[0]!=="$"&&(e[n]=t[n]);return e}function Qn(t,e){const n={};e=new Set(e);for(const r in t)!e.has(r)&&r[0]!=="$"&&(n[r]=t[r]);return n}function Si(t){return t??""}function We(t,e,n){return t.set(n),e}function Ns(t){return t&&Et(t.destroy)?t.destroy:oe}function bo(t){const e=typeof t=="string"&&t.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);return e?[parseFloat(e[1]),e[2]||"px"]:[t,"px"]}const aa=typeof window<"u";let Zi=aa?()=>window.performance.now():()=>Date.now(),zs=aa?t=>requestAnimationFrame(t):oe;const Wn=new Set;function da(t){Wn.forEach(e=>{e.c(t)||(Wn.delete(e),e.f())}),Wn.size!==0&&zs(da)}function Hi(t){let e;return Wn.size===0&&zs(da),{promise:new Promise(n=>{Wn.add(e={c:t,f:n})}),abort(){Wn.delete(e)}}}function _(t,e){t.appendChild(e)}function or(t,e,n){const r=Ls(t);if(!r.getElementById(e)){const i=k("style");i.id=e,i.textContent=n,ua(r,i)}}function Ls(t){if(!t)return document;const e=t.getRootNode?t.getRootNode():t.ownerDocument;return e&&e.host?e:t.ownerDocument}function n1(t){const e=k("style");return e.textContent="/* empty */",ua(Ls(t),e),e.sheet}function ua(t,e){return _(t.head||t,e),e.sheet}function I(t,e,n){t.insertBefore(e,n||null)}function T(t){t.parentNode&&t.parentNode.removeChild(t)}function ei(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function k(t){return document.createElement(t)}function ke(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}function $e(t){return document.createTextNode(t)}function q(){return $e(" ")}function kt(){return $e("")}function he(t,e,n,r){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n,r)}function xi(t){return function(e){return e.preventDefault(),t.call(this,e)}}function f(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}const r1=["width","height"];function gs(t,e){const n=Object.getOwnPropertyDescriptors(t.__proto__);for(const r in e)e[r]==null?t.removeAttribute(r):r==="style"?t.style.cssText=e[r]:r==="__value"?t.value=t[r]=e[r]:n[r]&&n[r].set&&r1.indexOf(r)===-1?t[r]=e[r]:f(t,r,e[r])}function i1(t,e){Object.keys(e).forEach(n=>{xe(t,n,e[n])})}function xe(t,e,n){const r=e.toLowerCase();r in t?t[r]=typeof t[r]=="boolean"&&n===""?!0:n:e in t?t[e]=typeof t[e]=="boolean"&&n===""?!0:n:f(t,e,n)}function vo(t){return/-/.test(t)?i1:gs}function s1(t){return Array.from(t.childNodes)}function De(t,e){e=""+e,t.data!==e&&(t.data=e)}function er(t,e){t.value=e??""}function o1(t,e,n,r){t.style.setProperty(e,n,"")}function ne(t,e,n){t.classList.toggle(e,!!n)}function ca(t,e,{bubbles:n=!1,cancelable:r=!1}={}){return new CustomEvent(t,{detail:e,bubbles:n,cancelable:r})}function l1(t){const e={};return t.childNodes.forEach(n=>{e[n.slot||"default"]=!0}),e}const Ei=new Map;let Ti=0;function a1(t){let e=5381,n=t.length;for(;n--;)e=(e<<5)-e^t.charCodeAt(n);return e>>>0}function d1(t,e){const n={stylesheet:n1(e),rules:{}};return Ei.set(t,n),n}function Tr(t,e,n,r,i,s,o,l=0){const a=16.666/r;let d=`{
`;for(let g=0;g<=1;g+=a){const y=e+(n-e)*s(g);d+=g*100+`%{${o(y,1-y)}}
`}const u=d+`100% {${o(n,1-n)}}
}`,c=`__svelte_${a1(u)}_${l}`,h=Ls(t),{stylesheet:b,rules:m}=Ei.get(h)||d1(h,t);m[c]||(m[c]=!0,b.insertRule(`@keyframes ${c} ${u}`,b.cssRules.length));const v=t.style.animation||"";return t.style.animation=`${v?`${v}, `:""}${c} ${r}ms linear ${i}ms 1 both`,Ti+=1,c}function Ir(t,e){const n=(t.style.animation||"").split(", "),r=n.filter(e?s=>s.indexOf(e)<0:s=>s.indexOf("__svelte")===-1),i=n.length-r.length;i&&(t.style.animation=r.join(", "),Ti-=i,Ti||u1())}function u1(){zs(()=>{Ti||(Ei.forEach(t=>{const{ownerNode:e}=t.stylesheet;e&&T(e)}),Ei.clear())})}function c1(t,e,n,r){if(!e)return oe;const i=t.getBoundingClientRect();if(e.left===i.left&&e.right===i.right&&e.top===i.top&&e.bottom===i.bottom)return oe;const{delay:s=0,duration:o=300,easing:l=Qr,start:a=Zi()+s,end:d=a+o,tick:u=oe,css:c}=n(t,{from:e,to:i},r);let h=!0,b=!1,m;function v(){c&&(m=Tr(t,0,1,o,s,l,c)),s||(b=!0)}function g(){c&&Ir(t,m),h=!1}return Hi(y=>{if(!b&&y>=a&&(b=!0),b&&y>=d&&(u(1,0),g()),!h)return!1;if(b){const $=y-a,C=0+1*l($/o);u(C,1-C)}return!0}),v(),u(0,1),g}function f1(t){const e=getComputedStyle(t);if(e.position!=="absolute"&&e.position!=="fixed"){const{width:n,height:r}=e,i=t.getBoundingClientRect();t.style.position="absolute",t.style.width=n,t.style.height=r,h1(t,i)}}function h1(t,e){const n=t.getBoundingClientRect();if(e.left!==n.left||e.top!==n.top){const r=getComputedStyle(t),i=r.transform==="none"?"":r.transform;t.style.transform=`${i} translate(${e.left-n.left}px, ${e.top-n.top}px)`}}let Or;function Sr(t){Or=t}function ti(){if(!Or)throw new Error("Function called outside component initialization");return Or}function bn(t){ti().$$.on_mount.push(t)}function Fs(t){ti().$$.on_destroy.push(t)}function Rt(){const t=ti();return(e,n,{cancelable:r=!1}={})=>{const i=t.$$.callbacks[e];if(i){const s=ca(e,n,{cancelable:r});return i.slice().forEach(o=>{o.call(t,s)}),!s.defaultPrevented}return!0}}function p1(t,e){return ti().$$.context.set(t,e),e}function m1(t){return ti().$$.context.get(t)}function Pe(t,e){const n=t.$$.callbacks[e.type];n&&n.slice().forEach(r=>r.call(this,e))}const Zn=[],je=[];let qn=[];const bs=[],fa=Promise.resolve();let vs=!1;function ha(){vs||(vs=!0,fa.then(O))}function $t(){return ha(),fa}function bt(t){qn.push(t)}function vn(t){bs.push(t)}const as=new Set;let jn=0;function O(){if(jn!==0)return;const t=Or;do{try{for(;jn<Zn.length;){const e=Zn[jn];jn++,Sr(e),g1(e.$$)}}catch(e){throw Zn.length=0,jn=0,e}for(Sr(null),Zn.length=0,jn=0;je.length;)je.pop()();for(let e=0;e<qn.length;e+=1){const n=qn[e];as.has(n)||(as.add(n),n())}qn.length=0}while(Zn.length);for(;bs.length;)bs.pop()();vs=!1,as.clear(),Sr(t)}function g1(t){if(t.fragment!==null){t.update(),it(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(bt)}}function b1(t){const e=[],n=[];qn.forEach(r=>t.indexOf(r)===-1?e.push(r):n.push(r)),n.forEach(r=>r()),qn=e}let vr;function Rs(){return vr||(vr=Promise.resolve(),vr.then(()=>{vr=null})),vr}function En(t,e,n){t.dispatchEvent(ca(`${e?"intro":"outro"}${n}`))}const wi=new Set;let Dt;function Me(){Dt={r:0,c:[],p:Dt}}function Ae(){Dt.r||it(Dt.c),Dt=Dt.p}function P(t,e){t&&t.i&&(wi.delete(t),t.i(e))}function L(t,e,n,r){if(t&&t.o){if(wi.has(t))return;wi.add(t),Dt.c.push(()=>{wi.delete(t),r&&(n&&t.d(1),r())}),t.o(e)}else r&&r()}const js={duration:0};function ni(t,e,n){const r={direction:"in"};let i=e(t,n,r),s=!1,o,l,a=0;function d(){o&&Ir(t,o)}function u(){const{delay:h=0,duration:b=300,easing:m=Qr,tick:v=oe,css:g}=i||js;g&&(o=Tr(t,0,1,b,h,m,g,a++)),v(0,1);const y=Zi()+h,$=y+b;l&&l.abort(),s=!0,bt(()=>En(t,!0,"start")),l=Hi(C=>{if(s){if(C>=$)return v(1,0),En(t,!0,"end"),d(),s=!1;if(C>=y){const x=m((C-y)/b);v(x,1-x)}}return s})}let c=!1;return{start(){c||(c=!0,Ir(t),Et(i)?(i=i(r),Rs().then(u)):u())},invalidate(){c=!1},end(){s&&(d(),s=!1)}}}function Ds(t,e,n){const r={direction:"out"};let i=e(t,n,r),s=!0,o;const l=Dt;l.r+=1;let a;function d(){const{delay:u=0,duration:c=300,easing:h=Qr,tick:b=oe,css:m}=i||js;m&&(o=Tr(t,1,0,c,u,h,m));const v=Zi()+u,g=v+c;bt(()=>En(t,!1,"start")),"inert"in t&&(a=t.inert,t.inert=!0),Hi(y=>{if(s){if(y>=g)return b(0,1),En(t,!1,"end"),--l.r||it(l.c),!1;if(y>=v){const $=h((y-v)/c);b(1-$,$)}}return s})}return Et(i)?Rs().then(()=>{i=i(r),d()}):d(),{end(u){u&&"inert"in t&&(t.inert=a),u&&i.tick&&i.tick(1,0),s&&(o&&Ir(t,o),s=!1)}}}function tr(t,e,n,r){let s=e(t,n,{direction:"both"}),o=r?0:1,l=null,a=null,d=null,u;function c(){d&&Ir(t,d)}function h(m,v){const g=m.b-o;return v*=Math.abs(g),{a:o,b:m.b,d:g,duration:v,start:m.start,end:m.start+v,group:m.group}}function b(m){const{delay:v=0,duration:g=300,easing:y=Qr,tick:$=oe,css:C}=s||js,x={start:Zi()+v,b:m};m||(x.group=Dt,Dt.r+=1),"inert"in t&&(m?u!==void 0&&(t.inert=u):(u=t.inert,t.inert=!0)),l||a?a=x:(C&&(c(),d=Tr(t,o,m,g,v,y,C)),m&&$(0,1),l=h(x,g),bt(()=>En(t,m,"start")),Hi(A=>{if(a&&A>a.start&&(l=h(a,g),a=null,En(t,l.b,"start"),C&&(c(),d=Tr(t,o,l.b,l.duration,0,y,s.css))),l){if(A>=l.end)$(o=l.b,1-o),En(t,l.b,"end"),a||(l.b?c():--l.group.r||it(l.group.c)),l=null;else if(A>=l.start){const K=A-l.start;o=l.a+l.d*y(K/l.duration),$(o,1-o)}}return!!(l||a)}))}return{run(m){Et(s)?Rs().then(()=>{s=s({direction:m?"in":"out"}),b(m)}):b(m)},end(){c(),l=a=null}}}function nt(t){return(t==null?void 0:t.length)!==void 0?t:Array.from(t)}function pa(t,e){t.d(1),e.delete(t.key)}function v1(t,e){L(t,1,1,()=>{e.delete(t.key)})}function $1(t,e){t.f(),pa(t,e)}function Bs(t,e,n,r,i,s,o,l,a,d,u,c){let h=t.length,b=s.length,m=h;const v={};for(;m--;)v[t[m].key]=m;const g=[],y=new Map,$=new Map,C=[];for(m=b;m--;){const M=c(i,s,m),Q=n(M);let H=o.get(Q);H?C.push(()=>H.p(M,e)):(H=d(Q,M),H.c()),y.set(Q,g[m]=H),Q in v&&$.set(Q,Math.abs(m-v[Q]))}const x=new Set,A=new Set;function K(M){P(M,1),M.m(l,u),o.set(M.key,M),u=M.first,b--}for(;h&&b;){const M=g[b-1],Q=t[h-1],H=M.key,Z=Q.key;M===Q?(u=M.first,h--,b--):y.has(Z)?!o.has(H)||x.has(H)?K(M):A.has(Z)?h--:$.get(H)>$.get(Z)?(A.add(H),K(M)):(x.add(Z),h--):(a(Q,o),h--)}for(;h--;){const M=t[h];y.has(M.key)||a(M,o)}for(;b;)K(g[b-1]);return it(C),g}function ri(t,e){const n={},r={},i={$$scope:1};let s=t.length;for(;s--;){const o=t[s],l=e[s];if(l){for(const a in o)a in l||(r[a]=1);for(const a in l)i[a]||(n[a]=l[a],i[a]=1);t[s]=l}else for(const a in o)i[a]=1}for(const o in r)o in n||(n[o]=void 0);return n}function Zs(t){return typeof t=="object"&&t!==null?t:{}}function $n(t,e,n){const r=t.$$.props[e];r!==void 0&&(t.$$.bound[r]=n,n(t.$$.ctx[r]))}function Ne(t){t&&t.c()}function Te(t,e,n){const{fragment:r,after_update:i}=t.$$;r&&r.m(e,n),bt(()=>{const s=t.$$.on_mount.map(oa).filter(Et);t.$$.on_destroy?t.$$.on_destroy.push(...s):it(s),t.$$.on_mount=[]}),i.forEach(bt)}function Ie(t,e){const n=t.$$;n.fragment!==null&&(b1(n.after_update),it(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function _1(t,e){t.$$.dirty[0]===-1&&(Zn.push(t),ha(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function Qe(t,e,n,r,i,s,o=null,l=[-1]){const a=Or;Sr(t);const d=t.$$={fragment:null,ctx:[],props:s,update:oe,not_equal:i,bound:go(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(a?a.$$.context:[])),callbacks:go(),dirty:l,skip_bound:!1,root:e.target||a.$$.root};o&&o(d.root);let u=!1;if(d.ctx=n?n(t,e.props||{},(c,h,...b)=>{const m=b.length?b[0]:h;return d.ctx&&i(d.ctx[c],d.ctx[c]=m)&&(!d.skip_bound&&d.bound[c]&&d.bound[c](m),u&&_1(t,c)),h}):[],d.update(),u=!0,it(d.before_update),d.fragment=r?r(d.ctx):!1,e.target){if(e.hydrate){const c=s1(e.target);d.fragment&&d.fragment.l(c),c.forEach(T)}else d.fragment&&d.fragment.c();e.intro&&P(t.$$.fragment),Te(t,e.target,e.anchor),O()}Sr(a)}let ma;typeof HTMLElement=="function"&&(ma=class extends HTMLElement{constructor(e,n,r){super();at(this,"$$ctor");at(this,"$$s");at(this,"$$c");at(this,"$$cn",!1);at(this,"$$d",{});at(this,"$$r",!1);at(this,"$$p_d",{});at(this,"$$l",{});at(this,"$$l_u",new Map);this.$$ctor=e,this.$$s=n,r&&this.attachShadow({mode:"open"})}addEventListener(e,n,r){if(this.$$l[e]=this.$$l[e]||[],this.$$l[e].push(n),this.$$c){const i=this.$$c.$on(e,n);this.$$l_u.set(n,i)}super.addEventListener(e,n,r)}removeEventListener(e,n,r){if(super.removeEventListener(e,n,r),this.$$c){const i=this.$$l_u.get(n);i&&(i(),this.$$l_u.delete(n))}}async connectedCallback(){if(this.$$cn=!0,!this.$$c){let e=function(s){return()=>{let o;return{c:function(){o=k("slot"),s!=="default"&&f(o,"name",s)},m:function(d,u){I(d,o,u)},d:function(d){d&&T(o)}}}};if(await Promise.resolve(),!this.$$cn||this.$$c)return;const n={},r=l1(this);for(const s of this.$$s)s in r&&(n[s]=[e(s)]);for(const s of this.attributes){const o=this.$$g_p(s.name);o in this.$$d||(this.$$d[o]=ki(o,s.value,this.$$p_d,"toProp"))}for(const s in this.$$p_d)!(s in this.$$d)&&this[s]!==void 0&&(this.$$d[s]=this[s],delete this[s]);this.$$c=new this.$$ctor({target:this.shadowRoot||this,props:{...this.$$d,$$slots:n,$$scope:{ctx:[]}}});const i=()=>{this.$$r=!0;for(const s in this.$$p_d)if(this.$$d[s]=this.$$c.$$.ctx[this.$$c.$$.props[s]],this.$$p_d[s].reflect){const o=ki(s,this.$$d[s],this.$$p_d,"toAttribute");o==null?this.removeAttribute(this.$$p_d[s].attribute||s):this.setAttribute(this.$$p_d[s].attribute||s,o)}this.$$r=!1};this.$$c.$$.after_update.push(i),i();for(const s in this.$$l)for(const o of this.$$l[s]){const l=this.$$c.$on(s,o);this.$$l_u.set(o,l)}this.$$l={}}}attributeChangedCallback(e,n,r){var i;this.$$r||(e=this.$$g_p(e),this.$$d[e]=ki(e,r,this.$$p_d,"toProp"),(i=this.$$c)==null||i.$set({[e]:this.$$d[e]}))}disconnectedCallback(){this.$$cn=!1,Promise.resolve().then(()=>{!this.$$cn&&this.$$c&&(this.$$c.$destroy(),this.$$c=void 0)})}$$g_p(e){return Object.keys(this.$$p_d).find(n=>this.$$p_d[n].attribute===e||!this.$$p_d[n].attribute&&n.toLowerCase()===e)||e}});function ki(t,e,n,r){var s;const i=(s=n[t])==null?void 0:s.type;if(e=i==="Boolean"&&typeof e!="boolean"?e!=null:e,!r||!n[t])return e;if(r==="toAttribute")switch(i){case"Object":case"Array":return e==null?null:JSON.stringify(e);case"Boolean":return e?"":null;case"Number":return e??null;default:return e}else switch(i){case"Object":case"Array":return e&&JSON.parse(e);case"Boolean":return e;case"Number":return e!=null?+e:e;default:return e}}function et(t,e,n,r,i,s){let o=class extends ma{constructor(){super(t,n,i),this.$$p_d=e}static get observedAttributes(){return Object.keys(e).map(l=>(e[l].attribute||l).toLowerCase())}};return Object.keys(e).forEach(l=>{Object.defineProperty(o.prototype,l,{get(){return this.$$c&&l in this.$$c?this.$$c[l]:this.$$d[l]},set(a){var d;a=ki(l,a,e),this.$$d[l]=a,(d=this.$$c)==null||d.$set({[l]:a})}})}),r.forEach(l=>{Object.defineProperty(o.prototype,l,{get(){var a;return(a=this.$$c)==null?void 0:a[l]}})}),t.element=o,o}class tt{constructor(){at(this,"$$");at(this,"$$set")}$destroy(){Ie(this,1),this.$destroy=oe}$on(e,n){if(!Et(n))return oe;const r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(n),()=>{const i=r.indexOf(n);i!==-1&&r.splice(i,1)}}$set(e){this.$$set&&!t1(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const y1="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(y1);const Hs="-";function w1(t){const e=C1(t),{conflictingClassGroups:n,conflictingClassGroupModifiers:r}=t;function i(o){const l=o.split(Hs);return l[0]===""&&l.length!==1&&l.shift(),ga(l,e)||k1(o)}function s(o,l){const a=n[o]||[];return l&&r[o]?[...a,...r[o]]:a}return{getClassGroupId:i,getConflictingClassGroupIds:s}}function ga(t,e){var o;if(t.length===0)return e.classGroupId;const n=t[0],r=e.nextPart.get(n),i=r?ga(t.slice(1),r):void 0;if(i)return i;if(e.validators.length===0)return;const s=t.join(Hs);return(o=e.validators.find(({validator:l})=>l(s)))==null?void 0:o.classGroupId}const $o=/^\[(.+)\]$/;function k1(t){if($o.test(t)){const e=$o.exec(t)[1],n=e==null?void 0:e.substring(0,e.indexOf(":"));if(n)return"arbitrary.."+n}}function C1(t){const{theme:e,prefix:n}=t,r={nextPart:new Map,validators:[]};return x1(Object.entries(t.classGroups),n).forEach(([s,o])=>{$s(o,r,s,e)}),r}function $s(t,e,n,r){t.forEach(i=>{if(typeof i=="string"){const s=i===""?e:_o(e,i);s.classGroupId=n;return}if(typeof i=="function"){if(S1(i)){$s(i(r),e,n,r);return}e.validators.push({validator:i,classGroupId:n});return}Object.entries(i).forEach(([s,o])=>{$s(o,_o(e,s),n,r)})})}function _o(t,e){let n=t;return e.split(Hs).forEach(r=>{n.nextPart.has(r)||n.nextPart.set(r,{nextPart:new Map,validators:[]}),n=n.nextPart.get(r)}),n}function S1(t){return t.isThemeGetter}function x1(t,e){return e?t.map(([n,r])=>{const i=r.map(s=>typeof s=="string"?e+s:typeof s=="object"?Object.fromEntries(Object.entries(s).map(([o,l])=>[e+o,l])):s);return[n,i]}):t}function E1(t){if(t<1)return{get:()=>{},set:()=>{}};let e=0,n=new Map,r=new Map;function i(s,o){n.set(s,o),e++,e>t&&(e=0,r=n,n=new Map)}return{get(s){let o=n.get(s);if(o!==void 0)return o;if((o=r.get(s))!==void 0)return i(s,o),o},set(s,o){n.has(s)?n.set(s,o):i(s,o)}}}const ba="!";function T1(t){const e=t.separator,n=e.length===1,r=e[0],i=e.length;return function(o){const l=[];let a=0,d=0,u;for(let v=0;v<o.length;v++){let g=o[v];if(a===0){if(g===r&&(n||o.slice(v,v+i)===e)){l.push(o.slice(d,v)),d=v+i;continue}if(g==="/"){u=v;continue}}g==="["?a++:g==="]"&&a--}const c=l.length===0?o:o.substring(d),h=c.startsWith(ba),b=h?c.substring(1):c,m=u&&u>d?u-d:void 0;return{modifiers:l,hasImportantModifier:h,baseClassName:b,maybePostfixModifierPosition:m}}}function I1(t){if(t.length<=1)return t;const e=[];let n=[];return t.forEach(r=>{r[0]==="["?(e.push(...n.sort(),r),n=[]):n.push(r)}),e.push(...n.sort()),e}function O1(t){return{cache:E1(t.cacheSize),splitModifiers:T1(t),...w1(t)}}const P1=/\s+/;function M1(t,e){const{splitModifiers:n,getClassGroupId:r,getConflictingClassGroupIds:i}=e,s=new Set;return t.trim().split(P1).map(o=>{const{modifiers:l,hasImportantModifier:a,baseClassName:d,maybePostfixModifierPosition:u}=n(o);let c=r(u?d.substring(0,u):d),h=!!u;if(!c){if(!u)return{isTailwindClass:!1,originalClassName:o};if(c=r(d),!c)return{isTailwindClass:!1,originalClassName:o};h=!1}const b=I1(l).join(":");return{isTailwindClass:!0,modifierId:a?b+ba:b,classGroupId:c,originalClassName:o,hasPostfixModifier:h}}).reverse().filter(o=>{if(!o.isTailwindClass)return!0;const{modifierId:l,classGroupId:a,hasPostfixModifier:d}=o,u=l+a;return s.has(u)?!1:(s.add(u),i(a,d).forEach(c=>s.add(l+c)),!0)}).reverse().map(o=>o.originalClassName).join(" ")}function A1(){let t=0,e,n,r="";for(;t<arguments.length;)(e=arguments[t++])&&(n=va(e))&&(r&&(r+=" "),r+=n);return r}function va(t){if(typeof t=="string")return t;let e,n="";for(let r=0;r<t.length;r++)t[r]&&(e=va(t[r]))&&(n&&(n+=" "),n+=e);return n}function yo(t,...e){let n,r,i,s=o;function o(a){const d=e.reduce((u,c)=>c(u),t());return n=O1(d),r=n.cache.get,i=n.cache.set,s=l,l(a)}function l(a){const d=r(a);if(d)return d;const u=M1(a,n);return i(a,u),u}return function(){return s(A1.apply(null,arguments))}}function Le(t){const e=n=>n[t]||[];return e.isThemeGetter=!0,e}const $a=/^\[(?:([a-z-]+):)?(.+)\]$/i,N1=/^\d+\/\d+$/,z1=new Set(["px","full","screen"]),L1=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,F1=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,R1=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,j1=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,D1=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;function Jt(t){return Cn(t)||z1.has(t)||N1.test(t)}function an(t){return lr(t,"length",q1)}function Cn(t){return!!t&&!Number.isNaN(Number(t))}function gi(t){return lr(t,"number",Cn)}function $r(t){return!!t&&Number.isInteger(Number(t))}function B1(t){return t.endsWith("%")&&Cn(t.slice(0,-1))}function ge(t){return $a.test(t)}function dn(t){return L1.test(t)}const Z1=new Set(["length","size","percentage"]);function H1(t){return lr(t,Z1,_a)}function V1(t){return lr(t,"position",_a)}const U1=new Set(["image","url"]);function G1(t){return lr(t,U1,J1)}function W1(t){return lr(t,"",K1)}function _r(){return!0}function lr(t,e,n){const r=$a.exec(t);return r?r[1]?typeof e=="string"?r[1]===e:e.has(r[1]):n(r[2]):!1}function q1(t){return F1.test(t)&&!R1.test(t)}function _a(){return!1}function K1(t){return j1.test(t)}function J1(t){return D1.test(t)}function wo(){const t=Le("colors"),e=Le("spacing"),n=Le("blur"),r=Le("brightness"),i=Le("borderColor"),s=Le("borderRadius"),o=Le("borderSpacing"),l=Le("borderWidth"),a=Le("contrast"),d=Le("grayscale"),u=Le("hueRotate"),c=Le("invert"),h=Le("gap"),b=Le("gradientColorStops"),m=Le("gradientColorStopPositions"),v=Le("inset"),g=Le("margin"),y=Le("opacity"),$=Le("padding"),C=Le("saturate"),x=Le("scale"),A=Le("sepia"),K=Le("skew"),M=Le("space"),Q=Le("translate"),H=()=>["auto","contain","none"],Z=()=>["auto","hidden","clip","visible","scroll"],D=()=>["auto",ge,e],re=()=>[ge,e],j=()=>["",Jt,an],S=()=>["auto",Cn,ge],B=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],X=()=>["solid","dashed","dotted","double","none"],G=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],W=()=>["start","end","center","between","around","evenly","stretch"],ee=()=>["","0",ge],ce=()=>["auto","avoid","all","avoid-page","page","left","right","column"],ie=()=>[Cn,gi],te=()=>[Cn,ge];return{cacheSize:500,separator:":",theme:{colors:[_r],spacing:[Jt,an],blur:["none","",dn,ge],brightness:ie(),borderColor:[t],borderRadius:["none","","full",dn,ge],borderSpacing:re(),borderWidth:j(),contrast:ie(),grayscale:ee(),hueRotate:te(),invert:ee(),gap:re(),gradientColorStops:[t],gradientColorStopPositions:[B1,an],inset:D(),margin:D(),opacity:ie(),padding:re(),saturate:ie(),scale:ie(),sepia:ee(),skew:te(),space:re(),translate:re()},classGroups:{aspect:[{aspect:["auto","square","video",ge]}],container:["container"],columns:[{columns:[dn]}],"break-after":[{"break-after":ce()}],"break-before":[{"break-before":ce()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...B(),ge]}],overflow:[{overflow:Z()}],"overflow-x":[{"overflow-x":Z()}],"overflow-y":[{"overflow-y":Z()}],overscroll:[{overscroll:H()}],"overscroll-x":[{"overscroll-x":H()}],"overscroll-y":[{"overscroll-y":H()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[v]}],"inset-x":[{"inset-x":[v]}],"inset-y":[{"inset-y":[v]}],start:[{start:[v]}],end:[{end:[v]}],top:[{top:[v]}],right:[{right:[v]}],bottom:[{bottom:[v]}],left:[{left:[v]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",$r,ge]}],basis:[{basis:D()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",ge]}],grow:[{grow:ee()}],shrink:[{shrink:ee()}],order:[{order:["first","last","none",$r,ge]}],"grid-cols":[{"grid-cols":[_r]}],"col-start-end":[{col:["auto",{span:["full",$r,ge]},ge]}],"col-start":[{"col-start":S()}],"col-end":[{"col-end":S()}],"grid-rows":[{"grid-rows":[_r]}],"row-start-end":[{row:["auto",{span:[$r,ge]},ge]}],"row-start":[{"row-start":S()}],"row-end":[{"row-end":S()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",ge]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",ge]}],gap:[{gap:[h]}],"gap-x":[{"gap-x":[h]}],"gap-y":[{"gap-y":[h]}],"justify-content":[{justify:["normal",...W()]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal",...W(),"baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[...W(),"baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[$]}],px:[{px:[$]}],py:[{py:[$]}],ps:[{ps:[$]}],pe:[{pe:[$]}],pt:[{pt:[$]}],pr:[{pr:[$]}],pb:[{pb:[$]}],pl:[{pl:[$]}],m:[{m:[g]}],mx:[{mx:[g]}],my:[{my:[g]}],ms:[{ms:[g]}],me:[{me:[g]}],mt:[{mt:[g]}],mr:[{mr:[g]}],mb:[{mb:[g]}],ml:[{ml:[g]}],"space-x":[{"space-x":[M]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[M]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",ge,e]}],"min-w":[{"min-w":[ge,e,"min","max","fit"]}],"max-w":[{"max-w":[ge,e,"none","full","min","max","fit","prose",{screen:[dn]},dn]}],h:[{h:[ge,e,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[ge,e,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[ge,e,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[ge,e,"auto","min","max","fit"]}],"font-size":[{text:["base",dn,an]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",gi]}],"font-family":[{font:[_r]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractons"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",ge]}],"line-clamp":[{"line-clamp":["none",Cn,gi]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",Jt,ge]}],"list-image":[{"list-image":["none",ge]}],"list-style-type":[{list:["none","disc","decimal",ge]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[t]}],"placeholder-opacity":[{"placeholder-opacity":[y]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[t]}],"text-opacity":[{"text-opacity":[y]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...X(),"wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",Jt,an]}],"underline-offset":[{"underline-offset":["auto",Jt,ge]}],"text-decoration-color":[{decoration:[t]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:re()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",ge]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",ge]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[y]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...B(),V1]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",H1]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},G1]}],"bg-color":[{bg:[t]}],"gradient-from-pos":[{from:[m]}],"gradient-via-pos":[{via:[m]}],"gradient-to-pos":[{to:[m]}],"gradient-from":[{from:[b]}],"gradient-via":[{via:[b]}],"gradient-to":[{to:[b]}],rounded:[{rounded:[s]}],"rounded-s":[{"rounded-s":[s]}],"rounded-e":[{"rounded-e":[s]}],"rounded-t":[{"rounded-t":[s]}],"rounded-r":[{"rounded-r":[s]}],"rounded-b":[{"rounded-b":[s]}],"rounded-l":[{"rounded-l":[s]}],"rounded-ss":[{"rounded-ss":[s]}],"rounded-se":[{"rounded-se":[s]}],"rounded-ee":[{"rounded-ee":[s]}],"rounded-es":[{"rounded-es":[s]}],"rounded-tl":[{"rounded-tl":[s]}],"rounded-tr":[{"rounded-tr":[s]}],"rounded-br":[{"rounded-br":[s]}],"rounded-bl":[{"rounded-bl":[s]}],"border-w":[{border:[l]}],"border-w-x":[{"border-x":[l]}],"border-w-y":[{"border-y":[l]}],"border-w-s":[{"border-s":[l]}],"border-w-e":[{"border-e":[l]}],"border-w-t":[{"border-t":[l]}],"border-w-r":[{"border-r":[l]}],"border-w-b":[{"border-b":[l]}],"border-w-l":[{"border-l":[l]}],"border-opacity":[{"border-opacity":[y]}],"border-style":[{border:[...X(),"hidden"]}],"divide-x":[{"divide-x":[l]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[l]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[y]}],"divide-style":[{divide:X()}],"border-color":[{border:[i]}],"border-color-x":[{"border-x":[i]}],"border-color-y":[{"border-y":[i]}],"border-color-t":[{"border-t":[i]}],"border-color-r":[{"border-r":[i]}],"border-color-b":[{"border-b":[i]}],"border-color-l":[{"border-l":[i]}],"divide-color":[{divide:[i]}],"outline-style":[{outline:["",...X()]}],"outline-offset":[{"outline-offset":[Jt,ge]}],"outline-w":[{outline:[Jt,an]}],"outline-color":[{outline:[t]}],"ring-w":[{ring:j()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[t]}],"ring-opacity":[{"ring-opacity":[y]}],"ring-offset-w":[{"ring-offset":[Jt,an]}],"ring-offset-color":[{"ring-offset":[t]}],shadow:[{shadow:["","inner","none",dn,W1]}],"shadow-color":[{shadow:[_r]}],opacity:[{opacity:[y]}],"mix-blend":[{"mix-blend":[...G(),"plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":G()}],filter:[{filter:["","none"]}],blur:[{blur:[n]}],brightness:[{brightness:[r]}],contrast:[{contrast:[a]}],"drop-shadow":[{"drop-shadow":["","none",dn,ge]}],grayscale:[{grayscale:[d]}],"hue-rotate":[{"hue-rotate":[u]}],invert:[{invert:[c]}],saturate:[{saturate:[C]}],sepia:[{sepia:[A]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[n]}],"backdrop-brightness":[{"backdrop-brightness":[r]}],"backdrop-contrast":[{"backdrop-contrast":[a]}],"backdrop-grayscale":[{"backdrop-grayscale":[d]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[u]}],"backdrop-invert":[{"backdrop-invert":[c]}],"backdrop-opacity":[{"backdrop-opacity":[y]}],"backdrop-saturate":[{"backdrop-saturate":[C]}],"backdrop-sepia":[{"backdrop-sepia":[A]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[o]}],"border-spacing-x":[{"border-spacing-x":[o]}],"border-spacing-y":[{"border-spacing-y":[o]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",ge]}],duration:[{duration:te()}],ease:[{ease:["linear","in","out","in-out",ge]}],delay:[{delay:te()}],animate:[{animate:["none","spin","ping","pulse","bounce",ge]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[x]}],"scale-x":[{"scale-x":[x]}],"scale-y":[{"scale-y":[x]}],rotate:[{rotate:[$r,ge]}],"translate-x":[{"translate-x":[Q]}],"translate-y":[{"translate-y":[Q]}],"skew-x":[{"skew-x":[K]}],"skew-y":[{"skew-y":[K]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",ge]}],accent:[{accent:["auto",t]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",ge]}],"caret-color":[{caret:[t]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":re()}],"scroll-mx":[{"scroll-mx":re()}],"scroll-my":[{"scroll-my":re()}],"scroll-ms":[{"scroll-ms":re()}],"scroll-me":[{"scroll-me":re()}],"scroll-mt":[{"scroll-mt":re()}],"scroll-mr":[{"scroll-mr":re()}],"scroll-mb":[{"scroll-mb":re()}],"scroll-ml":[{"scroll-ml":re()}],"scroll-p":[{"scroll-p":re()}],"scroll-px":[{"scroll-px":re()}],"scroll-py":[{"scroll-py":re()}],"scroll-ps":[{"scroll-ps":re()}],"scroll-pe":[{"scroll-pe":re()}],"scroll-pt":[{"scroll-pt":re()}],"scroll-pr":[{"scroll-pr":re()}],"scroll-pb":[{"scroll-pb":re()}],"scroll-pl":[{"scroll-pl":re()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",ge]}],fill:[{fill:[t,"none"]}],"stroke-w":[{stroke:[Jt,an,gi]}],stroke:[{stroke:[t,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}}function X1(t,{cacheSize:e,prefix:n,separator:r,extend:i={},override:s={}}){Ci(t,"cacheSize",e),Ci(t,"prefix",n),Ci(t,"separator",r);for(const o in s)Y1(t[o],s[o]);for(const o in i)Q1(t[o],i[o]);return t}function Ci(t,e,n){n!==void 0&&(t[e]=n)}function Y1(t,e){if(e)for(const n in e)Ci(t,n,e[n])}function Q1(t,e){if(e)for(const n in e){const r=e[n];r!==void 0&&(t[n]=(t[n]||[]).concat(r))}}function e0(t,...e){return typeof t=="function"?yo(wo,t,...e):yo(()=>X1(wo(),t),...e)}const t0=Le("colors"),Kn=e0({extend:{classGroups:{"bg-color":[{"ripple-bg":[t0]}]}}});function ds(t){let e,n,r,i,s,o;const l=t[10].default,a=dt(l,t,t[9],null);let d=[t[3],{class:t[2]},{href:t[0]},{role:n=t[0]?"link":"button"},{type:r=t[0]?void 0:t[1]}],u={};for(let c=0;c<d.length;c+=1)u=gt(u,d[c]);return{c(){e=k(t[0]?"a":"button"),a&&a.c(),vo(t[0]?"a":"button")(e,u)},m(c,h){I(c,e,h),a&&a.m(e,null),i=!0,s||(o=[he(e,"change",t[11]),he(e,"click",t[12]),he(e,"keydown",t[13]),he(e,"keyup",t[14]),he(e,"mouseenter",t[15]),he(e,"mouseleave",t[16]),he(e,"touchcancel",t[17]),he(e,"touchend",t[18]),he(e,"touchstart",t[19])],s=!0)},p(c,h){a&&a.p&&(!i||h&512)&&ct(a,l,c,c[9],i?ut(l,c[9],h,null):ft(c[9]),null),vo(c[0]?"a":"button")(e,u=ri(d,[h&8&&c[3],(!i||h&4)&&{class:c[2]},(!i||h&1)&&{href:c[0]},(!i||h&1&&n!==(n=c[0]?"link":"button"))&&{role:n},(!i||h&3&&r!==(r=c[0]?void 0:c[1]))&&{type:r}]))},i(c){i||(P(a,c),i=!0)},o(c){L(a,c),i=!1},d(c){c&&T(e),a&&a.d(c),s=!1,it(o)}}}function n0(t){let e=t[0]?"a":"button",n,r,i=(t[0]?"a":"button")&&ds(t);return{c(){i&&i.c(),n=kt()},m(s,o){i&&i.m(s,o),I(s,n,o),r=!0},p(s,[o]){s[0],e?qe(e,s[0]?"a":"button")?(i.d(1),i=ds(s),e=s[0]?"a":"button",i.c(),i.m(n.parentNode,n)):i.p(s,o):(i=ds(s),e=s[0]?"a":"button",i.c(),i.m(n.parentNode,n))},i(s){r||(P(i,s),r=!0)},o(s){L(i,s),r=!1},d(s){s&&T(n),i&&i.d(s)}}}function r0(t,e,n){let r,i,s,{$$slots:o={},$$scope:l}=e,{theme:a="neutral"}=e,{href:d=""}=e,{disabled:u=!1}=e,{target:c=""}=e,{type:h="button"}=e;const b={primary:{bgClass:"ripple-bg-primary  disabled:bg-primary/50",textClass:"text-primary-font"},secondary:{bgClass:"ripple-bg-secondary  disabled:bg-secondary-800",textClass:"text-primary-font"},accent:{bgClass:"ripple-bg-accent  disabled:bg-accent-300",textClass:"text-primary-font"},neutral:{bgClass:"ripple-bg-neutral  disabled:bg-neutral-300",textClass:"text-black disabled:opacity-50"},gray:{bgClass:"ripple-bg-zinc-100 disabled:bg-zinc-300",textClass:"text-black disabled:opacity-50"},danger:{bgClass:"ripple-bg-rose-500 disabled:bg-rose-300",textClass:"text-primary-font"},transparent:{bgClass:"ripple-bg-transparent",textClass:"text-primary-font"},none:{bgClass:"",textClass:""}};function m(M){Pe.call(this,t,M)}function v(M){Pe.call(this,t,M)}function g(M){Pe.call(this,t,M)}function y(M){Pe.call(this,t,M)}function $(M){Pe.call(this,t,M)}function C(M){Pe.call(this,t,M)}function x(M){Pe.call(this,t,M)}function A(M){Pe.call(this,t,M)}function K(M){Pe.call(this,t,M)}return t.$$set=M=>{n(3,e=gt(gt({},e),fn(M))),"theme"in M&&n(4,a=M.theme),"href"in M&&n(0,d=M.href),"disabled"in M&&n(5,u=M.disabled),"target"in M&&n(6,c=M.target),"type"in M&&n(1,h=M.type),"$$scope"in M&&n(9,l=M.$$scope)},t.$$.update=()=>{var M,Q;t.$$.dirty&16&&n(8,r=((M=b[a])==null?void 0:M.bgClass)??""),t.$$.dirty&16&&n(7,i=((Q=b[a])==null?void 0:Q.textClass)??""),n(2,s=Kn("flex gap-2 rounded-2xl border px-6 py-4 font-medium items-center 3xl:gap-4",r,i,e.class))},e=fn(e),[d,h,s,e,a,u,c,i,r,l,o,m,v,g,y,$,C,x,A,K]}class Zt extends tt{constructor(e){super(),Qe(this,e,r0,n0,qe,{theme:4,href:0,disabled:5,target:6,type:1})}get theme(){return this.$$.ctx[4]}set theme(e){this.$$set({theme:e}),O()}get href(){return this.$$.ctx[0]}set href(e){this.$$set({href:e}),O()}get disabled(){return this.$$.ctx[5]}set disabled(e){this.$$set({disabled:e}),O()}get target(){return this.$$.ctx[6]}set target(e){this.$$set({target:e}),O()}get type(){return this.$$.ctx[1]}set type(e){this.$$set({type:e}),O()}}et(Zt,{theme:{},href:{},disabled:{type:"Boolean"},target:{},type:{}},["default"],[],!0);const ya=""+window.__assetPathResolver("assets/advanced-loding-CtF7_DSW.gif"),Vs=""+window.__assetPathResolver("assets/basic-loading-BwaRLiL8.gif"),ko="data:image/svg+xml,%3csvg%20width='66'%20height='23'%20viewBox='0%200%2066%2023'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M33.5597%207.30177H30.393C30.091%207.30177%2029.8467%207.54605%2029.8467%207.84807V8.53205C26.449%205.79612%2021.4745%206.32909%2018.7386%209.73125C16.0027%2013.129%2016.5356%2018.1034%2019.9378%2020.8393C22.8292%2023.1711%2026.9553%2023.1711%2029.8511%2020.8393V21.5233C29.8511%2021.8253%2030.0954%2022.0696%2030.3974%2022.0696H33.5642C33.8662%2022.0696%2034.1105%2021.8253%2034.1105%2021.5233V7.84363C34.1105%207.54161%2033.8662%207.29733%2033.5642%207.29733L33.5597%207.30177ZM24.8989%2018.3255C22.8869%2018.3255%2021.2569%2016.6954%2021.2569%2014.6835C21.2569%2012.6715%2022.8869%2011.0415%2024.8989%2011.0415C26.9109%2011.0415%2028.5409%2012.6715%2028.5409%2014.6835C28.5409%2016.691%2026.9109%2018.321%2024.8989%2018.3255Z'%20fill='%236F00FF'/%3e%3cpath%20d='M5.7961%202.98486H0.546299C0.24428%202.98486%200%203.22914%200%203.53116V22.1053C0%2022.4073%200.24428%2022.6516%200.546299%2022.6516H5.64509C11.077%2022.7404%2015.5495%2018.41%2015.6384%2012.9826C15.7272%207.55068%2011.3968%203.07813%205.96931%202.9893C5.91157%202.9893%205.85828%202.9893%205.80054%202.9893L5.7961%202.98486ZM5.6895%2018.2501H4.25491V7.38634H5.7961C8.79852%207.38634%2011.2324%209.82914%2011.228%2012.8316C11.228%2012.8671%2011.228%2012.9071%2011.228%2012.9426C11.1214%2015.9184%208.66528%2018.2723%205.6895%2018.2501Z'%20fill='%236F00FF'/%3e%3cpath%20d='M65.4494%207.30177H62.2826C61.9806%207.30177%2061.7363%207.54605%2061.7363%207.84807V8.53205C58.3386%205.79612%2053.3642%206.32909%2050.6282%209.73125C47.8923%2013.129%2048.4253%2018.1034%2051.8274%2020.8393C54.7188%2023.1711%2058.8449%2023.1711%2061.7408%2020.8393V21.5233C61.7408%2021.8253%2061.985%2022.0696%2062.2871%2022.0696H65.4538C65.7558%2022.0696%2066.0001%2021.8253%2066.0001%2021.5233V7.84363C66.0001%207.54161%2065.7558%207.29733%2065.4538%207.29733L65.4494%207.30177ZM56.7885%2018.3255C54.7766%2018.3255%2053.1466%2016.6954%2053.1466%2014.6835C53.1466%2012.6715%2054.7766%2011.0415%2056.7885%2011.0415C58.8005%2011.0415%2060.4305%2012.6715%2060.4305%2014.6835C60.4305%2016.691%2058.8005%2018.321%2056.7885%2018.3255Z'%20fill='%236F00FF'/%3e%3cpath%20d='M40.2172%2022.0607H36.9084C36.6063%2022.0607%2036.3621%2021.8164%2036.3621%2021.5144V0.546299C36.3621%200.24428%2036.6063%200%2036.9084%200H40.2172C40.5193%200%2040.7635%200.24428%2040.7635%200.546299V21.5144C40.7635%2021.8164%2040.5193%2022.0607%2040.2172%2022.0607Z'%20fill='%236F00FF'/%3e%3cpath%20d='M46.8483%2022.0608H43.5395C43.2374%2022.0608%2042.9932%2021.8165%2042.9932%2021.5145V7.84366C42.9932%207.54164%2043.2374%207.29736%2043.5395%207.29736H46.8483C47.1504%207.29736%2047.3946%207.54164%2047.3946%207.84366V21.5145C47.3946%2021.8165%2047.1504%2022.0608%2046.8483%2022.0608Z'%20fill='%236F00FF'/%3e%3cpath%20d='M45.1918%205.11655C46.6047%205.11655%2047.7501%203.97117%2047.7501%202.55828C47.7501%201.14538%2046.6047%200%2045.1918%200C43.7789%200%2042.6335%201.14538%2042.6335%202.55828C42.6335%203.97117%2043.7789%205.11655%2045.1918%205.11655Z'%20fill='%236F00FF'/%3e%3c/svg%3e";function i0(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var wa={exports:{}},ka={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Ca={exports:{}},s0=function(e){return!e||typeof e=="string"?!1:e instanceof Array||Array.isArray(e)||e.length>=0&&(e.splice instanceof Function||Object.getOwnPropertyDescriptor(e,e.length-1)&&e.constructor.name!=="String")},o0=s0,l0=Array.prototype.concat,a0=Array.prototype.slice,Co=Ca.exports=function(e){for(var n=[],r=0,i=e.length;r<i;r++){var s=e[r];o0(s)?n=l0.call(n,a0.call(s)):n.push(s)}return n};Co.wrap=function(t){return function(){return t(Co(arguments))}};var d0=Ca.exports,xr=ka,ii=d0,Sa=Object.hasOwnProperty,xa=Object.create(null);for(var us in xr)Sa.call(xr,us)&&(xa[xr[us]]=us);var yt=wa.exports={to:{},get:{}};yt.get=function(t){var e=t.substring(0,3).toLowerCase(),n,r;switch(e){case"hsl":n=yt.get.hsl(t),r="hsl";break;case"hwb":n=yt.get.hwb(t),r="hwb";break;default:n=yt.get.rgb(t),r="rgb";break}return n?{model:r,value:n}:null};yt.get.rgb=function(t){if(!t)return null;var e=/^#([a-f0-9]{3,4})$/i,n=/^#([a-f0-9]{6})([a-f0-9]{2})?$/i,r=/^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/,i=/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/,s=/^(\w+)$/,o=[0,0,0,1],l,a,d;if(l=t.match(n)){for(d=l[2],l=l[1],a=0;a<3;a++){var u=a*2;o[a]=parseInt(l.slice(u,u+2),16)}d&&(o[3]=parseInt(d,16)/255)}else if(l=t.match(e)){for(l=l[1],d=l[3],a=0;a<3;a++)o[a]=parseInt(l[a]+l[a],16);d&&(o[3]=parseInt(d+d,16)/255)}else if(l=t.match(r)){for(a=0;a<3;a++)o[a]=parseInt(l[a+1],0);l[4]&&(l[5]?o[3]=parseFloat(l[4])*.01:o[3]=parseFloat(l[4]))}else if(l=t.match(i)){for(a=0;a<3;a++)o[a]=Math.round(parseFloat(l[a+1])*2.55);l[4]&&(l[5]?o[3]=parseFloat(l[4])*.01:o[3]=parseFloat(l[4]))}else return(l=t.match(s))?l[1]==="transparent"?[0,0,0,0]:Sa.call(xr,l[1])?(o=xr[l[1]],o[3]=1,o):null:null;for(a=0;a<3;a++)o[a]=cn(o[a],0,255);return o[3]=cn(o[3],0,1),o};yt.get.hsl=function(t){if(!t)return null;var e=/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/,n=t.match(e);if(n){var r=parseFloat(n[4]),i=(parseFloat(n[1])%360+360)%360,s=cn(parseFloat(n[2]),0,100),o=cn(parseFloat(n[3]),0,100),l=cn(isNaN(r)?1:r,0,1);return[i,s,o,l]}return null};yt.get.hwb=function(t){if(!t)return null;var e=/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/,n=t.match(e);if(n){var r=parseFloat(n[4]),i=(parseFloat(n[1])%360+360)%360,s=cn(parseFloat(n[2]),0,100),o=cn(parseFloat(n[3]),0,100),l=cn(isNaN(r)?1:r,0,1);return[i,s,o,l]}return null};yt.to.hex=function(){var t=ii(arguments);return"#"+bi(t[0])+bi(t[1])+bi(t[2])+(t[3]<1?bi(Math.round(t[3]*255)):"")};yt.to.rgb=function(){var t=ii(arguments);return t.length<4||t[3]===1?"rgb("+Math.round(t[0])+", "+Math.round(t[1])+", "+Math.round(t[2])+")":"rgba("+Math.round(t[0])+", "+Math.round(t[1])+", "+Math.round(t[2])+", "+t[3]+")"};yt.to.rgb.percent=function(){var t=ii(arguments),e=Math.round(t[0]/255*100),n=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return t.length<4||t[3]===1?"rgb("+e+"%, "+n+"%, "+r+"%)":"rgba("+e+"%, "+n+"%, "+r+"%, "+t[3]+")"};yt.to.hsl=function(){var t=ii(arguments);return t.length<4||t[3]===1?"hsl("+t[0]+", "+t[1]+"%, "+t[2]+"%)":"hsla("+t[0]+", "+t[1]+"%, "+t[2]+"%, "+t[3]+")"};yt.to.hwb=function(){var t=ii(arguments),e="";return t.length>=4&&t[3]!==1&&(e=", "+t[3]),"hwb("+t[0]+", "+t[1]+"%, "+t[2]+"%"+e+")"};yt.to.keyword=function(t){return xa[t.slice(0,3)]};function cn(t,e,n){return Math.min(Math.max(e,t),n)}function bi(t){var e=Math.round(t).toString(16).toUpperCase();return e.length<2?"0"+e:e}var u0=wa.exports;const Pr=ka,Ea={};for(const t of Object.keys(Pr))Ea[Pr[t]]=t;const Y={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};var Ta=Y;for(const t of Object.keys(Y)){if(!("channels"in Y[t]))throw new Error("missing channels property: "+t);if(!("labels"in Y[t]))throw new Error("missing channel labels property: "+t);if(Y[t].labels.length!==Y[t].channels)throw new Error("channel and label counts mismatch: "+t);const{channels:e,labels:n}=Y[t];delete Y[t].channels,delete Y[t].labels,Object.defineProperty(Y[t],"channels",{value:e}),Object.defineProperty(Y[t],"labels",{value:n})}Y.rgb.hsl=function(t){const e=t[0]/255,n=t[1]/255,r=t[2]/255,i=Math.min(e,n,r),s=Math.max(e,n,r),o=s-i;let l,a;s===i?l=0:e===s?l=(n-r)/o:n===s?l=2+(r-e)/o:r===s&&(l=4+(e-n)/o),l=Math.min(l*60,360),l<0&&(l+=360);const d=(i+s)/2;return s===i?a=0:d<=.5?a=o/(s+i):a=o/(2-s-i),[l,a*100,d*100]};Y.rgb.hsv=function(t){let e,n,r,i,s;const o=t[0]/255,l=t[1]/255,a=t[2]/255,d=Math.max(o,l,a),u=d-Math.min(o,l,a),c=function(h){return(d-h)/6/u+1/2};return u===0?(i=0,s=0):(s=u/d,e=c(o),n=c(l),r=c(a),o===d?i=r-n:l===d?i=1/3+e-r:a===d&&(i=2/3+n-e),i<0?i+=1:i>1&&(i-=1)),[i*360,s*100,d*100]};Y.rgb.hwb=function(t){const e=t[0],n=t[1];let r=t[2];const i=Y.rgb.hsl(t)[0],s=1/255*Math.min(e,Math.min(n,r));return r=1-1/255*Math.max(e,Math.max(n,r)),[i,s*100,r*100]};Y.rgb.cmyk=function(t){const e=t[0]/255,n=t[1]/255,r=t[2]/255,i=Math.min(1-e,1-n,1-r),s=(1-e-i)/(1-i)||0,o=(1-n-i)/(1-i)||0,l=(1-r-i)/(1-i)||0;return[s*100,o*100,l*100,i*100]};function c0(t,e){return(t[0]-e[0])**2+(t[1]-e[1])**2+(t[2]-e[2])**2}Y.rgb.keyword=function(t){const e=Ea[t];if(e)return e;let n=1/0,r;for(const i of Object.keys(Pr)){const s=Pr[i],o=c0(t,s);o<n&&(n=o,r=i)}return r};Y.keyword.rgb=function(t){return Pr[t]};Y.rgb.xyz=function(t){let e=t[0]/255,n=t[1]/255,r=t[2]/255;e=e>.04045?((e+.055)/1.055)**2.4:e/12.92,n=n>.04045?((n+.055)/1.055)**2.4:n/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;const i=e*.4124+n*.3576+r*.1805,s=e*.2126+n*.7152+r*.0722,o=e*.0193+n*.1192+r*.9505;return[i*100,s*100,o*100]};Y.rgb.lab=function(t){const e=Y.rgb.xyz(t);let n=e[0],r=e[1],i=e[2];n/=95.047,r/=100,i/=108.883,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,i=i>.008856?i**(1/3):7.787*i+16/116;const s=116*r-16,o=500*(n-r),l=200*(r-i);return[s,o,l]};Y.hsl.rgb=function(t){const e=t[0]/360,n=t[1]/100,r=t[2]/100;let i,s,o;if(n===0)return o=r*255,[o,o,o];r<.5?i=r*(1+n):i=r+n-r*n;const l=2*r-i,a=[0,0,0];for(let d=0;d<3;d++)s=e+1/3*-(d-1),s<0&&s++,s>1&&s--,6*s<1?o=l+(i-l)*6*s:2*s<1?o=i:3*s<2?o=l+(i-l)*(2/3-s)*6:o=l,a[d]=o*255;return a};Y.hsl.hsv=function(t){const e=t[0];let n=t[1]/100,r=t[2]/100,i=n;const s=Math.max(r,.01);r*=2,n*=r<=1?r:2-r,i*=s<=1?s:2-s;const o=(r+n)/2,l=r===0?2*i/(s+i):2*n/(r+n);return[e,l*100,o*100]};Y.hsv.rgb=function(t){const e=t[0]/60,n=t[1]/100;let r=t[2]/100;const i=Math.floor(e)%6,s=e-Math.floor(e),o=255*r*(1-n),l=255*r*(1-n*s),a=255*r*(1-n*(1-s));switch(r*=255,i){case 0:return[r,a,o];case 1:return[l,r,o];case 2:return[o,r,a];case 3:return[o,l,r];case 4:return[a,o,r];case 5:return[r,o,l]}};Y.hsv.hsl=function(t){const e=t[0],n=t[1]/100,r=t[2]/100,i=Math.max(r,.01);let s,o;o=(2-n)*r;const l=(2-n)*i;return s=n*i,s/=l<=1?l:2-l,s=s||0,o/=2,[e,s*100,o*100]};Y.hwb.rgb=function(t){const e=t[0]/360;let n=t[1]/100,r=t[2]/100;const i=n+r;let s;i>1&&(n/=i,r/=i);const o=Math.floor(6*e),l=1-r;s=6*e-o,o&1&&(s=1-s);const a=n+s*(l-n);let d,u,c;switch(o){default:case 6:case 0:d=l,u=a,c=n;break;case 1:d=a,u=l,c=n;break;case 2:d=n,u=l,c=a;break;case 3:d=n,u=a,c=l;break;case 4:d=a,u=n,c=l;break;case 5:d=l,u=n,c=a;break}return[d*255,u*255,c*255]};Y.cmyk.rgb=function(t){const e=t[0]/100,n=t[1]/100,r=t[2]/100,i=t[3]/100,s=1-Math.min(1,e*(1-i)+i),o=1-Math.min(1,n*(1-i)+i),l=1-Math.min(1,r*(1-i)+i);return[s*255,o*255,l*255]};Y.xyz.rgb=function(t){const e=t[0]/100,n=t[1]/100,r=t[2]/100;let i,s,o;return i=e*3.2406+n*-1.5372+r*-.4986,s=e*-.9689+n*1.8758+r*.0415,o=e*.0557+n*-.204+r*1.057,i=i>.0031308?1.055*i**(1/2.4)-.055:i*12.92,s=s>.0031308?1.055*s**(1/2.4)-.055:s*12.92,o=o>.0031308?1.055*o**(1/2.4)-.055:o*12.92,i=Math.min(Math.max(0,i),1),s=Math.min(Math.max(0,s),1),o=Math.min(Math.max(0,o),1),[i*255,s*255,o*255]};Y.xyz.lab=function(t){let e=t[0],n=t[1],r=t[2];e/=95.047,n/=100,r/=108.883,e=e>.008856?e**(1/3):7.787*e+16/116,n=n>.008856?n**(1/3):7.787*n+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;const i=116*n-16,s=500*(e-n),o=200*(n-r);return[i,s,o]};Y.lab.xyz=function(t){const e=t[0],n=t[1],r=t[2];let i,s,o;s=(e+16)/116,i=n/500+s,o=s-r/200;const l=s**3,a=i**3,d=o**3;return s=l>.008856?l:(s-16/116)/7.787,i=a>.008856?a:(i-16/116)/7.787,o=d>.008856?d:(o-16/116)/7.787,i*=95.047,s*=100,o*=108.883,[i,s,o]};Y.lab.lch=function(t){const e=t[0],n=t[1],r=t[2];let i;i=Math.atan2(r,n)*360/2/Math.PI,i<0&&(i+=360);const o=Math.sqrt(n*n+r*r);return[e,o,i]};Y.lch.lab=function(t){const e=t[0],n=t[1],i=t[2]/360*2*Math.PI,s=n*Math.cos(i),o=n*Math.sin(i);return[e,s,o]};Y.rgb.ansi16=function(t,e=null){const[n,r,i]=t;let s=e===null?Y.rgb.hsv(t)[2]:e;if(s=Math.round(s/50),s===0)return 30;let o=30+(Math.round(i/255)<<2|Math.round(r/255)<<1|Math.round(n/255));return s===2&&(o+=60),o};Y.hsv.ansi16=function(t){return Y.rgb.ansi16(Y.hsv.rgb(t),t[2])};Y.rgb.ansi256=function(t){const e=t[0],n=t[1],r=t[2];return e===n&&n===r?e<8?16:e>248?231:Math.round((e-8)/247*24)+232:16+36*Math.round(e/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)};Y.ansi16.rgb=function(t){let e=t%10;if(e===0||e===7)return t>50&&(e+=3.5),e=e/10.5*255,[e,e,e];const n=(~~(t>50)+1)*.5,r=(e&1)*n*255,i=(e>>1&1)*n*255,s=(e>>2&1)*n*255;return[r,i,s]};Y.ansi256.rgb=function(t){if(t>=232){const s=(t-232)*10+8;return[s,s,s]}t-=16;let e;const n=Math.floor(t/36)/5*255,r=Math.floor((e=t%36)/6)/5*255,i=e%6/5*255;return[n,r,i]};Y.rgb.hex=function(t){const n=(((Math.round(t[0])&255)<<16)+((Math.round(t[1])&255)<<8)+(Math.round(t[2])&255)).toString(16).toUpperCase();return"000000".substring(n.length)+n};Y.hex.rgb=function(t){const e=t.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!e)return[0,0,0];let n=e[0];e[0].length===3&&(n=n.split("").map(l=>l+l).join(""));const r=parseInt(n,16),i=r>>16&255,s=r>>8&255,o=r&255;return[i,s,o]};Y.rgb.hcg=function(t){const e=t[0]/255,n=t[1]/255,r=t[2]/255,i=Math.max(Math.max(e,n),r),s=Math.min(Math.min(e,n),r),o=i-s;let l,a;return o<1?l=s/(1-o):l=0,o<=0?a=0:i===e?a=(n-r)/o%6:i===n?a=2+(r-e)/o:a=4+(e-n)/o,a/=6,a%=1,[a*360,o*100,l*100]};Y.hsl.hcg=function(t){const e=t[1]/100,n=t[2]/100,r=n<.5?2*e*n:2*e*(1-n);let i=0;return r<1&&(i=(n-.5*r)/(1-r)),[t[0],r*100,i*100]};Y.hsv.hcg=function(t){const e=t[1]/100,n=t[2]/100,r=e*n;let i=0;return r<1&&(i=(n-r)/(1-r)),[t[0],r*100,i*100]};Y.hcg.rgb=function(t){const e=t[0]/360,n=t[1]/100,r=t[2]/100;if(n===0)return[r*255,r*255,r*255];const i=[0,0,0],s=e%1*6,o=s%1,l=1-o;let a=0;switch(Math.floor(s)){case 0:i[0]=1,i[1]=o,i[2]=0;break;case 1:i[0]=l,i[1]=1,i[2]=0;break;case 2:i[0]=0,i[1]=1,i[2]=o;break;case 3:i[0]=0,i[1]=l,i[2]=1;break;case 4:i[0]=o,i[1]=0,i[2]=1;break;default:i[0]=1,i[1]=0,i[2]=l}return a=(1-n)*r,[(n*i[0]+a)*255,(n*i[1]+a)*255,(n*i[2]+a)*255]};Y.hcg.hsv=function(t){const e=t[1]/100,n=t[2]/100,r=e+n*(1-e);let i=0;return r>0&&(i=e/r),[t[0],i*100,r*100]};Y.hcg.hsl=function(t){const e=t[1]/100,r=t[2]/100*(1-e)+.5*e;let i=0;return r>0&&r<.5?i=e/(2*r):r>=.5&&r<1&&(i=e/(2*(1-r))),[t[0],i*100,r*100]};Y.hcg.hwb=function(t){const e=t[1]/100,n=t[2]/100,r=e+n*(1-e);return[t[0],(r-e)*100,(1-r)*100]};Y.hwb.hcg=function(t){const e=t[1]/100,r=1-t[2]/100,i=r-e;let s=0;return i<1&&(s=(r-i)/(1-i)),[t[0],i*100,s*100]};Y.apple.rgb=function(t){return[t[0]/65535*255,t[1]/65535*255,t[2]/65535*255]};Y.rgb.apple=function(t){return[t[0]/255*65535,t[1]/255*65535,t[2]/255*65535]};Y.gray.rgb=function(t){return[t[0]/100*255,t[0]/100*255,t[0]/100*255]};Y.gray.hsl=function(t){return[0,0,t[0]]};Y.gray.hsv=Y.gray.hsl;Y.gray.hwb=function(t){return[0,100,t[0]]};Y.gray.cmyk=function(t){return[0,0,0,t[0]]};Y.gray.lab=function(t){return[t[0],0,0]};Y.gray.hex=function(t){const e=Math.round(t[0]/100*255)&255,r=((e<<16)+(e<<8)+e).toString(16).toUpperCase();return"000000".substring(r.length)+r};Y.rgb.gray=function(t){return[(t[0]+t[1]+t[2])/3/255*100]};const Ii=Ta;function f0(){const t={},e=Object.keys(Ii);for(let n=e.length,r=0;r<n;r++)t[e[r]]={distance:-1,parent:null};return t}function h0(t){const e=f0(),n=[t];for(e[t].distance=0;n.length;){const r=n.pop(),i=Object.keys(Ii[r]);for(let s=i.length,o=0;o<s;o++){const l=i[o],a=e[l];a.distance===-1&&(a.distance=e[r].distance+1,a.parent=r,n.unshift(l))}}return e}function p0(t,e){return function(n){return e(t(n))}}function m0(t,e){const n=[e[t].parent,t];let r=Ii[e[t].parent][t],i=e[t].parent;for(;e[i].parent;)n.unshift(e[i].parent),r=p0(Ii[e[i].parent][i],r),i=e[i].parent;return r.conversion=n,r}var g0=function(t){const e=h0(t),n={},r=Object.keys(e);for(let i=r.length,s=0;s<i;s++){const o=r[s];e[o].parent!==null&&(n[o]=m0(o,e))}return n};const _s=Ta,b0=g0,Hn={},v0=Object.keys(_s);function $0(t){const e=function(...n){const r=n[0];return r==null?r:(r.length>1&&(n=r),t(n))};return"conversion"in t&&(e.conversion=t.conversion),e}function _0(t){const e=function(...n){const r=n[0];if(r==null)return r;r.length>1&&(n=r);const i=t(n);if(typeof i=="object")for(let s=i.length,o=0;o<s;o++)i[o]=Math.round(i[o]);return i};return"conversion"in t&&(e.conversion=t.conversion),e}v0.forEach(t=>{Hn[t]={},Object.defineProperty(Hn[t],"channels",{value:_s[t].channels}),Object.defineProperty(Hn[t],"labels",{value:_s[t].labels});const e=b0(t);Object.keys(e).forEach(r=>{const i=e[r];Hn[t][r]=_0(i),Hn[t][r].raw=$0(i)})});var y0=Hn;const Vn=u0,_t=y0,Ia=["keyword","gray","hex"],ys={};for(const t of Object.keys(_t))ys[[..._t[t].labels].sort().join("")]=t;const Oi={};function Xe(t,e){if(!(this instanceof Xe))return new Xe(t,e);if(e&&e in Ia&&(e=null),e&&!(e in _t))throw new Error("Unknown model: "+e);let n,r;if(t==null)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(t instanceof Xe)this.model=t.model,this.color=[...t.color],this.valpha=t.valpha;else if(typeof t=="string"){const i=Vn.get(t);if(i===null)throw new Error("Unable to parse color from string: "+t);this.model=i.model,r=_t[this.model].channels,this.color=i.value.slice(0,r),this.valpha=typeof i.value[r]=="number"?i.value[r]:1}else if(t.length>0){this.model=e||"rgb",r=_t[this.model].channels;const i=Array.prototype.slice.call(t,0,r);this.color=ws(i,r),this.valpha=typeof t[r]=="number"?t[r]:1}else if(typeof t=="number")this.model="rgb",this.color=[t>>16&255,t>>8&255,t&255],this.valpha=1;else{this.valpha=1;const i=Object.keys(t);"alpha"in t&&(i.splice(i.indexOf("alpha"),1),this.valpha=typeof t.alpha=="number"?t.alpha:0);const s=i.sort().join("");if(!(s in ys))throw new Error("Unable to parse color from object: "+JSON.stringify(t));this.model=ys[s];const{labels:o}=_t[this.model],l=[];for(n=0;n<o.length;n++)l.push(t[o[n]]);this.color=ws(l)}if(Oi[this.model])for(r=_t[this.model].channels,n=0;n<r;n++){const i=Oi[this.model][n];i&&(this.color[n]=i(this.color[n]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}Xe.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(t){let e=this.model in Vn.to?this:this.rgb();e=e.round(typeof t=="number"?t:1);const n=e.valpha===1?e.color:[...e.color,this.valpha];return Vn.to[e.model](n)},percentString(t){const e=this.rgb().round(typeof t=="number"?t:1),n=e.valpha===1?e.color:[...e.color,this.valpha];return Vn.to.rgb.percent(n)},array(){return this.valpha===1?[...this.color]:[...this.color,this.valpha]},object(){const t={},{channels:e}=_t[this.model],{labels:n}=_t[this.model];for(let r=0;r<e;r++)t[n[r]]=this.color[r];return this.valpha!==1&&(t.alpha=this.valpha),t},unitArray(){const t=this.rgb().color;return t[0]/=255,t[1]/=255,t[2]/=255,this.valpha!==1&&t.push(this.valpha),t},unitObject(){const t=this.rgb().object();return t.r/=255,t.g/=255,t.b/=255,this.valpha!==1&&(t.alpha=this.valpha),t},round(t){return t=Math.max(t||0,0),new Xe([...this.color.map(k0(t)),this.valpha],this.model)},alpha(t){return t!==void 0?new Xe([...this.color,Math.max(0,Math.min(1,t))],this.model):this.valpha},red:Ve("rgb",0,Je(255)),green:Ve("rgb",1,Je(255)),blue:Ve("rgb",2,Je(255)),hue:Ve(["hsl","hsv","hsl","hwb","hcg"],0,t=>(t%360+360)%360),saturationl:Ve("hsl",1,Je(100)),lightness:Ve("hsl",2,Je(100)),saturationv:Ve("hsv",1,Je(100)),value:Ve("hsv",2,Je(100)),chroma:Ve("hcg",1,Je(100)),gray:Ve("hcg",2,Je(100)),white:Ve("hwb",1,Je(100)),wblack:Ve("hwb",2,Je(100)),cyan:Ve("cmyk",0,Je(100)),magenta:Ve("cmyk",1,Je(100)),yellow:Ve("cmyk",2,Je(100)),black:Ve("cmyk",3,Je(100)),x:Ve("xyz",0,Je(95.047)),y:Ve("xyz",1,Je(100)),z:Ve("xyz",2,Je(108.833)),l:Ve("lab",0,Je(100)),a:Ve("lab",1),b:Ve("lab",2),keyword(t){return t!==void 0?new Xe(t):_t[this.model].keyword(this.color)},hex(t){return t!==void 0?new Xe(t):Vn.to.hex(this.rgb().round().color)},hexa(t){if(t!==void 0)return new Xe(t);const e=this.rgb().round().color;let n=Math.round(this.valpha*255).toString(16).toUpperCase();return n.length===1&&(n="0"+n),Vn.to.hex(e)+n},rgbNumber(){const t=this.rgb().color;return(t[0]&255)<<16|(t[1]&255)<<8|t[2]&255},luminosity(){const t=this.rgb().color,e=[];for(const[n,r]of t.entries()){const i=r/255;e[n]=i<=.04045?i/12.92:((i+.055)/1.055)**2.4}return .2126*e[0]+.7152*e[1]+.0722*e[2]},contrast(t){const e=this.luminosity(),n=t.luminosity();return e>n?(e+.05)/(n+.05):(n+.05)/(e+.05)},level(t){const e=this.contrast(t);return e>=7?"AAA":e>=4.5?"AA":""},isDark(){const t=this.rgb().color;return(t[0]*2126+t[1]*7152+t[2]*722)/1e4<128},isLight(){return!this.isDark()},negate(){const t=this.rgb();for(let e=0;e<3;e++)t.color[e]=255-t.color[e];return t},lighten(t){const e=this.hsl();return e.color[2]+=e.color[2]*t,e},darken(t){const e=this.hsl();return e.color[2]-=e.color[2]*t,e},saturate(t){const e=this.hsl();return e.color[1]+=e.color[1]*t,e},desaturate(t){const e=this.hsl();return e.color[1]-=e.color[1]*t,e},whiten(t){const e=this.hwb();return e.color[1]+=e.color[1]*t,e},blacken(t){const e=this.hwb();return e.color[2]+=e.color[2]*t,e},grayscale(){const t=this.rgb().color,e=t[0]*.3+t[1]*.59+t[2]*.11;return Xe.rgb(e,e,e)},fade(t){return this.alpha(this.valpha-this.valpha*t)},opaquer(t){return this.alpha(this.valpha+this.valpha*t)},rotate(t){const e=this.hsl();let n=e.color[0];return n=(n+t)%360,n=n<0?360+n:n,e.color[0]=n,e},mix(t,e){if(!t||!t.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof t);const n=t.rgb(),r=this.rgb(),i=e===void 0?.5:e,s=2*i-1,o=n.alpha()-r.alpha(),l=((s*o===-1?s:(s+o)/(1+s*o))+1)/2,a=1-l;return Xe.rgb(l*n.red()+a*r.red(),l*n.green()+a*r.green(),l*n.blue()+a*r.blue(),n.alpha()*i+r.alpha()*(1-i))}};for(const t of Object.keys(_t)){if(Ia.includes(t))continue;const{channels:e}=_t[t];Xe.prototype[t]=function(...n){return this.model===t?new Xe(this):n.length>0?new Xe(n,t):new Xe([...C0(_t[this.model][t].raw(this.color)),this.valpha],t)},Xe[t]=function(...n){let r=n[0];return typeof r=="number"&&(r=ws(n,e)),new Xe(r,t)}}function w0(t,e){return Number(t.toFixed(e))}function k0(t){return function(e){return w0(e,t)}}function Ve(t,e,n){t=Array.isArray(t)?t:[t];for(const r of t)(Oi[r]||(Oi[r]=[]))[e]=n;return t=t[0],function(r){let i;return r!==void 0?(n&&(r=n(r)),i=this[t](),i.color[e]=r,i):(i=this[t]().color[e],n&&(i=n(i)),i)}}function Je(t){return function(e){return Math.max(0,Math.min(t,e))}}function C0(t){return Array.isArray(t)?t:[t]}function ws(t,e){for(let n=0;n<e;n++)typeof t[n]!="number"&&(t[n]=0);return t}var S0=Xe;const So=i0(S0);class x0{constructor(e={}){at(this,"colors");at(this,"layouts");at(this,"compiledCss");Object.assign(this,e),this.compiledCss=this.compileCss()}compileCss(){let e="";if(this.colors!=null)for(const[n,r]of Object.entries(this.colors))try{const i=So(r),s=So(i).hsl().array().map((o,l)=>l>0?`${o}%`:o).join(" ");e+=`--twc-${n}: ${s};`}catch{}return e}}const E0={version:4,country_calling_codes:{1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GG","IM","JE"],45:["DK"],46:["SE"],47:["NO","SJ"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU","CC","CX"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA","EH"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],246:["IO"],247:["AC"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH","TA"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI","AX"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],508:["PM"],509:["HT"],590:["GP","BL","MF"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],596:["MQ"],597:["SR"],598:["UY"],599:["CW","BQ"],670:["TL"],672:["NF"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],681:["WF"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],690:["TK"],691:["FM"],692:["MH"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],880:["BD"],886:["TW"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]},countries:{AC:["247","00","(?:[01589]\\d|[46])\\d{4}",[5,6]],AD:["376","00","(?:1|6\\d)\\d{7}|[135-9]\\d{5}",[6,8,9],[["(\\d{3})(\\d{3})","$1 $2",["[135-9]"]],["(\\d{4})(\\d{4})","$1 $2",["1"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]]],AE:["971","00","(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",[5,6,7,8,9,10,11,12],[["(\\d{3})(\\d{2,9})","$1 $2",["60|8"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[236]|[479][2-8]"],"0$1"],["(\\d{3})(\\d)(\\d{5})","$1 $2 $3",["[479]"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"]],"0"],AF:["93","00","[2-7]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"]],"0"],AG:["1","011","(?:268|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([457]\\d{6})$|1","268$1",0,"268"],AI:["1","011","(?:264|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2457]\\d{6})$|1","264$1",0,"264"],AL:["355","00","(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",[6,7,8,9],[["(\\d{3})(\\d{3,4})","$1 $2",["80|9"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["4[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2358][2-5]|4"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["[23578]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["6"],"0$1"]],"0"],AM:["374","00","(?:[1-489]\\d|55|60|77)\\d{6}",[8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[89]0"],"0 $1"],["(\\d{3})(\\d{5})","$1 $2",["2|3[12]"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["1|47"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[3-9]"],"0$1"]],"0"],AO:["244","00","[29]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[29]"]]]],AR:["54","00","(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",[10,11],[["(\\d{4})(\\d{2})(\\d{4})","$1 $2-$3",["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])","2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["1"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[68]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2-$3",["[23]"],"0$1",1],["(\\d)(\\d{4})(\\d{2})(\\d{4})","$2 15-$3-$4",["9(?:2[2-469]|3[3-578])","9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))","9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]","9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"],"0$1",0,"$1 $2 $3-$4"],["(\\d)(\\d{2})(\\d{4})(\\d{4})","$2 15-$3-$4",["91"],"0$1",0,"$1 $2 $3-$4"],["(\\d{3})(\\d{3})(\\d{5})","$1-$2-$3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{4})","$2 15-$3-$4",["9"],"0$1",0,"$1 $2 $3-$4"]],"0",0,"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?","9$1"],AS:["1","011","(?:[58]\\d\\d|684|900)\\d{7}",[10],0,"1",0,"([267]\\d{6})$|1","684$1",0,"684"],AT:["43","00","1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",[4,5,6,7,8,9,10,11,12,13],[["(\\d)(\\d{3,12})","$1 $2",["1(?:11|[2-9])"],"0$1"],["(\\d{3})(\\d{2})","$1 $2",["517"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["5[079]"],"0$1"],["(\\d{3})(\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:48|5[0-3579]|[6-9])|7(?:20|32|8)|[89]","(?:31|4)6|51|6(?:485|5[0-3579]|[6-9])|7(?:20|32|8)|[89]"],"0$1"],["(\\d{4})(\\d{3,9})","$1 $2",["[2-467]|5[2-6]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["5"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,7})","$1 $2 $3",["5"],"0$1"]],"0"],AU:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",[5,6,7,8,9,10,12],[["(\\d{2})(\\d{3,4})","$1 $2",["16"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["14|4"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:30|[89])"]]],"0",0,"(183[12])|0",0,0,0,[["(?:(?:2(?:(?:[0-26-9]\\d|3[0-8]|5[0135-9])\\d|4(?:[02-9]\\d|10))|3(?:(?:[0-3589]\\d|6[1-9]|7[0-35-9])\\d|4(?:[0-578]\\d|90))|7(?:[013-57-9]\\d|2[0-8])\\d)\\d\\d|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4])|[34]\\d\\d)|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,["163\\d{2,6}",[5,6,7,8,9]],["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],AW:["297","00","(?:[25-79]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[25-9]"]]]],AX:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",[5,6,7,8,9,10,11,12],0,"0",0,0,0,0,"18",0,"00"],AZ:["994","00","365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[28]|2|365|46","1[28]|2|365[45]|46","1[28]|2|365(?:4|5[02])|46"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[13-9]"],"0$1"]],"0"],BA:["387","00","6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["6[1-3]|[7-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2-$3",["[3-5]|6[56]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["6"],"0$1"]],"0"],BB:["1","011","(?:246|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","246$1",0,"246"],BD:["880","00","[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",[6,7,8,9,10],[["(\\d{2})(\\d{4,6})","$1-$2",["31[5-8]|[459]1"],"0$1"],["(\\d{3})(\\d{3,7})","$1-$2",["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"],"0$1"],["(\\d{4})(\\d{3,6})","$1-$2",["[13-9]|2[23]"],"0$1"],["(\\d)(\\d{7,8})","$1-$2",["2"],"0$1"]],"0"],BE:["32","00","4\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:80|9)0"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[239]|4[23]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[15-8]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4"],"0$1"]],"0"],BF:["226","00","(?:[025-7]\\d|44)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[024-7]"]]]],BG:["359","00","00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",[6,7,8,9,12],[["(\\d)(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["43[1-6]|70[1-9]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["(?:70|8)0"],"0$1"],["(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3",["43[1-7]|7"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[48]|9[08]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"]],"0"],BH:["973","00","[136-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[13679]|8[02-4679]"]]]],BI:["257","00","(?:[267]\\d|31)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2367]"]]]],BJ:["229","00","(?:01\\d|[24-689])\\d{7}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["0"]]]],BL:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:2[7-9]|3[3-7]|5[12]|87)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],BM:["1","011","(?:441|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","441$1",0,"441"],BN:["673","00","[2-578]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-578]"]]]],BO:["591","00(?:1\\d)?","8001\\d{5}|(?:[2-467]\\d|50)\\d{6}",[8,9],[["(\\d)(\\d{7})","$1 $2",["[235]|4[46]"]],["(\\d{8})","$1",["[67]"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["8"]]],"0",0,"0(1\\d)?"],BQ:["599","00","(?:[34]1|7\\d)\\d{5}",[7],0,0,0,0,0,0,"[347]"],BR:["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","[1-467]\\d{9,10}|55[0-46-9]\\d{8}|[34]\\d{7}|55\\d{7,8}|(?:5[0-46-9]|[89]\\d)\\d{7,9}",[8,9,10,11],[["(\\d{4})(\\d{4})","$1-$2",["300|4(?:0[02]|37|86)","300|4(?:0(?:0|20)|370|864)"]],["(\\d{3})(\\d{2,3})(\\d{4})","$1 $2 $3",["(?:[358]|90)0"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2-$3",["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"],"($1)"],["(\\d{2})(\\d{5})(\\d{4})","$1 $2-$3",["[16][1-9]|[2-57-9]"],"($1)"]],"0",0,"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?","$2"],BS:["1","011","(?:242|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([3-8]\\d{6})$|1","242$1",0,"242"],BT:["975","00","[178]\\d{7}|[2-8]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[2-6]|7[246]|8[2-4]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[67]|[78]"]]]],BW:["267","00","(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",[7,8,10],[["(\\d{2})(\\d{5})","$1 $2",["90"]],["(\\d{3})(\\d{4})","$1 $2",["[24-6]|3[15-9]"]],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37]"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["8"]]]],BY:["375","810","(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3})","$1 $2",["800"],"8 $1"],["(\\d{3})(\\d{2})(\\d{2,4})","$1 $2 $3",["800"],"8 $1"],["(\\d{4})(\\d{2})(\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["1(?:[56]|7[467])|2[1-3]"],"8 0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-4]"],"8 0$1"],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["[89]"],"8 $1"]],"8",0,"0|80?",0,0,0,0,"8~10"],BZ:["501","00","(?:0800\\d|[2-8])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1-$2",["[2-8]"]],["(\\d)(\\d{3})(\\d{4})(\\d{3})","$1-$2-$3-$4",["0"]]]],CA:["1","011","[2-9]\\d{9}|3\\d{6}",[7,10],0,"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|5[07]|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\d{6}",[10]],["",[10]],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",[10]],["900[2-9]\\d{6}",[10]],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\d{6}",[10]],0,["310\\d{4}",[7]],0,["600[2-9]\\d{6}",[10]]]],CC:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CD:["243","00","(?:(?:[189]|5\\d)\\d|2)\\d{7}|[1-68]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[1-6]"],"0$1"],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["5"],"0$1"]],"0"],CF:["236","00","(?:[27]\\d{3}|8776)\\d{4}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[278]"]]]],CG:["242","00","222\\d{6}|(?:0\\d|80)\\d{7}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[02]"]]]],CH:["41","00","8\\d{11}|[2-9]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8[047]|90"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]|81"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["8"],"0$1"]],"0"],CI:["225","00","[02]\\d{9}",[10],[["(\\d{2})(\\d{2})(\\d)(\\d{5})","$1 $2 $3 $4",["2"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3 $4",["0"]]]],CK:["682","00","[2-578]\\d{4}",[5],[["(\\d{2})(\\d{3})","$1 $2",["[2-578]"]]]],CL:["56","(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0","12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",[9,10,11],[["(\\d{5})(\\d{4})","$1 $2",["219","2196"],"($1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["60|809"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["44"]],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2[1-36]"],"($1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["9(?:10|[2-9])"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-8]|[1-9])"],"($1)"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["60|8"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{3})(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3 $4",["60"]]]],CM:["237","00","[26]\\d{8}|88\\d{6,7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["88"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[26]|88"]]]],CN:["86","00|1(?:[12]\\d|79)\\d\\d00","(?:(?:1[03-689]|2\\d)\\d\\d|6)\\d{8}|1\\d{10}|[126]\\d{6}(?:\\d(?:\\d{2})?)?|86\\d{5,6}|(?:[3-579]\\d|8[0-57-9])\\d{5,9}",[7,8,9,10,11,12],[["(\\d{2})(\\d{5,6})","$1 $2",["(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]","(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123","10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\d|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123"],"0$1"],["(\\d{3})(\\d{5,6})","$1 $2",["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]","(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]","85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])","85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["(?:4|80)0"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|2(?:[02-57-9]|1[1-9])","10|2(?:[02-57-9]|1[1-9])","10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"],"0$1",1],["(\\d{3})(\\d{7,8})","$1 $2",["9"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["80"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[3-578]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["1[3-9]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3 $4",["[12]"],"0$1",1]],"0",0,"(1(?:[12]\\d|79)\\d\\d)|0",0,0,0,0,"00"],CO:["57","00(?:4(?:[14]4|56)|[579])","(?:46|60\\d\\d)\\d{6}|(?:1\\d|[39])\\d{9}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["46"]],["(\\d{3})(\\d{7})","$1 $2",["6|90"],"($1)"],["(\\d{3})(\\d{7})","$1 $2",["3[0-357]|9[14]"]],["(\\d)(\\d{3})(\\d{7})","$1-$2-$3",["1"],"0$1",0,"$1 $2 $3"]],"0",0,"0([3579]|4(?:[14]4|56))?"],CR:["506","00","(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",[8,10],[["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[3-9]"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["[89]"]]],0,0,"(19(?:0[0-2468]|1[09]|20|66|77|99))"],CU:["53","119","(?:[2-7]|8\\d\\d)\\d{7}|[2-47]\\d{6}|[34]\\d{5}",[6,7,8,10],[["(\\d{2})(\\d{4,6})","$1 $2",["2[1-4]|[34]"],"(0$1)"],["(\\d)(\\d{6,7})","$1 $2",["7"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["[56]"],"0$1"],["(\\d{3})(\\d{7})","$1 $2",["8"],"0$1"]],"0"],CV:["238","0","(?:[2-59]\\d\\d|800)\\d{4}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2-589]"]]]],CW:["599","00","(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[3467]"]],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["9[4-8]"]]],0,0,0,0,0,"[69]"],CX:["61","001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011","1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",[6,7,8,9,10,12],0,"0",0,"([59]\\d{7})$|0","8$1",0,0,[["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",[9]],["4(?:79[01]|83[0-389]|94[0-478])\\d{5}|4(?:[0-36]\\d|4[047-9]|[58][0-24-9]|7[02-8]|9[0-37-9])\\d{6}",[9]],["180(?:0\\d{3}|2)\\d{3}",[7,10]],["190[0-26]\\d{6}",[10]],0,0,0,0,["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}",[9]],["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}",[6,8,10,12]]],"0011"],CY:["357","00","(?:[279]\\d|[58]0)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[257-9]"]]]],CZ:["420","00","(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",[9,10,11,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{2})","$1 $2 $3 $4",["96"]],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]]],DE:["49","00","[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",[4,5,6,7,8,9,10,11,12,13,14,15],[["(\\d{2})(\\d{3,13})","$1 $2",["3[02]|40|[68]9"],"0$1"],["(\\d{3})(\\d{3,12})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1","2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"],"0$1"],["(\\d{4})(\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["138"],"0$1"],["(\\d{5})(\\d{2,10})","$1 $2",["3"],"0$1"],["(\\d{3})(\\d{5,11})","$1 $2",["181"],"0$1"],["(\\d{3})(\\d)(\\d{4,10})","$1 $2 $3",["1(?:3|80)|9"],"0$1"],["(\\d{3})(\\d{7,8})","$1 $2",["1[67]"],"0$1"],["(\\d{3})(\\d{7,12})","$1 $2",["8"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["185","1850","18500"],"0$1"],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["18[68]"],"0$1"],["(\\d{4})(\\d{7})","$1 $2",["15[1279]"],"0$1"],["(\\d{5})(\\d{6})","$1 $2",["15[03568]","15(?:[0568]|3[13])"],"0$1"],["(\\d{3})(\\d{8})","$1 $2",["18"],"0$1"],["(\\d{3})(\\d{2})(\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"],"0$1"],["(\\d{4})(\\d{2})(\\d{7})","$1 $2 $3",["15[279]"],"0$1"],["(\\d{3})(\\d{2})(\\d{8})","$1 $2 $3",["15"],"0$1"]],"0"],DJ:["253","00","(?:2\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[27]"]]]],DK:["45","00","[2-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-9]"]]]],DM:["1","011","(?:[58]\\d\\d|767|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","767$1",0,"767"],DO:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,0,0,0,"8001|8[024]9"],DZ:["213","00","(?:[1-4]|[5-79]\\d|80)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["9"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-8]"],"0$1"]],"0"],EC:["593","00","1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",[8,9,10,11],[["(\\d)(\\d{3})(\\d{4})","$1 $2-$3",["[2-7]"],"(0$1)",0,"$1-$2-$3"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{3})(\\d{3,4})","$1 $2 $3",["1"]]],"0"],EE:["372","00","8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],["(\\d{4})(\\d{3,4})","$1 $2",["[45]|8(?:00|[1-49])","[45]|8(?:00[1-9]|[1-49])"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],EG:["20","00","[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",[8,9,10],[["(\\d)(\\d{7,8})","$1 $2",["[23]"],"0$1"],["(\\d{2})(\\d{6,7})","$1 $2",["1[35]|[4-6]|8[2468]|9[235-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{8})","$1 $2",["1"],"0$1"]],"0"],EH:["212","00","[5-8]\\d{8}",[9],0,"0",0,0,0,0,"528[89]"],ER:["291","00","[178]\\d{6}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[178]"],"0$1"]],"0"],ES:["34","00","[5-9]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[89]00"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-9]"]]]],ET:["251","00","(?:11|[2-579]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-579]"],"0$1"]],"0"],FI:["358","00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))","[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",[5,6,7,8,9,10,11,12],[["(\\d{5})","$1",["20[2-59]"],"0$1"],["(\\d{3})(\\d{3,7})","$1 $2",["(?:[1-3]0|[68])0|70[07-9]"],"0$1"],["(\\d{2})(\\d{4,8})","$1 $2",["[14]|2[09]|50|7[135]"],"0$1"],["(\\d{2})(\\d{6,10})","$1 $2",["7"],"0$1"],["(\\d)(\\d{4,9})","$1 $2",["(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9"],"0$1"]],"0",0,0,0,0,"1[03-79]|[2-9]",0,"00"],FJ:["679","0(?:0|52)","45\\d{5}|(?:0800\\d|[235-9])\\d{6}",[7,11],[["(\\d{3})(\\d{4})","$1 $2",["[235-9]|45"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],FK:["500","00","[2-7]\\d{4}",[5]],FM:["691","00","(?:[39]\\d\\d|820)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[389]"]]]],FO:["298","00","[2-9]\\d{5}",[6],[["(\\d{6})","$1",["[2-9]"]]],0,0,"(10(?:01|[12]0|88))"],FR:["33","00","[1-9]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0 $1"],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["[1-79]"],"0$1"]],"0"],GA:["241","00","(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",[7,8],[["(\\d)(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["11|[67]"],"0$1"]],0,0,"0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})","$1"],GB:["44","00","[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",[7,9,10],[["(\\d{3})(\\d{4})","$1 $2",["800","8001","80011","800111","8001111"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["845","8454","84546","845464"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["800"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["1(?:[2-69][02-9]|[78])"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[25]|7(?:0|6[02-9])","[25]|7(?:0|6(?:[03-9]|2[356]))"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[1389]"],"0$1"]],"0",0,"0|180020",0,0,0,[["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0-35])|4(?:(?:[0-5]\\d|70)\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[0-3]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",[9,10]],["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]],0," x"],GD:["1","011","(?:473|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","473$1",0,"473"],GE:["995","00","(?:[3-57]\\d\\d|800)\\d{6}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["32"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[57]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"]],"0"],GF:["594","00","(?:[56]94\\d|7093)\\d{5}|(?:80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]|9[47]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[89]"],"0$1"]],"0"],GG:["44","00","(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",[7,9,10],0,"0",0,"([25-9]\\d{5})$|0|180020","1481$1",0,0,[["1481[25-9]\\d{5}",[10]],["7(?:(?:781|839)\\d|911[17])\\d{5}",[10]],["80[08]\\d{7}|800\\d{6}|8001111"],["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",[7,10]],["70\\d{8}",[10]],0,["(?:3[0347]|55)\\d{8}",[10]],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}",[10]],["56\\d{8}",[10]]]],GH:["233","00","(?:[235]\\d{3}|800)\\d{5}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[235]"],"0$1"]],"0"],GI:["350","00","(?:[25]\\d|60)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["2"]]]],GL:["299","00","(?:19|[2-689]\\d|70)\\d{4}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["19|[2-9]"]]]],GM:["220","00","[2-9]\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],GN:["224","00","722\\d{6}|(?:3|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["3"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[67]"]]]],GP:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-79]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0",0,0,0,0,0,[["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\d)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],GQ:["240","00","222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235]"]],["(\\d{3})(\\d{6})","$1 $2",["[89]"]]]],GR:["30","00","5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",[10,11,12],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["21|7"]],["(\\d{4})(\\d{6})","$1 $2",["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2689]"]],["(\\d{3})(\\d{3,4})(\\d{5})","$1 $2 $3",["8"]]]],GT:["502","00","80\\d{6}|(?:1\\d{3}|[2-7])\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1 $2",["[2-8]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],GU:["1","011","(?:[58]\\d\\d|671|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","671$1",0,"671"],GW:["245","00","[49]\\d{8}|4\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["40"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"]]]],GY:["592","001","(?:[2-8]\\d{3}|9008)\\d{3}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],HK:["852","00(?:30|5[09]|[126-9]?)","8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",[5,6,7,8,9,11],[["(\\d{3})(\\d{2,5})","$1 $2",["900","9003"]],["(\\d{4})(\\d{4})","$1 $2",["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{3})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["9"]]],0,0,0,0,0,0,0,"00"],HN:["504","00","8\\d{10}|[237-9]\\d{7}",[8,11],[["(\\d{4})(\\d{4})","$1-$2",["[237-9]"]]]],HR:["385","00","[2-69]\\d{8}|80\\d{5,7}|[1-79]\\d{7}|6\\d{6}",[7,8,9],[["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["6[01]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{4})(\\d{3})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6|7[245]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-57]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"]],"0"],HT:["509","00","[2-589]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[2-589]"]]]],HU:["36","00","[235-7]\\d{8}|[1-9]\\d{7}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"],"(06 $1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"06 $1"]],"06"],ID:["62","00[89]","00[1-9]\\d{9,14}|(?:[1-36]|8\\d{5})\\d{6}|00\\d{9}|[1-9]\\d{8,10}|[2-9]\\d{7}",[7,8,9,10,11,12,13,14,15,16,17],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["15"]],["(\\d{2})(\\d{5,9})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\d{3})(\\d{5,7})","$1 $2",["800"],"0$1"],["(\\d{3})(\\d{5,8})","$1 $2",["[2-79]"],"(0$1)"],["(\\d{3})(\\d{3,4})(\\d{3})","$1-$2-$3",["8[1-35-9]"],"0$1"],["(\\d{3})(\\d{6,8})","$1 $2",["1"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["804"],"0$1"],["(\\d{3})(\\d)(\\d{3})(\\d{3})","$1 $2 $3 $4",["80"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1-$2-$3",["8"],"0$1"]],"0"],IE:["353","00","(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"],"(0$1)"],["(\\d{3})(\\d{5})","$1 $2",["[45]0"],"(0$1)"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["1"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2569]|4[1-69]|7[14]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["70"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["81"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[78]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["4"],"(0$1)"],["(\\d{2})(\\d)(\\d{3})(\\d{4})","$1 $2 $3 $4",["8"],"0$1"]],"0"],IL:["972","0(?:0|1[2-9])","1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",[7,8,9,10,11,12],[["(\\d{4})(\\d{3})","$1-$2",["125"]],["(\\d{4})(\\d{2})(\\d{2})","$1-$2-$3",["121"]],["(\\d)(\\d{3})(\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1-$2-$3",["12"]],["(\\d{4})(\\d{6})","$1-$2",["159"]],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})","$1-$2 $3-$4",["15"]]],"0"],IM:["44","00","1624\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([25-8]\\d{5})$|0|180020","1624$1",0,"74576|(?:16|7[56])24"],IN:["91","00","(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",[8,9,10,11,12,13],[["(\\d{8})","$1",["5(?:0|2[23]|3[03]|[67]1|88)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)","5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],0,1],["(\\d{4})(\\d{4,5})","$1 $2",["180","1800"],0,1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["140"],0,1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-7]|80[2-46]","11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])","11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"],"0$1",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]","1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"],"0$1",1],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807","1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]","1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"],"0$1",1],["(\\d{5})(\\d{5})","$1 $2",["[6-9]"],"0$1",1],["(\\d{4})(\\d{2,4})(\\d{4})","$1 $2 $3",["1(?:6|8[06])","1(?:6|8[06]0)"],0,1],["(\\d{4})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["18"],0,1]],"0"],IO:["246","00","3\\d{6}",[7],[["(\\d{3})(\\d{4})","$1 $2",["3"]]]],IQ:["964","00","(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-6]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],IR:["98","00","[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",[4,5,6,7,10],[["(\\d{4,5})","$1",["96"],"0$1"],["(\\d{2})(\\d{4,5})","$1 $2",["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["9"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["[1-8]"],"0$1"]],"0"],IS:["354","00|1(?:0(?:01|[12]0)|100)","(?:38\\d|[4-9])\\d{6}",[7,9],[["(\\d{3})(\\d{4})","$1 $2",["[4-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],IT:["39","00","0\\d{5,11}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:43|55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",[6,7,8,9,10,11,12],[["(\\d{2})(\\d{4,6})","$1 $2",["0[26]"]],["(\\d{3})(\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],["(\\d{4})(\\d{2,6})","$1 $2",["0(?:[13-579][2-46-8]|8[236-8])"]],["(\\d{4})(\\d{4})","$1 $2",["894"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[26]|5"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["1(?:44|[679])|[378]|43"]],["(\\d{3})(\\d{3,4})(\\d{4})","$1 $2 $3",["0[13-57-9][0159]|14"]],["(\\d{2})(\\d{4})(\\d{5})","$1 $2 $3",["0[26]"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[03]"]]],0,0,0,0,0,0,[["0(?:669[0-79]\\d{1,6}|831\\d{2,8})|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[2356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],["3[2-9]\\d{7,8}|(?:31|43)\\d{8}",[9,10]],["80(?:0\\d{3}|3)\\d{3}",[6,9]],["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}",[6,8,9,10]],["1(?:78\\d|99)\\d{6}",[9,10]],["3[2-8]\\d{9,10}",[11,12]],0,0,["55\\d{8}",[10]],["84(?:[08]\\d{3}|[17])\\d{3}",[6,9]]]],JE:["44","00","1534\\d{6}|(?:[3578]\\d|90)\\d{8}",[10],0,"0",0,"([0-24-8]\\d{5})$|0|180020","1534$1",0,0,[["1534[0-24-8]\\d{5}"],["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97\\d))\\d{5}"],["80(?:07(?:35|81)|8901)\\d{4}"],["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],["701511\\d{4}"],0,["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],["56\\d{8}"]]],JM:["1","011","(?:[58]\\d\\d|658|900)\\d{7}",[10],0,"1",0,0,0,0,"658|876"],JO:["962","00","(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",[8,9],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(\\d{3})(\\d{5,6})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["70"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["7"],"0$1"]],"0"],JP:["81","010","00[1-9]\\d{6,14}|[25-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",[8,9,10,11,12,13,14,15,16,17],[["(\\d{3})(\\d{3})(\\d{3})","$1-$2-$3",["(?:12|57|99)0"],"0$1"],["(\\d{4})(\\d)(\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]","1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["60"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2-$3",["3|4(?:2[09]|7[01])|6[1-9]","3|4(?:2(?:0|9[02-69])|7(?:0[019]|1))|6[1-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]","1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"],"0$1"],["(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3",["[14]|[289][2-9]|5[3-9]|7[2-4679]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1-$2-$3",["800"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[25-9]"],"0$1"]],"0",0,"(000[2569]\\d{4,6})$|(?:(?:003768)0?)|0","$1"],KE:["254","000","(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",[7,8,9,10],[["(\\d{2})(\\d{5,7})","$1 $2",["[24-6]"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[17]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0"],KG:["996","00","8\\d{9}|[235-9]\\d{8}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["3(?:1[346]|[24-79])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-79]|88"],"0$1"],["(\\d{3})(\\d{3})(\\d)(\\d{2,3})","$1 $2 $3 $4",["8"],"0$1"]],"0"],KH:["855","00[14-9]","1\\d{9}|[1-9]\\d{7,8}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],KI:["686","00","(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",[5,8],0,"0"],KM:["269","00","[3478]\\d{6}",[7],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[3478]"]]]],KN:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","869$1",0,"869"],KP:["850","00|99","85\\d{6}|(?:19\\d|[2-7])\\d{7}",[8,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2-7]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"]],"0"],KR:["82","00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\d{2})(\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"],"0$1"],["(\\d{4})(\\d{4})","$1-$2",["1"]],["(\\d)(\\d{3,4})(\\d{4})","$1-$2-$3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1-$2-$3",["[36]0|8"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1-$2-$3",["[1346]|5[1-5]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(\\d{2})(\\d{5})(\\d{4})","$1-$2-$3",["5"],"0$1"]],"0",0,"0(8(?:[1-46-8]|5\\d\\d))?"],KW:["965","00","18\\d{5}|(?:[2569]\\d|41)\\d{6}",[7,8],[["(\\d{4})(\\d{3,4})","$1 $2",["[169]|2(?:[235]|4[1-35-9])|52"]],["(\\d{3})(\\d{5})","$1 $2",["[245]"]]]],KY:["1","011","(?:345|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","345$1",0,"345"],KZ:["7","810","(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",[10,14],0,"8",0,0,0,0,"33622|7",0,"8~10"],LA:["856","00","[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",[8,9,10],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["3"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[23]"],"0$1"]],"0"],LB:["961","00","[27-9]\\d{7}|[13-9]\\d{6}",[7,8],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-6]|9[04-9])|8[02-9]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[27-9]"]]],"0"],LC:["1","011","(?:[58]\\d\\d|758|900)\\d{7}",[10],0,"1",0,"([2-8]\\d{6})$|1","758$1",0,"758"],LI:["423","00","[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",[7,9],[["(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3",["[2379]|8(?:0[09]|7)","[2379]|8(?:0(?:02|9)|7)"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["69"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]]],"0",0,"(1001)|0"],LK:["94","00","[1-9]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[1-689]"],"0$1"]],"0"],LR:["231","00","(?:[2457]\\d|33|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["4[67]|[56]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[2-578]"],"0$1"]],"0"],LS:["266","00","(?:[256]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2568]"]]]],LT:["370","00","(?:[3469]\\d|52|[78]0)\\d{6}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["52[0-7]"],"(0-$1)",1],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[7-9]"],"0 $1",1],["(\\d{2})(\\d{6})","$1 $2",["37|4(?:[15]|6[1-8])"],"(0-$1)",1],["(\\d{3})(\\d{5})","$1 $2",["[3-6]"],"(0-$1)",1]],"0",0,"[08]"],LU:["352","00","35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",[4,5,6,7,8,9,10,11],[["(\\d{2})(\\d{3})","$1 $2",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["20[2-689]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["80[01]|90[015]"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3 $4",["20"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})","$1 $2 $3 $4",["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]],0,0,"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"],LV:["371","00","(?:[268]\\d|78|90)\\d{6}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2679]|8[01]"]]]],LY:["218","00","[2-9]\\d{8}",[9],[["(\\d{2})(\\d{7})","$1-$2",["[2-9]"],"0$1"]],"0"],MA:["212","00","[5-8]\\d{8}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5[45]"],"0$1"],["(\\d{4})(\\d{5})","$1-$2",["5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)"],"0$1"],["(\\d{2})(\\d{7})","$1-$2",["8"],"0$1"],["(\\d{3})(\\d{6})","$1-$2",["[5-7]"],"0$1"]],"0",0,0,0,0,0,[["5(?:2(?:[0-25-79]\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[0167]\\d|2[0-8]|5[0-5]|8[0-7]))\\d{6}"],["80[0-7]\\d{6}"],["89\\d{7}"],0,0,0,0,["(?:592(?:4[0-2]|93)|80[89]\\d\\d)\\d{4}"]]],MC:["377","00","(?:[3489]|6\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["4"],"0$1"],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[389]"]],["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4 $5",["6"],"0$1"]],"0"],MD:["373","00","(?:[235-7]\\d|[89]0)\\d{6}",[8],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["22|3"],"0$1"],["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["[25-7]"],"0$1"]],"0"],ME:["382","00","(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[2-9]"],"0$1"]],"0"],MF:["590","00","(?:590\\d|7090)\\d{5}|(?:69|80|9\\d)\\d{7}",[9],0,"0",0,0,0,0,0,[["590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\d{4}"],["(?:69(?:0\\d\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\d)|6(?:1[016-9]|5[0-4]|[67]\\d))|7090[0-4])\\d{4}"],["80[0-5]\\d{6}"],0,0,0,0,0,["9(?:(?:39[5-7]|76[018])\\d|475[0-6])\\d{4}"]]],MG:["261","00","[23]\\d{8}",[9],[["(\\d{2})(\\d{2})(\\d{3})(\\d{2})","$1 $2 $3 $4",["[23]"],"0$1"]],"0",0,"([24-9]\\d{6})$|0","20$1"],MH:["692","011","329\\d{4}|(?:[256]\\d|45)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1-$2",["[2-6]"]]],"1"],MK:["389","00","[2-578]\\d{7}",[8],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2|34[47]|4(?:[37]7|5[47]|64)"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[347]"],"0$1"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["[58]"],"0$1"]],"0"],ML:["223","00","[24-9]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],MM:["95","00","1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",[6,7,8,9,10],[["(\\d)(\\d{2})(\\d{3})","$1 $2 $3",["16|2"],"0$1"],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]"],"0$1"],["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[12]|452|678|86","[12]|452|6788|86"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[4-7]|8[1-35]"],"0$1"],["(\\d)(\\d{3})(\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["92"],"0$1"],["(\\d)(\\d{5})(\\d{4})","$1 $2 $3",["9"],"0$1"]],"0"],MN:["976","001","[12]\\d{7,9}|[5-9]\\d{7}",[8,9,10],[["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["[12]1"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[5-9]"]],["(\\d{3})(\\d{5,6})","$1 $2",["[12]2[1-3]"],"0$1"],["(\\d{4})(\\d{5,6})","$1 $2",["[12](?:27|3[2-8]|4[2-68]|5[1-4689])","[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"],"0$1"],["(\\d{5})(\\d{4,5})","$1 $2",["[12]"],"0$1"]],"0"],MO:["853","00","0800\\d{3}|(?:28|[68]\\d)\\d{6}",[7,8],[["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{4})(\\d{4})","$1 $2",["[268]"]]]],MP:["1","011","[58]\\d{9}|(?:67|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","670$1",0,"670"],MQ:["596","00","(?:596\\d|7091)\\d{5}|(?:69|[89]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-79]|8(?:0[6-9]|[36])"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],MR:["222","00","(?:[2-4]\\d\\d|800)\\d{5}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],MS:["1","011","(?:[58]\\d\\d|664|900)\\d{7}",[10],0,"1",0,"([34]\\d{6})$|1","664$1",0,"664"],MT:["356","00","3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[2357-9]"]]]],MU:["230","0(?:0|[24-7]0|3[03])","(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",[7,8,10],[["(\\d{3})(\\d{4})","$1 $2",["[2-46]|8[013]"]],["(\\d{4})(\\d{4})","$1 $2",["[57]"]],["(\\d{5})(\\d{5})","$1 $2",["8"]]],0,0,0,0,0,0,0,"020"],MV:["960","0(?:0|19)","(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",[7,10],[["(\\d{3})(\\d{4})","$1-$2",["[34679]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"]]],0,0,0,0,0,0,0,"00"],MW:["265","00","(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",[7,9],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["1[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[137-9]"],"0$1"]],"0"],MX:["52","0[09]","[2-9]\\d{9}",[10],[["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["33|5[56]|81"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[2-9]"]]],0,0,0,0,0,0,0,"00"],MY:["60","00","1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1-$2 $3",["1(?:[02469]|[378][1-9]|53)|8","1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"],"0$1"],["(\\d)(\\d{4})(\\d{4})","$1-$2 $3",["3"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{4})","$1-$2-$3-$4",["1(?:[367]|80)"]],["(\\d{3})(\\d{3})(\\d{4})","$1-$2 $3",["15"],"0$1"],["(\\d{2})(\\d{4})(\\d{4})","$1-$2 $3",["1"],"0$1"]],"0"],MZ:["258","00","(?:2|8\\d)\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2|8[2-79]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["8"]]]],NA:["264","00","[68]\\d{7,8}",[8,9],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["88"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["87"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],NC:["687","00","(?:050|[2-57-9]\\d\\d)\\d{3}",[6],[["(\\d{2})(\\d{2})(\\d{2})","$1.$2.$3",["[02-57-9]"]]]],NE:["227","00","[027-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["08"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[089]|2[013]|7[0467]"]]]],NF:["672","00","[13]\\d{5}",[6],[["(\\d{2})(\\d{4})","$1 $2",["1[0-3]"]],["(\\d)(\\d{5})","$1 $2",["[13]"]]],0,0,"([0-258]\\d{4})$","3$1"],NG:["234","009","(?:20|9\\d)\\d{8}|[78]\\d{9,13}",[10,11,12,13,14],[["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[7-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["20[129]"],"0$1"],["(\\d{4})(\\d{2})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{3})(\\d{4})(\\d{4,5})","$1 $2 $3",["[78]"],"0$1"],["(\\d{3})(\\d{5})(\\d{5,6})","$1 $2 $3",["[78]"],"0$1"]],"0"],NI:["505","00","(?:1800|[25-8]\\d{3})\\d{4}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[125-8]"]]]],NL:["31","00","(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",[5,6,7,8,9,10,11],[["(\\d{3})(\\d{4,7})","$1 $2",["[89]0"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["66"],"0$1"],["(\\d)(\\d{8})","$1 $2",["6"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-578]|91"],"0$1"],["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3",["9"],"0$1"]],"0"],NO:["47","00","(?:0|[2-9]\\d{3})\\d{4}",[5,8],[["(\\d{3})(\\d{2})(\\d{3})","$1 $2 $3",["8"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[2-79]"]]],0,0,0,0,0,"[02-689]|7[0-8]"],NP:["977","00","(?:1\\d|9)\\d{9}|[1-9]\\d{7}",[8,10,11],[["(\\d)(\\d{7})","$1-$2",["1[2-6]"],"0$1"],["(\\d{2})(\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"],"0$1"],["(\\d{3})(\\d{7})","$1-$2",["9"]]],"0"],NR:["674","00","(?:222|444|(?:55|8\\d)\\d|666|777|999)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[24-9]"]]]],NU:["683","00","(?:[4-7]|888\\d)\\d{3}",[4,7],[["(\\d{3})(\\d{4})","$1 $2",["8"]]]],NZ:["64","0(?:0|161)","[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,8})","$1 $2",["8[1-79]"],"0$1"],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["50[036-8]|8|90","50(?:[0367]|88)|8|90"],"0$1"],["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["24|[346]|7[2-57-9]|9[2-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:10|74)|[589]"],"0$1"],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["1|2[028]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,5})","$1 $2 $3",["2(?:[169]|7[0-35-9])|7"],"0$1"]],"0",0,0,0,0,0,0,"00"],OM:["968","00","(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",[7,8,9],[["(\\d{3})(\\d{4,6})","$1 $2",["[58]"]],["(\\d{2})(\\d{6})","$1 $2",["2"]],["(\\d{4})(\\d{4})","$1 $2",["[179]"]]]],PA:["507","00","(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",[7,8,10,11],[["(\\d{3})(\\d{4})","$1-$2",["[1-57-9]"]],["(\\d{4})(\\d{4})","$1-$2",["[68]"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]]],PE:["51","00|19(?:1[124]|77|90)00","(?:[14-8]|9\\d)\\d{7}",[8,9],[["(\\d{3})(\\d{5})","$1 $2",["80"],"(0$1)"],["(\\d)(\\d{7})","$1 $2",["1"],"(0$1)"],["(\\d{2})(\\d{6})","$1 $2",["[4-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["9"]]],"0",0,0,0,0,0,0,"00"," Anexo "],PF:["689","00","4\\d{5}(?:\\d{2})?|8\\d{7,8}",[6,8,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["44"]],["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["4|8[7-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],PG:["675","00|140[1-3]","(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["18|[2-69]|85"]],["(\\d{4})(\\d{4})","$1 $2",["[78]"]]],0,0,0,0,0,0,0,"00"],PH:["63","00","(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",[6,8,9,10,11,12,13],[["(\\d)(\\d{5})","$1 $2",["2"],"(0$1)"],["(\\d{4})(\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\d{5})(\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|8[2-8]"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]],["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})","$1 $2 $3 $4",["1"]]],"0"],PK:["92","00","122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,7})","$1 $2 $3",["[89]0"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["1"]],["(\\d{3})(\\d{6,7})","$1 $2",["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])","9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"],"(0$1)"],["(\\d{2})(\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"],"(0$1)"],["(\\d{5})(\\d{5})","$1 $2",["58"],"(0$1)"],["(\\d{3})(\\d{7})","$1 $2",["3"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"],"(0$1)"],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[24-9]"],"(0$1)"]],"0"],PL:["48","00","(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",[6,7,8,9,10],[["(\\d{5})","$1",["19"]],["(\\d{3})(\\d{3})","$1 $2",["11|20|64"]],["(\\d{2})(\\d{2})(\\d{3})","$1 $2 $3",["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1","(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],["(\\d{3})(\\d{2})(\\d{2,3})","$1 $2 $3",["64"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["1[2-8]|[2-7]|8[1-79]|9[145]"]],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["8"]]]],PM:["508","00","[45]\\d{5}|(?:708|8\\d\\d)\\d{6}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[45]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"],"0$1"]],"0"],PR:["1","011","(?:[589]\\d\\d|787)\\d{7}",[10],0,"1",0,0,0,0,"787|939"],PS:["970","00","[2489]2\\d{6}|(?:1\\d|5)\\d{8}",[8,9,10],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["[2489]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["5"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],PT:["351","00","1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["2[12]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["16|[236-9]"]]]],PW:["680","01[12]","(?:[24-8]\\d\\d|345|900)\\d{4}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[2-9]"]]]],PY:["595","00","59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",[6,7,8,9,10,11],[["(\\d{3})(\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\d{2})(\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\d{3})(\\d{4,5})","$1 $2",["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["87"]],["(\\d{3})(\\d{6})","$1 $2",["9(?:[5-79]|8[1-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[2-8]"],"0$1"],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["9"]]],"0"],QA:["974","00","800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",[7,8,9,11],[["(\\d{3})(\\d{4})","$1 $2",["2[136]|8"]],["(\\d{4})(\\d{4})","$1 $2",["[3-7]"]]]],RE:["262","00","709\\d{6}|(?:26|[689]\\d)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[26-9]"],"0$1"]],"0",0,0,0,0,0,[["26(?:2\\d\\d|3(?:0\\d|1[0-6]))\\d{4}"],["(?:69(?:2\\d\\d|3(?:[06][0-6]|1[0-3]|2[0-2]|3[0-39]|4\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\d{4}"],["80\\d{7}"],["89[1-37-9]\\d{6}"],0,0,0,0,["9(?:399[0-3]|479[0-6]|76(?:2[278]|3[0-37]))\\d{4}"],["8(?:1[019]|2[0156]|84|90)\\d{6}"]]],RO:["40","00","(?:[236-8]\\d|90)\\d{7}|[23]\\d{5}",[6,9],[["(\\d{3})(\\d{3})","$1 $2",["2[3-6]","2[3-6]\\d9"],"0$1"],["(\\d{2})(\\d{4})","$1 $2",["219|31"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[23]1"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[236-9]"],"0$1"]],"0",0,0,0,0,0,0,0," int "],RS:["381","00","38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",[6,7,8,9,10,11,12],[["(\\d{3})(\\d{3,9})","$1 $2",["(?:2[389]|39)0|[7-9]"],"0$1"],["(\\d{2})(\\d{5,10})","$1 $2",["[1-36]"],"0$1"]],"0"],RU:["7","810","8\\d{13}|[347-9]\\d{9}",[10,14],[["(\\d{4})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-8]|2[1-9])","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))","7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"],"8 ($1)",1],["(\\d{5})(\\d)(\\d{2})(\\d{2})","$1 $2 $3 $4",["7(?:1[0-68]|2[1-9])","7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))","7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"8 ($1)",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2-$3-$4",["[349]|8(?:[02-7]|1[1-8])"],"8 ($1)",1],["(\\d{4})(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3 $4",["8"],"8 ($1)"]],"8",0,0,0,0,0,[["336(?:[013-9]\\d|2[013-9])\\d{5}|(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15-7]|6[0-35-79]|7[1-37-9]))\\d{7}",[10]],["9\\d{9}",[10]],["8(?:0[04]|108\\d{3})\\d{7}"],["80[39]\\d{7}",[10]],["808\\d{7}",[10]]],"8~10"],RW:["250","00","(?:06|[27]\\d\\d|[89]00)\\d{6}",[8,9],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["0"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[7-9]"],"0$1"]],"0"],SA:["966","00","(?:[15]\\d|800|92)\\d{7}",[9,10],[["(\\d{4})(\\d{5})","$1 $2",["9"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["1"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["5"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]]],"0"],SB:["677","0[01]","[6-9]\\d{6}|[1-6]\\d{4}",[5,7],[["(\\d{2})(\\d{5})","$1 $2",["6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])"]]]],SC:["248","010|0[0-2]","(?:[2489]\\d|64)\\d{5}",[7],[["(\\d)(\\d{3})(\\d{3})","$1 $2 $3",["[246]|9[57]"]]],0,0,0,0,0,0,0,"00"],SD:["249","00","[19]\\d{8}",[9],[["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[19]"],"0$1"]],"0"],SE:["46","00","(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",[6,7,8,9,10,12],[["(\\d{2})(\\d{2,3})(\\d{2})","$1-$2 $3",["20"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{4})","$1-$2",["9(?:00|39|44|9)"],"0$1",0,"$1 $2"],["(\\d{2})(\\d{3})(\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3"],["(\\d)(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2,3})(\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3"],["(\\d{3})(\\d{2,3})(\\d{3})","$1-$2 $3",["9(?:00|39|44)"],"0$1",0,"$1 $2 $3"],["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"],"0$1",0,"$1 $2 $3 $4"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4",["10|7"],"0$1",0,"$1 $2 $3 $4"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1-$2 $3 $4",["8"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1-$2 $3 $4",["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{2})(\\d{3})","$1-$2 $3 $4",["9"],"0$1",0,"$1 $2 $3 $4"],["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1-$2 $3 $4 $5",["[26]"],"0$1",0,"$1 $2 $3 $4 $5"]],"0"],SG:["65","0[0-3]\\d","(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",[8,10,11],[["(\\d{4})(\\d{4})","$1 $2",["[369]|8(?:0[1-9]|[1-9])"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"]],["(\\d{4})(\\d{4})(\\d{3})","$1 $2 $3",["7"]],["(\\d{4})(\\d{3})(\\d{4})","$1 $2 $3",["1"]]]],SH:["290","00","(?:[256]\\d|8)\\d{3}",[4,5],0,0,0,0,0,0,"[256]"],SI:["386","00|10(?:22|66|88|99)","[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",[5,6,7,8],[["(\\d{2})(\\d{3,6})","$1 $2",["8[09]|9"],"0$1"],["(\\d{3})(\\d{5})","$1 $2",["59|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"],"0$1"],["(\\d)(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[1-57]"],"(0$1)"]],"0",0,0,0,0,0,0,"00"],SJ:["47","00","0\\d{4}|(?:[489]\\d|79)\\d{6}",[5,8],0,0,0,0,0,0,"79"],SK:["421","00","[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",[6,7,9],[["(\\d)(\\d{2})(\\d{3,4})","$1 $2 $3",["21"],"0$1"],["(\\d{2})(\\d{2})(\\d{2,3})","$1 $2 $3",["[3-5][1-8]1","[3-5][1-8]1[67]"],"0$1"],["(\\d)(\\d{3})(\\d{3})(\\d{2})","$1/$2 $3 $4",["2"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[689]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1/$2 $3 $4",["[3-5]"],"0$1"]],"0"],SL:["232","00","(?:[237-9]\\d|66)\\d{6}",[8],[["(\\d{2})(\\d{6})","$1 $2",["[236-9]"],"(0$1)"]],"0"],SM:["378","00","(?:0549|[5-7]\\d)\\d{6}",[8,10],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(\\d{4})(\\d{6})","$1 $2",["0"]]],0,0,"([89]\\d{5})$","0549$1"],SN:["221","00","(?:[378]\\d|93)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[379]"]]]],SO:["252","00","[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",[6,7,8,9],[["(\\d{2})(\\d{4})","$1 $2",["8[125]"]],["(\\d{6})","$1",["[134]"]],["(\\d)(\\d{6})","$1 $2",["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],["(\\d)(\\d{7})","$1 $2",["(?:2|90)4|[67]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[348]|64|79|90"]],["(\\d{2})(\\d{5,7})","$1 $2",["1|28|6[0-35-9]|7[67]|9[2-9]"]]],"0"],SR:["597","00","(?:[2-5]|[6-8]\\d|90)\\d{5}",[6,7],[["(\\d{2})(\\d{2})(\\d{2})","$1-$2-$3",["56"]],["(\\d{3})(\\d{3})","$1-$2",["[2-5]"]],["(\\d{3})(\\d{4})","$1-$2",["[6-9]"]]]],SS:["211","00","[19]\\d{8}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[19]"],"0$1"]],"0"],ST:["239","00","(?:22|9\\d)\\d{5}",[7],[["(\\d{3})(\\d{4})","$1 $2",["[29]"]]]],SV:["503","00","[267]\\d{7}|(?:80\\d|900)\\d{4}(?:\\d{4})?",[7,8,11],[["(\\d{3})(\\d{4})","$1 $2",["[89]"]],["(\\d{4})(\\d{4})","$1 $2",["[267]"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["[89]"]]]],SX:["1","011","7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"(5\\d{6})$|1","721$1",0,"721"],SY:["963","00","[1-359]\\d{8}|[1-5]\\d{7}",[8,9],[["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-4]|5[1-3]"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[59]"],"0$1",1]],"0"],SZ:["268","00","0800\\d{4}|(?:[237]\\d|900)\\d{6}",[8,9],[["(\\d{4})(\\d{4})","$1 $2",["[0237]"]],["(\\d{5})(\\d{4})","$1 $2",["9"]]]],TA:["290","00","8\\d{3}",[4],0,0,0,0,0,0,"8"],TC:["1","011","(?:[58]\\d\\d|649|900)\\d{7}",[10],0,"1",0,"([2-479]\\d{6})$|1","649$1",0,"649"],TD:["235","00|16","(?:22|30|[689]\\d|77)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[236-9]"]]],0,0,0,0,0,0,0,"00"],TG:["228","00","[279]\\d{7}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[279]"]]]],TH:["66","00[1-9]","(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",[8,9,10,13],[["(\\d)(\\d{3})(\\d{4})","$1 $2 $3",["2"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[13-9]"],"0$1"],["(\\d{4})(\\d{3})(\\d{3})","$1 $2 $3",["1"]]],"0"],TJ:["992","810","[0-57-9]\\d{8}",[9],[["(\\d{6})(\\d)(\\d{2})","$1 $2 $3",["331","3317"]],["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["44[02-479]|[34]7"]],["(\\d{4})(\\d)(\\d{4})","$1 $2 $3",["3(?:[1245]|3[12])"]],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[0-57-9]"]]],0,0,0,0,0,0,0,"8~10"],TK:["690","00","[2-47]\\d{3,6}",[4,5,6,7]],TL:["670","00","7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",[7,8],[["(\\d{3})(\\d{4})","$1 $2",["[2-489]|70"]],["(\\d{4})(\\d{4})","$1 $2",["7"]]]],TM:["993","810","(?:[1-6]\\d|71)\\d{6}",[8],[["(\\d{2})(\\d{2})(\\d{2})(\\d{2})","$1 $2-$3-$4",["12"],"(8 $1)"],["(\\d{3})(\\d)(\\d{2})(\\d{2})","$1 $2-$3-$4",["[1-5]"],"(8 $1)"],["(\\d{2})(\\d{6})","$1 $2",["[67]"],"8 $1"]],"8",0,0,0,0,0,0,"8~10"],TN:["216","00","[2-57-9]\\d{7}",[8],[["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-57-9]"]]]],TO:["676","00","(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",[5,7],[["(\\d{2})(\\d{3})","$1-$2",["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],["(\\d{4})(\\d{3})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[5-9]"]]]],TR:["90","00","4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",[7,10,12,13],[["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["512|8[01589]|90"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["5(?:[0-59]|61)","5(?:[0-59]|61[06])","5(?:[0-59]|61[06]1)"],"0$1",1],["(\\d{3})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[24][1-8]|3[1-9]"],"(0$1)",1],["(\\d{3})(\\d{3})(\\d{6,7})","$1 $2 $3",["80"],"0$1",1]],"0"],TT:["1","011","(?:[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-46-8]\\d{6})$|1","868$1",0,"868"],TV:["688","00","(?:2|7\\d\\d|90)\\d{4}",[5,6,7],[["(\\d{2})(\\d{3})","$1 $2",["2"]],["(\\d{2})(\\d{4})","$1 $2",["90"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],TW:["886","0(?:0[25-79]|19)","[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",[7,8,9,10,11],[["(\\d{2})(\\d)(\\d{4})","$1 $2 $3",["202"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["[258]0"],"0$1"],["(\\d)(\\d{3,4})(\\d{4})","$1 $2 $3",["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]","[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[49]"],"0$1"],["(\\d{2})(\\d{4})(\\d{4,5})","$1 $2 $3",["7"],"0$1"]],"0",0,0,0,0,0,0,0,"#"],TZ:["255","00[056]","(?:[25-8]\\d|41|90)\\d{7}",[9],[["(\\d{3})(\\d{2})(\\d{4})","$1 $2 $3",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[24]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["5"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[67]"],"0$1"]],"0"],UA:["380","00","[89]\\d{9}|[3-9]\\d{8}",[9,10],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]","6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"],"0$1"],["(\\d{4})(\\d{5})","$1 $2",["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])","3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[3-7]|89|9[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["[89]"],"0$1"]],"0",0,0,0,0,0,0,"0~0"],UG:["256","00[057]","800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",[9],[["(\\d{4})(\\d{5})","$1 $2",["202","2024"],"0$1"],["(\\d{3})(\\d{6})","$1 $2",["[27-9]|4(?:6[45]|[7-9])"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[34]"],"0$1"]],"0"],US:["1","011","[2-9]\\d{9}|3\\d{6}",[10],[["(\\d{3})(\\d{4})","$1-$2",["310"],0,1],["(\\d{3})(\\d{3})(\\d{4})","($1) $2-$3",["[2-9]"],0,1,"$1-$2-$3"]],"1",0,0,0,0,0,[["(?:3052(?:0[0-8]|[1-9]\\d)|5056(?:[0-35-9]\\d|4[0-68]))\\d{4}|(?:2742|305[3-9]|(?:472|983)[2-47-9]|505[2-57-9])\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-269])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[0-247]|4[0378]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[0168]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],["900[2-9]\\d{6}"],["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\d{6}"],0,0,0,["305209\\d{4}"]]],UY:["598","0(?:0|1[3-9]\\d)","0004\\d{2,9}|[1249]\\d{7}|2\\d{3,4}|(?:[49]\\d|80)\\d{5}",[4,5,6,7,8,9,10,11,12,13],[["(\\d{4,5})","$1",["21"]],["(\\d{3})(\\d{3,4})","$1 $2",["0"]],["(\\d{3})(\\d{4})","$1 $2",["[49]0|8"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["9"],"0$1"],["(\\d{4})(\\d{4})","$1 $2",["[124]"]],["(\\d{3})(\\d{3})(\\d{2,4})","$1 $2 $3",["0"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{2,4})","$1 $2 $3 $4",["0"]]],"0",0,0,0,0,0,0,"00"," int. "],UZ:["998","00","(?:20|33|[5-9]\\d)\\d{7}",[9],[["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["[235-9]"]]]],VA:["39","00","0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",[6,7,8,9,10,11,12],0,0,0,0,0,0,"06698"],VC:["1","011","(?:[58]\\d\\d|784|900)\\d{7}",[10],0,"1",0,"([2-7]\\d{6})$|1","784$1",0,"784"],VE:["58","00","[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",[10],[["(\\d{3})(\\d{7})","$1-$2",["[24-689]"],"0$1"]],"0"],VG:["1","011","(?:284|[58]\\d\\d|900)\\d{7}",[10],0,"1",0,"([2-578]\\d{6})$|1","284$1",0,"284"],VI:["1","011","[58]\\d{9}|(?:34|90)0\\d{7}",[10],0,"1",0,"([2-9]\\d{6})$|1","340$1",0,"340"],VN:["84","00","[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",[7,8,9,10],[["(\\d{2})(\\d{5})","$1 $2",["80"],"0$1",1],["(\\d{4})(\\d{4,6})","$1 $2",["1"],0,1],["(\\d{2})(\\d{3})(\\d{2})(\\d{2})","$1 $2 $3 $4",["6"],"0$1",1],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[357-9]"],"0$1",1],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["2[48]"],"0$1",1],["(\\d{3})(\\d{4})(\\d{3})","$1 $2 $3",["2"],"0$1",1]],"0"],VU:["678","00","[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",[5,7],[["(\\d{3})(\\d{4})","$1 $2",["[57-9]"]]]],WF:["681","00","(?:40|72|8\\d{4})\\d{4}|[89]\\d{5}",[6,9],[["(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3",["[47-9]"]],["(\\d{3})(\\d{2})(\\d{2})(\\d{2})","$1 $2 $3 $4",["8"]]]],WS:["685","0","(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",[5,6,7,10],[["(\\d{5})","$1",["[2-5]|6[1-9]"]],["(\\d{3})(\\d{3,7})","$1 $2",["[68]"]],["(\\d{2})(\\d{5})","$1 $2",["7"]]]],XK:["383","00","2\\d{7,8}|3\\d{7,11}|(?:4\\d\\d|[89]00)\\d{5}",[8,9,10,11,12],[["(\\d{3})(\\d{5})","$1 $2",["[89]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3})","$1 $2 $3",["[2-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["2|39"],"0$1"],["(\\d{2})(\\d{7,10})","$1 $2",["3"],"0$1"]],"0"],YE:["967","00","(?:1|7\\d)\\d{7}|[1-7]\\d{6}",[7,8,9],[["(\\d)(\\d{3})(\\d{3,4})","$1 $2 $3",["[1-6]|7(?:[24-6]|8[0-7])"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],YT:["262","00","7093\\d{5}|(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}",[9],0,"0",0,0,0,0,0,[["269(?:0[0-467]|15|5[0-4]|6\\d|[78]0)\\d{4}"],["(?:639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\d{4}"],["80\\d{7}"],0,0,0,0,0,["9(?:(?:39|47)8[01]|769\\d)\\d{4}"]]],ZA:["27","00","[1-79]\\d{8}|8\\d{4,9}",[5,6,7,8,9,10],[["(\\d{2})(\\d{3,4})","$1 $2",["8[1-4]"],"0$1"],["(\\d{2})(\\d{3})(\\d{2,3})","$1 $2 $3",["8[1-4]"],"0$1"],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["860"],"0$1"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["[1-9]"],"0$1"],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["8"],"0$1"]],"0"],ZM:["260","00","800\\d{6}|(?:21|[579]\\d|63)\\d{7}",[9],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[28]"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["[579]"],"0$1"]],"0"],ZW:["263","00","2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",[5,6,7,8,9,10],[["(\\d{3})(\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"],"0$1"],["(\\d)(\\d{3})(\\d{2,4})","$1 $2 $3",["[49]"],"0$1"],["(\\d{3})(\\d{4})","$1 $2",["80"],"0$1"],["(\\d{2})(\\d{7})","$1 $2",["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2","2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"],"(0$1)"],["(\\d{2})(\\d{3})(\\d{4})","$1 $2 $3",["7"],"0$1"],["(\\d{3})(\\d{3})(\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)","2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"],"0$1"],["(\\d{4})(\\d{6})","$1 $2",["8"],"0$1"],["(\\d{2})(\\d{3,5})","$1 $2",["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"],"0$1"],["(\\d{2})(\\d{3})(\\d{3,4})","$1 $2 $3",["29[013-9]|39|54"],"0$1"],["(\\d{4})(\\d{3,5})","$1 $2",["(?:25|54)8","258|5483"],"0$1"]],"0"]},nonGeographic:{800:["800",0,"(?:00|[1-9]\\d)\\d{6}",[8],[["(\\d{4})(\\d{4})","$1 $2",["\\d"]]],0,0,0,0,0,0,[0,0,["(?:00|[1-9]\\d)\\d{6}"]]],808:["808",0,"[1-9]\\d{7}",[8],[["(\\d{4})(\\d{4})","$1 $2",["[1-9]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,["[1-9]\\d{7}"]]],870:["870",0,"7\\d{11}|[235-7]\\d{8}",[9,12],[["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["[235-7]"]]],0,0,0,0,0,0,[0,["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"],0,0,0,0,0,0,["2\\d{8}",[9]]]],878:["878",0,"10\\d{10}",[12],[["(\\d{2})(\\d{5})(\\d{5})","$1 $2 $3",["1"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["10\\d{10}"]]],881:["881",0,"6\\d{9}|[0-36-9]\\d{8}",[9,10],[["(\\d)(\\d{3})(\\d{5})","$1 $2 $3",["[0-37-9]"]],["(\\d)(\\d{3})(\\d{5,6})","$1 $2 $3",["6"]]],0,0,0,0,0,0,[0,["6\\d{9}|[0-36-9]\\d{8}"]]],882:["882",0,"[13]\\d{6}(?:\\d{2,5})?|[19]\\d{7}|(?:[25]\\d\\d|4)\\d{7}(?:\\d{2})?",[7,8,9,10,11,12],[["(\\d{2})(\\d{5})","$1 $2",["16|342"]],["(\\d{2})(\\d{6})","$1 $2",["49"]],["(\\d{2})(\\d{2})(\\d{4})","$1 $2 $3",["1[36]|9"]],["(\\d{2})(\\d{4})(\\d{3})","$1 $2 $3",["3[23]"]],["(\\d{2})(\\d{3,4})(\\d{4})","$1 $2 $3",["16"]],["(\\d{2})(\\d{4})(\\d{4})","$1 $2 $3",["10|23|3(?:[15]|4[57])|4|51"]],["(\\d{3})(\\d{4})(\\d{4})","$1 $2 $3",["34"]],["(\\d{2})(\\d{4,5})(\\d{5})","$1 $2 $3",["[1-35]"]]],0,0,0,0,0,0,[0,["342\\d{4}|(?:337|49)\\d{6}|(?:3(?:2|47|7\\d{3})|50\\d{3})\\d{7}",[7,8,9,10,12]],0,0,0,["348[57]\\d{7}",[11]],0,0,["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:345\\d|9[89])\\d{6}|(?:10|2(?:3|85\\d)|3(?:[15]|[69]\\d\\d)|4[15-8]|51)\\d{8}"]]],883:["883",0,"(?:[1-4]\\d|51)\\d{6,10}",[8,9,10,11,12],[["(\\d{3})(\\d{3})(\\d{2,8})","$1 $2 $3",["[14]|2[24-689]|3[02-689]|51[24-9]"]],["(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3",["510"]],["(\\d{3})(\\d{3})(\\d{4})","$1 $2 $3",["21"]],["(\\d{4})(\\d{4})(\\d{4})","$1 $2 $3",["51[13]"]],["(\\d{3})(\\d{3})(\\d{3})(\\d{3})","$1 $2 $3 $4",["[235]"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,["(?:2(?:00\\d\\d|10)|(?:370[1-9]|51\\d0)\\d)\\d{7}|51(?:00\\d{5}|[24-9]0\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\d{5,9}"]]],888:["888",0,"\\d{11}",[11],[["(\\d{3})(\\d{3})(\\d{5})","$1 $2 $3"]],0,0,0,0,0,0,[0,0,0,0,0,0,["\\d{11}"]]],979:["979",0,"[1359]\\d{8}",[9],[["(\\d)(\\d{4})(\\d{4})","$1 $2 $3",["[1359]"]]],0,0,0,0,0,0,[0,0,0,["[1359]\\d{8}"]]]}};function T0(t,e){var n=Array.prototype.slice.call(e);return n.push(E0),t.apply(this,n)}function xo(t,e){t=t.split("-"),e=e.split("-");for(var n=t[0].split("."),r=e[0].split("."),i=0;i<3;i++){var s=Number(n[i]),o=Number(r[i]);if(s>o)return 1;if(o>s)return-1;if(!isNaN(s)&&isNaN(o))return 1;if(isNaN(s)&&!isNaN(o))return-1}return t[1]&&e[1]?t[1]>e[1]?1:t[1]<e[1]?-1:0:!t[1]&&e[1]?1:t[1]&&!e[1]?-1:0}var I0={}.constructor;function Jn(t){return t!=null&&t.constructor===I0}function nr(t){"@babel/helpers - typeof";return nr=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},nr(t)}function Vi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function O0(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,P0(r.key),r)}}function Ui(t,e,n){return e&&O0(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t}function P0(t){var e=M0(t,"string");return nr(e)=="symbol"?e:e+""}function M0(t,e){if(nr(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e);if(nr(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}var A0="1.2.0",N0="1.7.35",Eo=" ext. ",z0=/^\d+$/,st=function(){function t(e){Vi(this,t),Oa(e),this.metadata=e,Pa.call(this,e)}return Ui(t,[{key:"getCountries",value:function(){return Object.keys(this.metadata.countries).filter(function(n){return n!=="001"})}},{key:"getCountryMetadata",value:function(n){return this.metadata.countries[n]}},{key:"nonGeographic",value:function(){if(!(this.v1||this.v2||this.v3))return this.metadata.nonGeographic||this.metadata.nonGeographical}},{key:"hasCountry",value:function(n){return this.getCountryMetadata(n)!==void 0}},{key:"hasCallingCode",value:function(n){if(this.getCountryCodesForCallingCode(n))return!0;if(this.nonGeographic()){if(this.nonGeographic()[n])return!0}else{var r=this.countryCallingCodes()[n];if(r&&r.length===1&&r[0]==="001")return!0}}},{key:"isNonGeographicCallingCode",value:function(n){return this.nonGeographic()?!!this.nonGeographic()[n]:!this.getCountryCodesForCallingCode(n)}},{key:"country",value:function(n){return this.selectNumberingPlan(n)}},{key:"selectNumberingPlan",value:function(n,r){if(n&&z0.test(n)&&(r=n,n=null),n&&n!=="001"){if(!this.hasCountry(n))throw new Error("Unknown country: ".concat(n));this.numberingPlan=new To(this.getCountryMetadata(n),this)}else if(r){if(!this.hasCallingCode(r))throw new Error("Unknown calling code: ".concat(r));this.numberingPlan=new To(this.getNumberingPlanMetadata(r),this)}else this.numberingPlan=void 0;return this}},{key:"getCountryCodesForCallingCode",value:function(n){var r=this.countryCallingCodes()[n];if(r)return r.length===1&&r[0].length===3?void 0:r}},{key:"getCountryCodeForCallingCode",value:function(n){var r=this.getCountryCodesForCallingCode(n);if(r)return r[0]}},{key:"getNumberingPlanMetadata",value:function(n){var r=this.getCountryCodeForCallingCode(n);if(r)return this.getCountryMetadata(r);if(this.nonGeographic()){var i=this.nonGeographic()[n];if(i)return i}else{var s=this.countryCallingCodes()[n];if(s&&s.length===1&&s[0]==="001")return this.metadata.countries["001"]}}},{key:"countryCallingCode",value:function(){return this.numberingPlan.callingCode()}},{key:"IDDPrefix",value:function(){return this.numberingPlan.IDDPrefix()}},{key:"defaultIDDPrefix",value:function(){return this.numberingPlan.defaultIDDPrefix()}},{key:"nationalNumberPattern",value:function(){return this.numberingPlan.nationalNumberPattern()}},{key:"possibleLengths",value:function(){return this.numberingPlan.possibleLengths()}},{key:"formats",value:function(){return this.numberingPlan.formats()}},{key:"nationalPrefixForParsing",value:function(){return this.numberingPlan.nationalPrefixForParsing()}},{key:"nationalPrefixTransformRule",value:function(){return this.numberingPlan.nationalPrefixTransformRule()}},{key:"leadingDigits",value:function(){return this.numberingPlan.leadingDigits()}},{key:"hasTypes",value:function(){return this.numberingPlan.hasTypes()}},{key:"type",value:function(n){return this.numberingPlan.type(n)}},{key:"ext",value:function(){return this.numberingPlan.ext()}},{key:"countryCallingCodes",value:function(){return this.v1?this.metadata.country_phone_code_to_countries:this.metadata.country_calling_codes}},{key:"chooseCountryByCountryCallingCode",value:function(n){return this.selectNumberingPlan(n)}},{key:"hasSelectedNumberingPlan",value:function(){return this.numberingPlan!==void 0}}])}(),To=function(){function t(e,n){Vi(this,t),this.globalMetadataObject=n,this.metadata=e,Pa.call(this,n.metadata)}return Ui(t,[{key:"callingCode",value:function(){return this.metadata[0]}},{key:"getDefaultCountryMetadataForRegion",value:function(){return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())}},{key:"IDDPrefix",value:function(){if(!(this.v1||this.v2))return this.metadata[1]}},{key:"defaultIDDPrefix",value:function(){if(!(this.v1||this.v2))return this.metadata[12]}},{key:"nationalNumberPattern",value:function(){return this.v1||this.v2?this.metadata[1]:this.metadata[2]}},{key:"possibleLengths",value:function(){if(!this.v1)return this.metadata[this.v2?2:3]}},{key:"_getFormats",value:function(n){return n[this.v1?2:this.v2?3:4]}},{key:"formats",value:function(){var n=this,r=this._getFormats(this.metadata)||this._getFormats(this.getDefaultCountryMetadataForRegion())||[];return r.map(function(i){return new L0(i,n)})}},{key:"nationalPrefix",value:function(){return this.metadata[this.v1?3:this.v2?4:5]}},{key:"_getNationalPrefixFormattingRule",value:function(n){return n[this.v1?4:this.v2?5:6]}},{key:"nationalPrefixFormattingRule",value:function(){return this._getNationalPrefixFormattingRule(this.metadata)||this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())}},{key:"_nationalPrefixForParsing",value:function(){return this.metadata[this.v1?5:this.v2?6:7]}},{key:"nationalPrefixForParsing",value:function(){return this._nationalPrefixForParsing()||this.nationalPrefix()}},{key:"nationalPrefixTransformRule",value:function(){return this.metadata[this.v1?6:this.v2?7:8]}},{key:"_getNationalPrefixIsOptionalWhenFormatting",value:function(){return!!this.metadata[this.v1?7:this.v2?8:9]}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata)||this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())}},{key:"leadingDigits",value:function(){return this.metadata[this.v1?8:this.v2?9:10]}},{key:"types",value:function(){return this.metadata[this.v1?9:this.v2?10:11]}},{key:"hasTypes",value:function(){return this.types()&&this.types().length===0?!1:!!this.types()}},{key:"type",value:function(n){if(this.hasTypes()&&Io(this.types(),n))return new R0(Io(this.types(),n),this)}},{key:"ext",value:function(){return this.v1||this.v2?Eo:this.metadata[13]||Eo}}])}(),L0=function(){function t(e,n){Vi(this,t),this._format=e,this.metadata=n}return Ui(t,[{key:"pattern",value:function(){return this._format[0]}},{key:"format",value:function(){return this._format[1]}},{key:"leadingDigitsPatterns",value:function(){return this._format[2]||[]}},{key:"nationalPrefixFormattingRule",value:function(){return this._format[3]||this.metadata.nationalPrefixFormattingRule()}},{key:"nationalPrefixIsOptionalWhenFormattingInNationalFormat",value:function(){return!!this._format[4]||this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"nationalPrefixIsMandatoryWhenFormattingInNationalFormat",value:function(){return this.usesNationalPrefix()&&!this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()}},{key:"usesNationalPrefix",value:function(){return!!(this.nationalPrefixFormattingRule()&&!F0.test(this.nationalPrefixFormattingRule()))}},{key:"internationalFormat",value:function(){return this._format[5]||this.format()}}])}(),F0=/^\(?\$1\)?$/,R0=function(){function t(e,n){Vi(this,t),this.type=e,this.metadata=n}return Ui(t,[{key:"pattern",value:function(){return this.metadata.v1?this.type:this.type[0]}},{key:"possibleLengths",value:function(){if(!this.metadata.v1)return this.type[1]||this.metadata.possibleLengths()}}])}();function Io(t,e){switch(e){case"FIXED_LINE":return t[0];case"MOBILE":return t[1];case"TOLL_FREE":return t[2];case"PREMIUM_RATE":return t[3];case"PERSONAL_NUMBER":return t[4];case"VOICEMAIL":return t[5];case"UAN":return t[6];case"PAGER":return t[7];case"VOIP":return t[8];case"SHARED_COST":return t[9]}}function Oa(t){if(!t)throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");if(!Jn(t)||!Jn(t.countries))throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(Jn(t)?"an object of shape: { "+Object.keys(t).join(", ")+" }":"a "+j0(t)+": "+t,"."))}var j0=function(e){return nr(e)};function Us(t,e){if(e=new st(e),e.hasCountry(t))return e.selectNumberingPlan(t).countryCallingCode();throw new Error("Unknown country: ".concat(t))}function D0(t,e){return e.countries.hasOwnProperty(t)}function Pa(t){var e=t.version;typeof e=="number"?(this.v1=e===1,this.v2=e===2,this.v3=e===3,this.v4=e===4):e?xo(e,A0)===-1?this.v2=!0:xo(e,N0)===-1?this.v3=!0:this.v4=!0:this.v1=!0}function Gs(t,e,n){return B0(t,e,void 0,n)}function B0(t,e,n,r){e&&(r=new st(r.metadata),r.selectNumberingPlan(e));var i=r.type(n),s=i&&i.possibleLengths()||r.possibleLengths();if(!s)return"IS_POSSIBLE";var o=t.length,l=s[0];return l===o?"IS_POSSIBLE":l>o?"TOO_SHORT":s[s.length-1]<o?"TOO_LONG":s.indexOf(o,1)>=0?"IS_POSSIBLE":"INVALID_LENGTH"}function Z0(t,e,n){if(e===void 0&&(e={}),n=new st(n),e.v2){if(!t.countryCallingCode)throw new Error("Invalid phone number object passed");n.selectNumberingPlan(t.countryCallingCode)}else{if(!t.phone)return!1;if(t.country){if(!n.hasCountry(t.country))throw new Error("Unknown country: ".concat(t.country));n.selectNumberingPlan(t.country)}else{if(!t.countryCallingCode)throw new Error("Invalid phone number object passed");n.selectNumberingPlan(t.countryCallingCode)}}if(n.possibleLengths())return Ma(t.phone||t.nationalNumber,t.country,n);if(t.countryCallingCode&&n.isNonGeographicCallingCode(t.countryCallingCode))return!0;throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')}function Ma(t,e,n){switch(Gs(t,e,n)){case"IS_POSSIBLE":return!0;default:return!1}}function en(t,e){return t=t||"",new RegExp("^(?:"+e+")$").test(t)}function H0(t,e){var n=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n)return(n=n.call(t)).next.bind(n);if(Array.isArray(t)||(n=V0(t))||e){n&&(t=n);var r=0;return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function V0(t,e){if(t){if(typeof t=="string")return Oo(t,e);var n={}.toString.call(t).slice(8,-1);return n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set"?Array.from(t):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Oo(t,e):void 0}}function Oo(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}var U0=["MOBILE","PREMIUM_RATE","TOLL_FREE","SHARED_COST","VOIP","PERSONAL_NUMBER","PAGER","UAN","VOICEMAIL"];function Ws(t,e,n){if(e=e||{},!(!t.country&&!t.countryCallingCode)){n=new st(n),n.selectNumberingPlan(t.country,t.countryCallingCode);var r=e.v2?t.nationalNumber:t.phone;if(en(r,n.nationalNumberPattern())){if(cs(r,"FIXED_LINE",n))return n.type("MOBILE")&&n.type("MOBILE").pattern()===""||!n.type("MOBILE")||cs(r,"MOBILE",n)?"FIXED_LINE_OR_MOBILE":"FIXED_LINE";for(var i=H0(U0),s;!(s=i()).done;){var o=s.value;if(cs(r,o,n))return o}}}}function cs(t,e,n){return e=n.type(e),!e||!e.pattern()||e.possibleLengths()&&e.possibleLengths().indexOf(t.length)<0?!1:en(t,e.pattern())}function G0(t,e,n){if(e=e||{},n=new st(n),n.selectNumberingPlan(t.country,t.countryCallingCode),n.hasTypes())return Ws(t,e,n.metadata)!==void 0;var r=e.v2?t.nationalNumber:t.phone;return en(r,n.nationalNumberPattern())}function W0(t,e,n){var r=new st(n),i=r.getCountryCodesForCallingCode(t);return i?i.filter(function(s){return q0(e,s,n)}):[]}function q0(t,e,n){var r=new st(n);return r.selectNumberingPlan(e),r.numberingPlan.possibleLengths().indexOf(t.length)>=0}var qs=2,K0=17,J0=3,Lt="0-9０-９٠-٩۰-۹",X0="-‐-―−ー－",Y0="／/",Q0="．.",eu="  ­​⁠　",tu="()（）［］\\[\\]",nu="~⁓∼～",Pi="".concat(X0).concat(Y0).concat(Q0).concat(eu).concat(tu).concat(nu),Ks="+＋",ru=new RegExp("(["+Lt+"])");function iu(t,e,n,r){if(e){var i=new st(r);i.selectNumberingPlan(e,n);var s=new RegExp(i.IDDPrefix());if(t.search(s)===0){t=t.slice(t.match(s)[0].length);var o=t.match(ru);if(!(o&&o[1]!=null&&o[1].length>0&&o[1]==="0"))return t}}}function su(t,e){if(t&&e.numberingPlan.nationalPrefixForParsing()){var n=new RegExp("^(?:"+e.numberingPlan.nationalPrefixForParsing()+")"),r=n.exec(t);if(r){var i,s,o=r.length-1,l=o>0&&r[o];if(e.nationalPrefixTransformRule()&&l)i=t.replace(n,e.nationalPrefixTransformRule()),o>1&&(s=r[1]);else{var a=r[0];i=t.slice(a.length),l&&(s=r[1])}var d;if(l){var u=t.indexOf(r[1]),c=t.slice(0,u);c===e.numberingPlan.nationalPrefix()&&(d=e.numberingPlan.nationalPrefix())}else d=r[0];return{nationalNumber:i,nationalPrefix:d,carrierCode:s}}}return{nationalNumber:t}}function ou(t,e){var n=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n)return(n=n.call(t)).next.bind(n);if(Array.isArray(t)||(n=lu(t))||e){n&&(t=n);var r=0;return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function lu(t,e){if(t){if(typeof t=="string")return Po(t,e);var n={}.toString.call(t).slice(8,-1);return n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set"?Array.from(t):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Po(t,e):void 0}}function Po(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function au(t,e){var n=e.countries,r=e.metadata;r=new st(r);for(var i=ou(n),s;!(s=i()).done;){var o=s.value;if(r.selectNumberingPlan(o),r.leadingDigits()){if(t&&t.search(r.leadingDigits())===0)return o}else if(Ws({phone:t,country:o},void 0,r.metadata))return o}}function Aa(t,e){var n=e.nationalNumber,r=e.metadata,i=r.getCountryCodesForCallingCode(t);if(i)return i.length===1?i[0]:au(n,{countries:i,metadata:r.metadata})}function ks(t,e,n){var r=su(t,n),i=r.carrierCode,s=r.nationalNumber;if(s!==t){if(!du(t,s,n))return{nationalNumber:t};if(n.numberingPlan.possibleLengths()&&(e||(e=Aa(n.numberingPlan.callingCode(),{nationalNumber:s,metadata:n})),!uu(s,e,n)))return{nationalNumber:t}}return{nationalNumber:s,carrierCode:i}}function du(t,e,n){return!(en(t,n.nationalNumberPattern())&&!en(e,n.nationalNumberPattern()))}function uu(t,e,n){switch(Gs(t,e,n)){case"TOO_SHORT":case"INVALID_LENGTH":return!1;default:return!0}}function cu(t,e,n,r,i){var s=n?Us(n,i):r;if(t.indexOf(s)===0){i=new st(i),i.selectNumberingPlan(n,s);var o=t.slice(s.length),l=ks(o,e,i),a=l.nationalNumber,d=ks(t,e,i),u=d.nationalNumber;if(!en(u,i.nationalNumberPattern())&&en(a,i.nationalNumberPattern())||Gs(u,e,i)==="TOO_LONG")return{countryCallingCode:s,number:o}}return{number:t}}function Na(t,e,n,r,i){if(!t)return{};var s;if(t[0]!=="+"){var o=iu(t,n,r,i);if(o&&o!==t)s=!0,t="+"+o;else{if(n||r){var l=cu(t,e,n,r,i),a=l.countryCallingCode,d=l.number;if(a)return{countryCallingCodeSource:"FROM_NUMBER_WITHOUT_PLUS_SIGN",countryCallingCode:a,number:d}}return{number:t}}}if(t[1]==="0")return{};i=new st(i);for(var u=2;u-1<=J0&&u<=t.length;){var c=t.slice(1,u);if(i.hasCallingCode(c))return i.selectNumberingPlan(c),{countryCallingCodeSource:s?"FROM_NUMBER_WITH_IDD":"FROM_NUMBER_WITH_PLUS_SIGN",countryCallingCode:c,number:t.slice(u)};u++}return{}}function fu(t){return t.replace(new RegExp("[".concat(Pi,"]+"),"g")," ").trim()}var hu=/(\$\d)/;function pu(t,e,n){var r=n.useInternationalFormat,i=n.withNationalPrefix,s=t.replace(new RegExp(e.pattern()),r?e.internationalFormat():i&&e.nationalPrefixFormattingRule()?e.format().replace(hu,e.nationalPrefixFormattingRule()):e.format());return r?fu(s):s}var mu=/^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;function gu(t,e,n){var r=new st(n);if(r.selectNumberingPlan(t,e),r.defaultIDDPrefix())return r.defaultIDDPrefix();if(mu.test(r.IDDPrefix()))return r.IDDPrefix()}var bu=";ext=",Dn=function(e){return"([".concat(Lt,"]{1,").concat(e,"})")};function za(t){var e="20",n="15",r="9",i="6",s="[  \\t,]*",o="[:\\.．]?[  \\t,-]*",l="#?",a="(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)",d="(?:[xｘ#＃~～]|int|ｉｎｔ)",u="[- ]+",c="[  \\t]*",h="(?:,{2}|;)",b=bu+Dn(e),m=s+a+o+Dn(e)+l,v=s+d+o+Dn(r)+l,g=u+Dn(i)+"#",y=c+h+o+Dn(n)+l,$=c+"(?:,)+"+o+Dn(r)+l;return b+"|"+m+"|"+v+"|"+g+"|"+y+"|"+$}var vu="["+Lt+"]{"+qs+"}",$u="["+Ks+"]{0,1}(?:["+Pi+"]*["+Lt+"]){3,}["+Pi+Lt+"]*",_u=new RegExp("^["+Ks+"]{0,1}(?:["+Pi+"]*["+Lt+"]){1,2}$","i"),yu=$u+"(?:"+za()+")?",wu=new RegExp("^"+vu+"$|^"+yu+"$","i");function ku(t){return t.length>=qs&&wu.test(t)}function Cu(t){return _u.test(t)}function Su(t){var e=t.number,n=t.ext;if(!e)return"";if(e[0]!=="+")throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');return"tel:".concat(e).concat(n?";ext="+n:"")}function Mr(t){"@babel/helpers - typeof";return Mr=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Mr(t)}function xu(t,e){var n=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n)return(n=n.call(t)).next.bind(n);if(Array.isArray(t)||(n=Eu(t))||e){n&&(t=n);var r=0;return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Eu(t,e){if(t){if(typeof t=="string")return Mo(t,e);var n={}.toString.call(t).slice(8,-1);return n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set"?Array.from(t):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Mo(t,e):void 0}}function Mo(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function Ao(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),n.push.apply(n,r)}return n}function No(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Ao(Object(n),!0).forEach(function(r){Tu(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ao(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Tu(t,e,n){return(e=Iu(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Iu(t){var e=Ou(t,"string");return Mr(e)=="symbol"?e:e+""}function Ou(t,e){if(Mr(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e||"default");if(Mr(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}var zo={formatExtension:function(e,n,r){return"".concat(e).concat(r.ext()).concat(n)}};function Pu(t,e,n,r){if(n?n=No(No({},zo),n):n=zo,r=new st(r),t.country&&t.country!=="001"){if(!r.hasCountry(t.country))throw new Error("Unknown country: ".concat(t.country));r.selectNumberingPlan(t.country)}else if(t.countryCallingCode)r.selectNumberingPlan(t.countryCallingCode);else return t.phone||"";var i=r.countryCallingCode(),s=n.v2?t.nationalNumber:t.phone,o;switch(e){case"NATIONAL":return s?(o=Mi(s,t.carrierCode,"NATIONAL",r,n),fs(o,t.ext,r,n.formatExtension)):"";case"INTERNATIONAL":return s?(o=Mi(s,null,"INTERNATIONAL",r,n),o="+".concat(i," ").concat(o),fs(o,t.ext,r,n.formatExtension)):"+".concat(i);case"E.164":return"+".concat(i).concat(s);case"RFC3966":return Su({number:"+".concat(i).concat(s),ext:t.ext});case"IDD":if(!n.fromCountry)return;var l=Au(s,t.carrierCode,i,n.fromCountry,r);return fs(l,t.ext,r,n.formatExtension);default:throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(e,'"'))}}function Mi(t,e,n,r,i){var s=Mu(r.formats(),t);return s?pu(t,s,{useInternationalFormat:n==="INTERNATIONAL",withNationalPrefix:!(s.nationalPrefixIsOptionalWhenFormattingInNationalFormat()&&i&&i.nationalPrefix===!1),carrierCode:e,metadata:r}):t}function Mu(t,e){for(var n=xu(t),r;!(r=n()).done;){var i=r.value;if(i.leadingDigitsPatterns().length>0){var s=i.leadingDigitsPatterns()[i.leadingDigitsPatterns().length-1];if(e.search(s)!==0)continue}if(en(e,i.pattern()))return i}}function fs(t,e,n,r){return e?r(t,e,n):t}function Au(t,e,n,r,i){var s=Us(r,i.metadata);if(s===n){var o=Mi(t,e,"NATIONAL",i);return n==="1"?n+" "+o:o}var l=gu(r,void 0,i.metadata);if(l)return"".concat(l," ").concat(n," ").concat(Mi(t,null,"INTERNATIONAL",i))}function Ar(t){"@babel/helpers - typeof";return Ar=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ar(t)}function Lo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),n.push.apply(n,r)}return n}function Fo(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Lo(Object(n),!0).forEach(function(r){Nu(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Lo(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Nu(t,e,n){return(e=La(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function zu(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Lu(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,La(r.key),r)}}function Fu(t,e,n){return e&&Lu(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t}function La(t){var e=Ru(t,"string");return Ar(e)=="symbol"?e:e+""}function Ru(t,e){if(Ar(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e||"default");if(Ar(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}var ju=function(){function t(e,n,r){if(zu(this,t),!e)throw new TypeError("First argument is required");if(typeof e!="string")throw new TypeError("First argument must be a string");if(e[0]==="+"&&!n)throw new TypeError("`metadata` argument not passed");if(Jn(n)&&Jn(n.countries)){r=n;var i=e;if(!Zu.test(i))throw new Error('Invalid `number` argument passed: must consist of a "+" followed by digits');var s=Na(i,void 0,void 0,void 0,r),o=s.countryCallingCode,l=s.number;if(n=l,e=o,!n)throw new Error("Invalid `number` argument passed: too short")}if(!n)throw new TypeError("`nationalNumber` argument is required");if(typeof n!="string")throw new TypeError("`nationalNumber` argument must be a string");Oa(r);var a=Bu(e,r),d=a.country,u=a.countryCallingCode;this.country=d,this.countryCallingCode=u,this.nationalNumber=n,this.number="+"+this.countryCallingCode+this.nationalNumber,this.getMetadata=function(){return r}}return Fu(t,[{key:"setExt",value:function(n){this.ext=n}},{key:"getPossibleCountries",value:function(){return this.country?[this.country]:W0(this.countryCallingCode,this.nationalNumber,this.getMetadata())}},{key:"isPossible",value:function(){return Z0(this,{v2:!0},this.getMetadata())}},{key:"isValid",value:function(){return G0(this,{v2:!0},this.getMetadata())}},{key:"isNonGeographic",value:function(){var n=new st(this.getMetadata());return n.isNonGeographicCallingCode(this.countryCallingCode)}},{key:"isEqual",value:function(n){return this.number===n.number&&this.ext===n.ext}},{key:"getType",value:function(){return Ws(this,{v2:!0},this.getMetadata())}},{key:"format",value:function(n,r){return Pu(this,n,r?Fo(Fo({},r),{},{v2:!0}):{v2:!0},this.getMetadata())}},{key:"formatNational",value:function(n){return this.format("NATIONAL",n)}},{key:"formatInternational",value:function(n){return this.format("INTERNATIONAL",n)}},{key:"getURI",value:function(n){return this.format("RFC3966",n)}}])}(),Du=function(e){return/^[A-Z]{2}$/.test(e)};function Bu(t,e){var n,r,i=new st(e);return Du(t)?(n=t,i.selectNumberingPlan(n),r=i.countryCallingCode()):r=t,{country:n,countryCallingCode:r}}var Zu=/^\+\d+$/;function Cs(t){"@babel/helpers - typeof";return Cs=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Cs(t)}function Hu(t,e,n){return Object.defineProperty(t,"prototype",{writable:!1}),t}function Vu(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Uu(t,e,n){return e=zr(e),Gu(t,Js()?Reflect.construct(e,n||[],zr(t).constructor):e.apply(t,n))}function Gu(t,e){if(e&&(Cs(e)=="object"||typeof e=="function"))return e;if(e!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return Wu(t)}function Wu(t){if(t===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function qu(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Nr(t,e)}function Ss(t){var e=typeof Map=="function"?new Map:void 0;return Ss=function(r){if(r===null||!Ju(r))return r;if(typeof r!="function")throw new TypeError("Super expression must either be null or a function");if(e!==void 0){if(e.has(r))return e.get(r);e.set(r,i)}function i(){return Ku(r,arguments,zr(this).constructor)}return i.prototype=Object.create(r.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),Nr(i,r)},Ss(t)}function Ku(t,e,n){if(Js())return Reflect.construct.apply(null,arguments);var r=[null];r.push.apply(r,e);var i=new(t.bind.apply(t,r));return n&&Nr(i,n.prototype),i}function Js(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch{}return(Js=function(){return!!t})()}function Ju(t){try{return Function.toString.call(t).indexOf("[native code]")!==-1}catch{return typeof t=="function"}}function Nr(t,e){return Nr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,r){return n.__proto__=r,n},Nr(t,e)}function zr(t){return zr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},zr(t)}var Yt=function(t){function e(n){var r;return Vu(this,e),r=Uu(this,e,[n]),Object.setPrototypeOf(r,e.prototype),r.name=r.constructor.name,r}return qu(e,t),Hu(e)}(Ss(Error)),Ro=new RegExp("(?:"+za()+")$","i");function Xu(t){var e=t.search(Ro);if(e<0)return{};for(var n=t.slice(0,e),r=t.match(Ro),i=1;i<r.length;){if(r[i])return{number:n,ext:r[i]};i++}}var Yu={0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9","０":"0","１":"1","２":"2","３":"3","４":"4","５":"5","６":"6","７":"7","８":"8","９":"9","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9"};function Qu(t){return Yu[t]}function ec(t,e){var n=typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n)return(n=n.call(t)).next.bind(n);if(Array.isArray(t)||(n=tc(t))||e){n&&(t=n);var r=0;return function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function tc(t,e){if(t){if(typeof t=="string")return jo(t,e);var n={}.toString.call(t).slice(8,-1);return n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set"?Array.from(t):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?jo(t,e):void 0}}function jo(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function Do(t){for(var e="",n=ec(t.split("")),r;!(r=n()).done;){var i=r.value;e+=nc(i,e)||""}return e}function nc(t,e,n){return t==="+"?e?void 0:"+":Qu(t)}var Fa="+",rc="[\\-\\.\\(\\)]?",Bo="(["+Lt+"]|"+rc+")",ic="^\\"+Fa+Bo+"*["+Lt+"]"+Bo+"*$",sc=new RegExp(ic,"g"),xs=Lt,oc="["+xs+"]+((\\-)*["+xs+"])*",lc="a-zA-Z",ac="["+lc+"]+((\\-)*["+xs+"])*",dc="^("+oc+"\\.)*"+ac+"\\.?$",uc=new RegExp(dc,"g"),Zo="tel:",Es=";phone-context=",cc=";isub=";function fc(t){var e=t.indexOf(Es);if(e<0)return null;var n=e+Es.length;if(n>=t.length)return"";var r=t.indexOf(";",n);return r>=0?t.substring(n,r):t.substring(n)}function hc(t){return t===null?!0:t.length===0?!1:sc.test(t)||uc.test(t)}function pc(t,e){var n=e.extractFormattedPhoneNumber,r=fc(t);if(!hc(r))throw new Yt("NOT_A_NUMBER");var i;if(r===null)i=n(t)||"";else{i="",r.charAt(0)===Fa&&(i+=r);var s=t.indexOf(Zo),o;s>=0?o=s+Zo.length:o=0;var l=t.indexOf(Es);i+=t.substring(o,l)}var a=i.indexOf(cc);if(a>0&&(i=i.substring(0,a)),i!=="")return i}var mc=250,gc=new RegExp("["+Ks+Lt+"]"),bc=new RegExp("[^"+Lt+"#]+$");function vc(t,e,n){if(e=e||{},n=new st(n),e.defaultCountry&&!n.hasCountry(e.defaultCountry))throw e.v2?new Yt("INVALID_COUNTRY"):new Error("Unknown country: ".concat(e.defaultCountry));var r=_c(t,e.v2,e.extract),i=r.number,s=r.ext,o=r.error;if(!i){if(e.v2)throw o==="TOO_SHORT"?new Yt("TOO_SHORT"):new Yt("NOT_A_NUMBER");return{}}var l=wc(i,e.defaultCountry,e.defaultCallingCode,n),a=l.country,d=l.nationalNumber,u=l.countryCallingCode,c=l.countryCallingCodeSource,h=l.carrierCode;if(!n.hasSelectedNumberingPlan()){if(e.v2)throw new Yt("INVALID_COUNTRY");return{}}if(!d||d.length<qs){if(e.v2)throw new Yt("TOO_SHORT");return{}}if(d.length>K0){if(e.v2)throw new Yt("TOO_LONG");return{}}if(e.v2){var b=new ju(u,d,n.metadata);return a&&(b.country=a),h&&(b.carrierCode=h),s&&(b.ext=s),b.__countryCallingCodeSource=c,b}var m=(e.extended?n.hasSelectedNumberingPlan():a)?en(d,n.nationalNumberPattern()):!1;return e.extended?{country:a,countryCallingCode:u,carrierCode:h,valid:m,possible:m?!0:!!(e.extended===!0&&n.possibleLengths()&&Ma(d,a,n)),phone:d,ext:s}:m?yc(a,d,s):{}}function $c(t,e,n){if(t){if(t.length>mc){if(n)throw new Yt("TOO_LONG");return}if(e===!1)return t;var r=t.search(gc);if(!(r<0))return t.slice(r).replace(bc,"")}}function _c(t,e,n){var r=pc(t,{extractFormattedPhoneNumber:function(o){return $c(o,n,e)}});if(!r)return{};if(!ku(r))return Cu(r)?{error:"TOO_SHORT"}:{};var i=Xu(r);return i.ext?i:{number:r}}function yc(t,e,n){var r={country:t,phone:e};return n&&(r.ext=n),r}function wc(t,e,n,r){var i=Na(Do(t),void 0,e,n,r.metadata),s=i.countryCallingCodeSource,o=i.countryCallingCode,l=i.number,a;if(o)r.selectNumberingPlan(o);else if(l&&(e||n))r.selectNumberingPlan(e,n),e&&(a=e),o=n||Us(e,r.metadata);else return{};if(!l)return{countryCallingCodeSource:s,countryCallingCode:o};var d=ks(Do(l),a,r),u=d.nationalNumber,c=d.carrierCode,h=Aa(o,{nationalNumber:u,metadata:r});return h&&(a=h,h==="001"||r.selectNumberingPlan(a)),{country:a,countryCallingCode:o,countryCallingCodeSource:s,nationalNumber:u,carrierCode:c}}function Lr(t){"@babel/helpers - typeof";return Lr=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Lr(t)}function Ho(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),n.push.apply(n,r)}return n}function Vo(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Ho(Object(n),!0).forEach(function(r){kc(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Ho(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function kc(t,e,n){return(e=Cc(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Cc(t){var e=Sc(t,"string");return Lr(e)=="symbol"?e:e+""}function Sc(t,e){if(Lr(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e||"default");if(Lr(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function xc(t,e,n){return vc(t,Vo(Vo({},e),{},{v2:!0}),n)}function Fr(t){"@babel/helpers - typeof";return Fr=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Fr(t)}function Uo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),n.push.apply(n,r)}return n}function Ec(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Uo(Object(n),!0).forEach(function(r){Tc(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Uo(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Tc(t,e,n){return(e=Ic(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Ic(t){var e=Oc(t,"string");return Fr(e)=="symbol"?e:e+""}function Oc(t,e){if(Fr(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e||"default");if(Fr(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function Pc(t,e){return zc(t)||Nc(t,e)||Ac(t,e)||Mc()}function Mc(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Ac(t,e){if(t){if(typeof t=="string")return Go(t,e);var n={}.toString.call(t).slice(8,-1);return n==="Object"&&t.constructor&&(n=t.constructor.name),n==="Map"||n==="Set"?Array.from(t):n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Go(t,e):void 0}}function Go(t,e){(e==null||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function Nc(t,e){var n=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(n!=null){var r,i,s,o,l=[],a=!0,d=!1;try{if(s=(n=n.call(t)).next,e!==0)for(;!(a=(r=s.call(n)).done)&&(l.push(r.value),l.length!==e);a=!0);}catch(u){d=!0,i=u}finally{try{if(!a&&n.return!=null&&(o=n.return(),Object(o)!==o))return}finally{if(d)throw i}}return l}}function zc(t){if(Array.isArray(t))return t}function Lc(t){var e=Array.prototype.slice.call(t),n=Pc(e,4),r=n[0],i=n[1],s=n[2],o=n[3],l,a,d;if(typeof r=="string")l=r;else throw new TypeError("A text for parsing must be a string.");if(!i||typeof i=="string")o?(a=s,d=o):(a=void 0,d=s),i&&(a=Ec({defaultCountry:i},a));else if(Jn(i))s?(a=i,d=s):d=i;else throw new Error("Invalid second argument: ".concat(i));return{text:l,options:a,metadata:d}}function Rr(t){"@babel/helpers - typeof";return Rr=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Rr(t)}function Wo(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(i){return Object.getOwnPropertyDescriptor(t,i).enumerable})),n.push.apply(n,r)}return n}function qo(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?Wo(Object(n),!0).forEach(function(r){Fc(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Wo(Object(n)).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Fc(t,e,n){return(e=Rc(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Rc(t){var e=jc(t,"string");return Rr(e)=="symbol"?e:e+""}function jc(t,e){if(Rr(t)!="object"||!t)return t;var n=t[Symbol.toPrimitive];if(n!==void 0){var r=n.call(t,e||"default");if(Rr(r)!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(t)}function Dc(t,e,n){e&&e.defaultCountry&&!D0(e.defaultCountry,n)&&(e=qo(qo({},e),{},{defaultCountry:void 0}));try{return xc(t,e,n)}catch(r){if(!(r instanceof Yt))throw r}}function Bc(){var t=Lc(arguments),e=t.text,n=t.options,r=t.metadata;return Dc(e,n,r)}function Ra(){return T0(Bc,arguments)}var ye;(function(t){t.assertEqual=i=>i;function e(i){}t.assertIs=e;function n(i){throw new Error}t.assertNever=n,t.arrayToEnum=i=>{const s={};for(const o of i)s[o]=o;return s},t.getValidEnumValues=i=>{const s=t.objectKeys(i).filter(l=>typeof i[i[l]]!="number"),o={};for(const l of s)o[l]=i[l];return t.objectValues(o)},t.objectValues=i=>t.objectKeys(i).map(function(s){return i[s]}),t.objectKeys=typeof Object.keys=="function"?i=>Object.keys(i):i=>{const s=[];for(const o in i)Object.prototype.hasOwnProperty.call(i,o)&&s.push(o);return s},t.find=(i,s)=>{for(const o of i)if(s(o))return o},t.isInteger=typeof Number.isInteger=="function"?i=>Number.isInteger(i):i=>typeof i=="number"&&isFinite(i)&&Math.floor(i)===i;function r(i,s=" | "){return i.map(o=>typeof o=="string"?`'${o}'`:o).join(s)}t.joinValues=r,t.jsonStringifyReplacer=(i,s)=>typeof s=="bigint"?s.toString():s})(ye||(ye={}));var Ts;(function(t){t.mergeShapes=(e,n)=>({...e,...n})})(Ts||(Ts={}));const U=ye.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),un=t=>{switch(typeof t){case"undefined":return U.undefined;case"string":return U.string;case"number":return isNaN(t)?U.nan:U.number;case"boolean":return U.boolean;case"function":return U.function;case"bigint":return U.bigint;case"symbol":return U.symbol;case"object":return Array.isArray(t)?U.array:t===null?U.null:t.then&&typeof t.then=="function"&&t.catch&&typeof t.catch=="function"?U.promise:typeof Map<"u"&&t instanceof Map?U.map:typeof Set<"u"&&t instanceof Set?U.set:typeof Date<"u"&&t instanceof Date?U.date:U.object;default:return U.unknown}},R=ye.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),Zc=t=>JSON.stringify(t,null,2).replace(/"([^"]+)":/g,"$1:");class wt extends Error{constructor(e){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const n=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,n):this.__proto__=n,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const n=e||function(s){return s.message},r={_errors:[]},i=s=>{for(const o of s.issues)if(o.code==="invalid_union")o.unionErrors.map(i);else if(o.code==="invalid_return_type")i(o.returnTypeError);else if(o.code==="invalid_arguments")i(o.argumentsError);else if(o.path.length===0)r._errors.push(n(o));else{let l=r,a=0;for(;a<o.path.length;){const d=o.path[a];a===o.path.length-1?(l[d]=l[d]||{_errors:[]},l[d]._errors.push(n(o))):l[d]=l[d]||{_errors:[]},l=l[d],a++}}};return i(this),r}static assert(e){if(!(e instanceof wt))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,ye.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=n=>n.message){const n={},r=[];for(const i of this.issues)i.path.length>0?(n[i.path[0]]=n[i.path[0]]||[],n[i.path[0]].push(e(i))):r.push(e(i));return{formErrors:r,fieldErrors:n}}get formErrors(){return this.flatten()}}wt.create=t=>new wt(t);const rr=(t,e)=>{let n;switch(t.code){case R.invalid_type:t.received===U.undefined?n="Required":n=`Expected ${t.expected}, received ${t.received}`;break;case R.invalid_literal:n=`Invalid literal value, expected ${JSON.stringify(t.expected,ye.jsonStringifyReplacer)}`;break;case R.unrecognized_keys:n=`Unrecognized key(s) in object: ${ye.joinValues(t.keys,", ")}`;break;case R.invalid_union:n="Invalid input";break;case R.invalid_union_discriminator:n=`Invalid discriminator value. Expected ${ye.joinValues(t.options)}`;break;case R.invalid_enum_value:n=`Invalid enum value. Expected ${ye.joinValues(t.options)}, received '${t.received}'`;break;case R.invalid_arguments:n="Invalid function arguments";break;case R.invalid_return_type:n="Invalid function return type";break;case R.invalid_date:n="Invalid date";break;case R.invalid_string:typeof t.validation=="object"?"includes"in t.validation?(n=`Invalid input: must include "${t.validation.includes}"`,typeof t.validation.position=="number"&&(n=`${n} at one or more positions greater than or equal to ${t.validation.position}`)):"startsWith"in t.validation?n=`Invalid input: must start with "${t.validation.startsWith}"`:"endsWith"in t.validation?n=`Invalid input: must end with "${t.validation.endsWith}"`:ye.assertNever(t.validation):t.validation!=="regex"?n=`Invalid ${t.validation}`:n="Invalid";break;case R.too_small:t.type==="array"?n=`Array must contain ${t.exact?"exactly":t.inclusive?"at least":"more than"} ${t.minimum} element(s)`:t.type==="string"?n=`String must contain ${t.exact?"exactly":t.inclusive?"at least":"over"} ${t.minimum} character(s)`:t.type==="number"?n=`Number must be ${t.exact?"exactly equal to ":t.inclusive?"greater than or equal to ":"greater than "}${t.minimum}`:t.type==="date"?n=`Date must be ${t.exact?"exactly equal to ":t.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(t.minimum))}`:n="Invalid input";break;case R.too_big:t.type==="array"?n=`Array must contain ${t.exact?"exactly":t.inclusive?"at most":"less than"} ${t.maximum} element(s)`:t.type==="string"?n=`String must contain ${t.exact?"exactly":t.inclusive?"at most":"under"} ${t.maximum} character(s)`:t.type==="number"?n=`Number must be ${t.exact?"exactly":t.inclusive?"less than or equal to":"less than"} ${t.maximum}`:t.type==="bigint"?n=`BigInt must be ${t.exact?"exactly":t.inclusive?"less than or equal to":"less than"} ${t.maximum}`:t.type==="date"?n=`Date must be ${t.exact?"exactly":t.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(t.maximum))}`:n="Invalid input";break;case R.custom:n="Invalid input";break;case R.invalid_intersection_types:n="Intersection results could not be merged";break;case R.not_multiple_of:n=`Number must be a multiple of ${t.multipleOf}`;break;case R.not_finite:n="Number must be finite";break;default:n=e.defaultError,ye.assertNever(t)}return{message:n}};let ja=rr;function Hc(t){ja=t}function Ai(){return ja}const Ni=t=>{const{data:e,path:n,errorMaps:r,issueData:i}=t,s=[...n,...i.path||[]],o={...i,path:s};if(i.message!==void 0)return{...i,path:s,message:i.message};let l="";const a=r.filter(d=>!!d).slice().reverse();for(const d of a)l=d(o,{data:e,defaultError:l}).message;return{...i,path:s,message:l}},Vc=[];function V(t,e){const n=Ai(),r=Ni({issueData:e,data:t.data,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,n,n===rr?void 0:rr].filter(i=>!!i)});t.common.issues.push(r)}class rt{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(e,n){const r=[];for(const i of n){if(i.status==="aborted")return ue;i.status==="dirty"&&e.dirty(),r.push(i.value)}return{status:e.value,value:r}}static async mergeObjectAsync(e,n){const r=[];for(const i of n){const s=await i.key,o=await i.value;r.push({key:s,value:o})}return rt.mergeObjectSync(e,r)}static mergeObjectSync(e,n){const r={};for(const i of n){const{key:s,value:o}=i;if(s.status==="aborted"||o.status==="aborted")return ue;s.status==="dirty"&&e.dirty(),o.status==="dirty"&&e.dirty(),s.value!=="__proto__"&&(typeof o.value<"u"||i.alwaysSet)&&(r[s.value]=o.value)}return{status:e.value,value:r}}}const ue=Object.freeze({status:"aborted"}),Gn=t=>({status:"dirty",value:t}),ht=t=>({status:"valid",value:t}),Is=t=>t.status==="aborted",Os=t=>t.status==="dirty",jr=t=>t.status==="valid",Dr=t=>typeof Promise<"u"&&t instanceof Promise;function zi(t,e,n,r){if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e.get(t)}function Da(t,e,n,r,i){if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e.set(t,n),n}var se;(function(t){t.errToObj=e=>typeof e=="string"?{message:e}:e||{},t.toString=e=>typeof e=="string"?e:e==null?void 0:e.message})(se||(se={}));var kr,Cr;class Ht{constructor(e,n,r,i){this._cachedPath=[],this.parent=e,this.data=n,this._path=r,this._key=i}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const Ko=(t,e)=>{if(jr(e))return{success:!0,data:e.value};if(!t.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const n=new wt(t.common.issues);return this._error=n,this._error}}};function me(t){if(!t)return{};const{errorMap:e,invalid_type_error:n,required_error:r,description:i}=t;if(e&&(n||r))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return e?{errorMap:e,description:i}:{errorMap:(o,l)=>{var a,d;const{message:u}=t;return o.code==="invalid_enum_value"?{message:u??l.defaultError}:typeof l.data>"u"?{message:(a=u??r)!==null&&a!==void 0?a:l.defaultError}:o.code!=="invalid_type"?{message:l.defaultError}:{message:(d=u??n)!==null&&d!==void 0?d:l.defaultError}},description:i}}class be{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return un(e.data)}_getOrReturnCtx(e,n){return n||{common:e.parent.common,data:e.data,parsedType:un(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new rt,ctx:{common:e.parent.common,data:e.data,parsedType:un(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const n=this._parse(e);if(Dr(n))throw new Error("Synchronous parse encountered promise.");return n}_parseAsync(e){const n=this._parse(e);return Promise.resolve(n)}parse(e,n){const r=this.safeParse(e,n);if(r.success)return r.data;throw r.error}safeParse(e,n){var r;const i={common:{issues:[],async:(r=n==null?void 0:n.async)!==null&&r!==void 0?r:!1,contextualErrorMap:n==null?void 0:n.errorMap},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:un(e)},s=this._parseSync({data:e,path:i.path,parent:i});return Ko(i,s)}async parseAsync(e,n){const r=await this.safeParseAsync(e,n);if(r.success)return r.data;throw r.error}async safeParseAsync(e,n){const r={common:{issues:[],contextualErrorMap:n==null?void 0:n.errorMap,async:!0},path:(n==null?void 0:n.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:un(e)},i=this._parse({data:e,path:r.path,parent:r}),s=await(Dr(i)?i:Promise.resolve(i));return Ko(r,s)}refine(e,n){const r=i=>typeof n=="string"||typeof n>"u"?{message:n}:typeof n=="function"?n(i):n;return this._refinement((i,s)=>{const o=e(i),l=()=>s.addIssue({code:R.custom,...r(i)});return typeof Promise<"u"&&o instanceof Promise?o.then(a=>a?!0:(l(),!1)):o?!0:(l(),!1)})}refinement(e,n){return this._refinement((r,i)=>e(r)?!0:(i.addIssue(typeof n=="function"?n(r,i):n),!1))}_refinement(e){return new Ft({schema:this,typeName:ae.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return Bt.create(this,this._def)}nullable(){return gn.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return zt.create(this,this._def)}promise(){return sr.create(this,this._def)}or(e){return Vr.create([this,e],this._def)}and(e){return Ur.create(this,e,this._def)}transform(e){return new Ft({...me(this._def),schema:this,typeName:ae.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const n=typeof e=="function"?e:()=>e;return new Jr({...me(this._def),innerType:this,defaultValue:n,typeName:ae.ZodDefault})}brand(){return new Xs({typeName:ae.ZodBranded,type:this,...me(this._def)})}catch(e){const n=typeof e=="function"?e:()=>e;return new Xr({...me(this._def),innerType:this,catchValue:n,typeName:ae.ZodCatch})}describe(e){const n=this.constructor;return new n({...this._def,description:e})}pipe(e){return si.create(this,e)}readonly(){return Yr.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const Uc=/^c[^\s-]{8,}$/i,Gc=/^[0-9a-z]+$/,Wc=/^[0-9A-HJKMNP-TV-Z]{26}$/,qc=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Kc=/^[a-z0-9_-]{21}$/i,Jc=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Xc=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,Yc="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";let hs;const Qc=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,e2=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,t2=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Ba="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",n2=new RegExp(`^${Ba}$`);function Za(t){let e="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return t.precision?e=`${e}\\.\\d{${t.precision}}`:t.precision==null&&(e=`${e}(\\.\\d+)?`),e}function r2(t){return new RegExp(`^${Za(t)}$`)}function Ha(t){let e=`${Ba}T${Za(t)}`;const n=[];return n.push(t.local?"Z?":"Z"),t.offset&&n.push("([+-]\\d{2}:?\\d{2})"),e=`${e}(${n.join("|")})`,new RegExp(`^${e}$`)}function i2(t,e){return!!((e==="v4"||!e)&&Qc.test(t)||(e==="v6"||!e)&&e2.test(t))}class Nt extends be{_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==U.string){const s=this._getOrReturnCtx(e);return V(s,{code:R.invalid_type,expected:U.string,received:s.parsedType}),ue}const r=new rt;let i;for(const s of this._def.checks)if(s.kind==="min")e.data.length<s.value&&(i=this._getOrReturnCtx(e,i),V(i,{code:R.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="max")e.data.length>s.value&&(i=this._getOrReturnCtx(e,i),V(i,{code:R.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="length"){const o=e.data.length>s.value,l=e.data.length<s.value;(o||l)&&(i=this._getOrReturnCtx(e,i),o?V(i,{code:R.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}):l&&V(i,{code:R.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}),r.dirty())}else if(s.kind==="email")Xc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"email",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="emoji")hs||(hs=new RegExp(Yc,"u")),hs.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"emoji",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="uuid")qc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"uuid",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="nanoid")Kc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"nanoid",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid")Uc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"cuid",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid2")Gc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"cuid2",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="ulid")Wc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"ulid",code:R.invalid_string,message:s.message}),r.dirty());else if(s.kind==="url")try{new URL(e.data)}catch{i=this._getOrReturnCtx(e,i),V(i,{validation:"url",code:R.invalid_string,message:s.message}),r.dirty()}else s.kind==="regex"?(s.regex.lastIndex=0,s.regex.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"regex",code:R.invalid_string,message:s.message}),r.dirty())):s.kind==="trim"?e.data=e.data.trim():s.kind==="includes"?e.data.includes(s.value,s.position)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:{includes:s.value,position:s.position},message:s.message}),r.dirty()):s.kind==="toLowerCase"?e.data=e.data.toLowerCase():s.kind==="toUpperCase"?e.data=e.data.toUpperCase():s.kind==="startsWith"?e.data.startsWith(s.value)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:{startsWith:s.value},message:s.message}),r.dirty()):s.kind==="endsWith"?e.data.endsWith(s.value)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:{endsWith:s.value},message:s.message}),r.dirty()):s.kind==="datetime"?Ha(s).test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:"datetime",message:s.message}),r.dirty()):s.kind==="date"?n2.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:"date",message:s.message}),r.dirty()):s.kind==="time"?r2(s).test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{code:R.invalid_string,validation:"time",message:s.message}),r.dirty()):s.kind==="duration"?Jc.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"duration",code:R.invalid_string,message:s.message}),r.dirty()):s.kind==="ip"?i2(e.data,s.version)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"ip",code:R.invalid_string,message:s.message}),r.dirty()):s.kind==="base64"?t2.test(e.data)||(i=this._getOrReturnCtx(e,i),V(i,{validation:"base64",code:R.invalid_string,message:s.message}),r.dirty()):ye.assertNever(s);return{status:r.value,value:e.data}}_regex(e,n,r){return this.refinement(i=>e.test(i),{validation:n,code:R.invalid_string,...se.errToObj(r)})}_addCheck(e){return new Nt({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...se.errToObj(e)})}url(e){return this._addCheck({kind:"url",...se.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...se.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...se.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...se.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...se.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...se.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...se.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...se.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...se.errToObj(e)})}datetime(e){var n,r;return typeof e=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:"datetime",precision:typeof(e==null?void 0:e.precision)>"u"?null:e==null?void 0:e.precision,offset:(n=e==null?void 0:e.offset)!==null&&n!==void 0?n:!1,local:(r=e==null?void 0:e.local)!==null&&r!==void 0?r:!1,...se.errToObj(e==null?void 0:e.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return typeof e=="string"?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:typeof(e==null?void 0:e.precision)>"u"?null:e==null?void 0:e.precision,...se.errToObj(e==null?void 0:e.message)})}duration(e){return this._addCheck({kind:"duration",...se.errToObj(e)})}regex(e,n){return this._addCheck({kind:"regex",regex:e,...se.errToObj(n)})}includes(e,n){return this._addCheck({kind:"includes",value:e,position:n==null?void 0:n.position,...se.errToObj(n==null?void 0:n.message)})}startsWith(e,n){return this._addCheck({kind:"startsWith",value:e,...se.errToObj(n)})}endsWith(e,n){return this._addCheck({kind:"endsWith",value:e,...se.errToObj(n)})}min(e,n){return this._addCheck({kind:"min",value:e,...se.errToObj(n)})}max(e,n){return this._addCheck({kind:"max",value:e,...se.errToObj(n)})}length(e,n){return this._addCheck({kind:"length",value:e,...se.errToObj(n)})}nonempty(e){return this.min(1,se.errToObj(e))}trim(){return new Nt({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new Nt({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new Nt({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(e=>e.kind==="datetime")}get isDate(){return!!this._def.checks.find(e=>e.kind==="date")}get isTime(){return!!this._def.checks.find(e=>e.kind==="time")}get isDuration(){return!!this._def.checks.find(e=>e.kind==="duration")}get isEmail(){return!!this._def.checks.find(e=>e.kind==="email")}get isURL(){return!!this._def.checks.find(e=>e.kind==="url")}get isEmoji(){return!!this._def.checks.find(e=>e.kind==="emoji")}get isUUID(){return!!this._def.checks.find(e=>e.kind==="uuid")}get isNANOID(){return!!this._def.checks.find(e=>e.kind==="nanoid")}get isCUID(){return!!this._def.checks.find(e=>e.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(e=>e.kind==="cuid2")}get isULID(){return!!this._def.checks.find(e=>e.kind==="ulid")}get isIP(){return!!this._def.checks.find(e=>e.kind==="ip")}get isBase64(){return!!this._def.checks.find(e=>e.kind==="base64")}get minLength(){let e=null;for(const n of this._def.checks)n.kind==="min"&&(e===null||n.value>e)&&(e=n.value);return e}get maxLength(){let e=null;for(const n of this._def.checks)n.kind==="max"&&(e===null||n.value<e)&&(e=n.value);return e}}Nt.create=t=>{var e;return new Nt({checks:[],typeName:ae.ZodString,coerce:(e=t==null?void 0:t.coerce)!==null&&e!==void 0?e:!1,...me(t)})};function s2(t,e){const n=(t.toString().split(".")[1]||"").length,r=(e.toString().split(".")[1]||"").length,i=n>r?n:r,s=parseInt(t.toFixed(i).replace(".","")),o=parseInt(e.toFixed(i).replace(".",""));return s%o/Math.pow(10,i)}class hn extends be{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==U.number){const s=this._getOrReturnCtx(e);return V(s,{code:R.invalid_type,expected:U.number,received:s.parsedType}),ue}let r;const i=new rt;for(const s of this._def.checks)s.kind==="int"?ye.isInteger(e.data)||(r=this._getOrReturnCtx(e,r),V(r,{code:R.invalid_type,expected:"integer",received:"float",message:s.message}),i.dirty()):s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.too_small,minimum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),i.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.too_big,maximum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),i.dirty()):s.kind==="multipleOf"?s2(e.data,s.value)!==0&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.not_multiple_of,multipleOf:s.value,message:s.message}),i.dirty()):s.kind==="finite"?Number.isFinite(e.data)||(r=this._getOrReturnCtx(e,r),V(r,{code:R.not_finite,message:s.message}),i.dirty()):ye.assertNever(s);return{status:i.value,value:e.data}}gte(e,n){return this.setLimit("min",e,!0,se.toString(n))}gt(e,n){return this.setLimit("min",e,!1,se.toString(n))}lte(e,n){return this.setLimit("max",e,!0,se.toString(n))}lt(e,n){return this.setLimit("max",e,!1,se.toString(n))}setLimit(e,n,r,i){return new hn({...this._def,checks:[...this._def.checks,{kind:e,value:n,inclusive:r,message:se.toString(i)}]})}_addCheck(e){return new hn({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:se.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:se.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:se.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:se.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:se.toString(e)})}multipleOf(e,n){return this._addCheck({kind:"multipleOf",value:e,message:se.toString(n)})}finite(e){return this._addCheck({kind:"finite",message:se.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:se.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:se.toString(e)})}get minValue(){let e=null;for(const n of this._def.checks)n.kind==="min"&&(e===null||n.value>e)&&(e=n.value);return e}get maxValue(){let e=null;for(const n of this._def.checks)n.kind==="max"&&(e===null||n.value<e)&&(e=n.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind==="int"||e.kind==="multipleOf"&&ye.isInteger(e.value))}get isFinite(){let e=null,n=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(n===null||r.value>n)&&(n=r.value):r.kind==="max"&&(e===null||r.value<e)&&(e=r.value)}return Number.isFinite(n)&&Number.isFinite(e)}}hn.create=t=>new hn({checks:[],typeName:ae.ZodNumber,coerce:(t==null?void 0:t.coerce)||!1,...me(t)});class pn extends be{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==U.bigint){const s=this._getOrReturnCtx(e);return V(s,{code:R.invalid_type,expected:U.bigint,received:s.parsedType}),ue}let r;const i=new rt;for(const s of this._def.checks)s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.too_small,type:"bigint",minimum:s.value,inclusive:s.inclusive,message:s.message}),i.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.too_big,type:"bigint",maximum:s.value,inclusive:s.inclusive,message:s.message}),i.dirty()):s.kind==="multipleOf"?e.data%s.value!==BigInt(0)&&(r=this._getOrReturnCtx(e,r),V(r,{code:R.not_multiple_of,multipleOf:s.value,message:s.message}),i.dirty()):ye.assertNever(s);return{status:i.value,value:e.data}}gte(e,n){return this.setLimit("min",e,!0,se.toString(n))}gt(e,n){return this.setLimit("min",e,!1,se.toString(n))}lte(e,n){return this.setLimit("max",e,!0,se.toString(n))}lt(e,n){return this.setLimit("max",e,!1,se.toString(n))}setLimit(e,n,r,i){return new pn({...this._def,checks:[...this._def.checks,{kind:e,value:n,inclusive:r,message:se.toString(i)}]})}_addCheck(e){return new pn({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:se.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:se.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:se.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:se.toString(e)})}multipleOf(e,n){return this._addCheck({kind:"multipleOf",value:e,message:se.toString(n)})}get minValue(){let e=null;for(const n of this._def.checks)n.kind==="min"&&(e===null||n.value>e)&&(e=n.value);return e}get maxValue(){let e=null;for(const n of this._def.checks)n.kind==="max"&&(e===null||n.value<e)&&(e=n.value);return e}}pn.create=t=>{var e;return new pn({checks:[],typeName:ae.ZodBigInt,coerce:(e=t==null?void 0:t.coerce)!==null&&e!==void 0?e:!1,...me(t)})};class Br extends be{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==U.boolean){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.boolean,received:r.parsedType}),ue}return ht(e.data)}}Br.create=t=>new Br({typeName:ae.ZodBoolean,coerce:(t==null?void 0:t.coerce)||!1,...me(t)});class In extends be{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==U.date){const s=this._getOrReturnCtx(e);return V(s,{code:R.invalid_type,expected:U.date,received:s.parsedType}),ue}if(isNaN(e.data.getTime())){const s=this._getOrReturnCtx(e);return V(s,{code:R.invalid_date}),ue}const r=new rt;let i;for(const s of this._def.checks)s.kind==="min"?e.data.getTime()<s.value&&(i=this._getOrReturnCtx(e,i),V(i,{code:R.too_small,message:s.message,inclusive:!0,exact:!1,minimum:s.value,type:"date"}),r.dirty()):s.kind==="max"?e.data.getTime()>s.value&&(i=this._getOrReturnCtx(e,i),V(i,{code:R.too_big,message:s.message,inclusive:!0,exact:!1,maximum:s.value,type:"date"}),r.dirty()):ye.assertNever(s);return{status:r.value,value:new Date(e.data.getTime())}}_addCheck(e){return new In({...this._def,checks:[...this._def.checks,e]})}min(e,n){return this._addCheck({kind:"min",value:e.getTime(),message:se.toString(n)})}max(e,n){return this._addCheck({kind:"max",value:e.getTime(),message:se.toString(n)})}get minDate(){let e=null;for(const n of this._def.checks)n.kind==="min"&&(e===null||n.value>e)&&(e=n.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(const n of this._def.checks)n.kind==="max"&&(e===null||n.value<e)&&(e=n.value);return e!=null?new Date(e):null}}In.create=t=>new In({checks:[],coerce:(t==null?void 0:t.coerce)||!1,typeName:ae.ZodDate,...me(t)});class Li extends be{_parse(e){if(this._getType(e)!==U.symbol){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.symbol,received:r.parsedType}),ue}return ht(e.data)}}Li.create=t=>new Li({typeName:ae.ZodSymbol,...me(t)});class Zr extends be{_parse(e){if(this._getType(e)!==U.undefined){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.undefined,received:r.parsedType}),ue}return ht(e.data)}}Zr.create=t=>new Zr({typeName:ae.ZodUndefined,...me(t)});class Hr extends be{_parse(e){if(this._getType(e)!==U.null){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.null,received:r.parsedType}),ue}return ht(e.data)}}Hr.create=t=>new Hr({typeName:ae.ZodNull,...me(t)});class ir extends be{constructor(){super(...arguments),this._any=!0}_parse(e){return ht(e.data)}}ir.create=t=>new ir({typeName:ae.ZodAny,...me(t)});class Tn extends be{constructor(){super(...arguments),this._unknown=!0}_parse(e){return ht(e.data)}}Tn.create=t=>new Tn({typeName:ae.ZodUnknown,...me(t)});class tn extends be{_parse(e){const n=this._getOrReturnCtx(e);return V(n,{code:R.invalid_type,expected:U.never,received:n.parsedType}),ue}}tn.create=t=>new tn({typeName:ae.ZodNever,...me(t)});class Fi extends be{_parse(e){if(this._getType(e)!==U.undefined){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.void,received:r.parsedType}),ue}return ht(e.data)}}Fi.create=t=>new Fi({typeName:ae.ZodVoid,...me(t)});class zt extends be{_parse(e){const{ctx:n,status:r}=this._processInputParams(e),i=this._def;if(n.parsedType!==U.array)return V(n,{code:R.invalid_type,expected:U.array,received:n.parsedType}),ue;if(i.exactLength!==null){const o=n.data.length>i.exactLength.value,l=n.data.length<i.exactLength.value;(o||l)&&(V(n,{code:o?R.too_big:R.too_small,minimum:l?i.exactLength.value:void 0,maximum:o?i.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:i.exactLength.message}),r.dirty())}if(i.minLength!==null&&n.data.length<i.minLength.value&&(V(n,{code:R.too_small,minimum:i.minLength.value,type:"array",inclusive:!0,exact:!1,message:i.minLength.message}),r.dirty()),i.maxLength!==null&&n.data.length>i.maxLength.value&&(V(n,{code:R.too_big,maximum:i.maxLength.value,type:"array",inclusive:!0,exact:!1,message:i.maxLength.message}),r.dirty()),n.common.async)return Promise.all([...n.data].map((o,l)=>i.type._parseAsync(new Ht(n,o,n.path,l)))).then(o=>rt.mergeArray(r,o));const s=[...n.data].map((o,l)=>i.type._parseSync(new Ht(n,o,n.path,l)));return rt.mergeArray(r,s)}get element(){return this._def.type}min(e,n){return new zt({...this._def,minLength:{value:e,message:se.toString(n)}})}max(e,n){return new zt({...this._def,maxLength:{value:e,message:se.toString(n)}})}length(e,n){return new zt({...this._def,exactLength:{value:e,message:se.toString(n)}})}nonempty(e){return this.min(1,e)}}zt.create=(t,e)=>new zt({type:t,minLength:null,maxLength:null,exactLength:null,typeName:ae.ZodArray,...me(e)});function Un(t){if(t instanceof Re){const e={};for(const n in t.shape){const r=t.shape[n];e[n]=Bt.create(Un(r))}return new Re({...t._def,shape:()=>e})}else return t instanceof zt?new zt({...t._def,type:Un(t.element)}):t instanceof Bt?Bt.create(Un(t.unwrap())):t instanceof gn?gn.create(Un(t.unwrap())):t instanceof Vt?Vt.create(t.items.map(e=>Un(e))):t}class Re extends be{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape(),n=ye.objectKeys(e);return this._cached={shape:e,keys:n}}_parse(e){if(this._getType(e)!==U.object){const d=this._getOrReturnCtx(e);return V(d,{code:R.invalid_type,expected:U.object,received:d.parsedType}),ue}const{status:r,ctx:i}=this._processInputParams(e),{shape:s,keys:o}=this._getCached(),l=[];if(!(this._def.catchall instanceof tn&&this._def.unknownKeys==="strip"))for(const d in i.data)o.includes(d)||l.push(d);const a=[];for(const d of o){const u=s[d],c=i.data[d];a.push({key:{status:"valid",value:d},value:u._parse(new Ht(i,c,i.path,d)),alwaysSet:d in i.data})}if(this._def.catchall instanceof tn){const d=this._def.unknownKeys;if(d==="passthrough")for(const u of l)a.push({key:{status:"valid",value:u},value:{status:"valid",value:i.data[u]}});else if(d==="strict")l.length>0&&(V(i,{code:R.unrecognized_keys,keys:l}),r.dirty());else if(d!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const d=this._def.catchall;for(const u of l){const c=i.data[u];a.push({key:{status:"valid",value:u},value:d._parse(new Ht(i,c,i.path,u)),alwaysSet:u in i.data})}}return i.common.async?Promise.resolve().then(async()=>{const d=[];for(const u of a){const c=await u.key,h=await u.value;d.push({key:c,value:h,alwaysSet:u.alwaysSet})}return d}).then(d=>rt.mergeObjectSync(r,d)):rt.mergeObjectSync(r,a)}get shape(){return this._def.shape()}strict(e){return se.errToObj,new Re({...this._def,unknownKeys:"strict",...e!==void 0?{errorMap:(n,r)=>{var i,s,o,l;const a=(o=(s=(i=this._def).errorMap)===null||s===void 0?void 0:s.call(i,n,r).message)!==null&&o!==void 0?o:r.defaultError;return n.code==="unrecognized_keys"?{message:(l=se.errToObj(e).message)!==null&&l!==void 0?l:a}:{message:a}}}:{}})}strip(){return new Re({...this._def,unknownKeys:"strip"})}passthrough(){return new Re({...this._def,unknownKeys:"passthrough"})}extend(e){return new Re({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new Re({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:ae.ZodObject})}setKey(e,n){return this.augment({[e]:n})}catchall(e){return new Re({...this._def,catchall:e})}pick(e){const n={};return ye.objectKeys(e).forEach(r=>{e[r]&&this.shape[r]&&(n[r]=this.shape[r])}),new Re({...this._def,shape:()=>n})}omit(e){const n={};return ye.objectKeys(this.shape).forEach(r=>{e[r]||(n[r]=this.shape[r])}),new Re({...this._def,shape:()=>n})}deepPartial(){return Un(this)}partial(e){const n={};return ye.objectKeys(this.shape).forEach(r=>{const i=this.shape[r];e&&!e[r]?n[r]=i:n[r]=i.optional()}),new Re({...this._def,shape:()=>n})}required(e){const n={};return ye.objectKeys(this.shape).forEach(r=>{if(e&&!e[r])n[r]=this.shape[r];else{let s=this.shape[r];for(;s instanceof Bt;)s=s._def.innerType;n[r]=s}}),new Re({...this._def,shape:()=>n})}keyof(){return Va(ye.objectKeys(this.shape))}}Re.create=(t,e)=>new Re({shape:()=>t,unknownKeys:"strip",catchall:tn.create(),typeName:ae.ZodObject,...me(e)});Re.strictCreate=(t,e)=>new Re({shape:()=>t,unknownKeys:"strict",catchall:tn.create(),typeName:ae.ZodObject,...me(e)});Re.lazycreate=(t,e)=>new Re({shape:t,unknownKeys:"strip",catchall:tn.create(),typeName:ae.ZodObject,...me(e)});class Vr extends be{_parse(e){const{ctx:n}=this._processInputParams(e),r=this._def.options;function i(s){for(const l of s)if(l.result.status==="valid")return l.result;for(const l of s)if(l.result.status==="dirty")return n.common.issues.push(...l.ctx.common.issues),l.result;const o=s.map(l=>new wt(l.ctx.common.issues));return V(n,{code:R.invalid_union,unionErrors:o}),ue}if(n.common.async)return Promise.all(r.map(async s=>{const o={...n,common:{...n.common,issues:[]},parent:null};return{result:await s._parseAsync({data:n.data,path:n.path,parent:o}),ctx:o}})).then(i);{let s;const o=[];for(const a of r){const d={...n,common:{...n.common,issues:[]},parent:null},u=a._parseSync({data:n.data,path:n.path,parent:d});if(u.status==="valid")return u;u.status==="dirty"&&!s&&(s={result:u,ctx:d}),d.common.issues.length&&o.push(d.common.issues)}if(s)return n.common.issues.push(...s.ctx.common.issues),s.result;const l=o.map(a=>new wt(a));return V(n,{code:R.invalid_union,unionErrors:l}),ue}}get options(){return this._def.options}}Vr.create=(t,e)=>new Vr({options:t,typeName:ae.ZodUnion,...me(e)});const Xt=t=>t instanceof Wr?Xt(t.schema):t instanceof Ft?Xt(t.innerType()):t instanceof qr?[t.value]:t instanceof mn?t.options:t instanceof Kr?ye.objectValues(t.enum):t instanceof Jr?Xt(t._def.innerType):t instanceof Zr?[void 0]:t instanceof Hr?[null]:t instanceof Bt?[void 0,...Xt(t.unwrap())]:t instanceof gn?[null,...Xt(t.unwrap())]:t instanceof Xs||t instanceof Yr?Xt(t.unwrap()):t instanceof Xr?Xt(t._def.innerType):[];class Gi extends be{_parse(e){const{ctx:n}=this._processInputParams(e);if(n.parsedType!==U.object)return V(n,{code:R.invalid_type,expected:U.object,received:n.parsedType}),ue;const r=this.discriminator,i=n.data[r],s=this.optionsMap.get(i);return s?n.common.async?s._parseAsync({data:n.data,path:n.path,parent:n}):s._parseSync({data:n.data,path:n.path,parent:n}):(V(n,{code:R.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),ue)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,n,r){const i=new Map;for(const s of n){const o=Xt(s.shape[e]);if(!o.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const l of o){if(i.has(l))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(l)}`);i.set(l,s)}}return new Gi({typeName:ae.ZodDiscriminatedUnion,discriminator:e,options:n,optionsMap:i,...me(r)})}}function Ps(t,e){const n=un(t),r=un(e);if(t===e)return{valid:!0,data:t};if(n===U.object&&r===U.object){const i=ye.objectKeys(e),s=ye.objectKeys(t).filter(l=>i.indexOf(l)!==-1),o={...t,...e};for(const l of s){const a=Ps(t[l],e[l]);if(!a.valid)return{valid:!1};o[l]=a.data}return{valid:!0,data:o}}else if(n===U.array&&r===U.array){if(t.length!==e.length)return{valid:!1};const i=[];for(let s=0;s<t.length;s++){const o=t[s],l=e[s],a=Ps(o,l);if(!a.valid)return{valid:!1};i.push(a.data)}return{valid:!0,data:i}}else return n===U.date&&r===U.date&&+t==+e?{valid:!0,data:t}:{valid:!1}}class Ur extends be{_parse(e){const{status:n,ctx:r}=this._processInputParams(e),i=(s,o)=>{if(Is(s)||Is(o))return ue;const l=Ps(s.value,o.value);return l.valid?((Os(s)||Os(o))&&n.dirty(),{status:n.value,value:l.data}):(V(r,{code:R.invalid_intersection_types}),ue)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then(([s,o])=>i(s,o)):i(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}}Ur.create=(t,e,n)=>new Ur({left:t,right:e,typeName:ae.ZodIntersection,...me(n)});class Vt extends be{_parse(e){const{status:n,ctx:r}=this._processInputParams(e);if(r.parsedType!==U.array)return V(r,{code:R.invalid_type,expected:U.array,received:r.parsedType}),ue;if(r.data.length<this._def.items.length)return V(r,{code:R.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),ue;!this._def.rest&&r.data.length>this._def.items.length&&(V(r,{code:R.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),n.dirty());const s=[...r.data].map((o,l)=>{const a=this._def.items[l]||this._def.rest;return a?a._parse(new Ht(r,o,r.path,l)):null}).filter(o=>!!o);return r.common.async?Promise.all(s).then(o=>rt.mergeArray(n,o)):rt.mergeArray(n,s)}get items(){return this._def.items}rest(e){return new Vt({...this._def,rest:e})}}Vt.create=(t,e)=>{if(!Array.isArray(t))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Vt({items:t,typeName:ae.ZodTuple,rest:null,...me(e)})};class Gr extends be{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:n,ctx:r}=this._processInputParams(e);if(r.parsedType!==U.object)return V(r,{code:R.invalid_type,expected:U.object,received:r.parsedType}),ue;const i=[],s=this._def.keyType,o=this._def.valueType;for(const l in r.data)i.push({key:s._parse(new Ht(r,l,r.path,l)),value:o._parse(new Ht(r,r.data[l],r.path,l)),alwaysSet:l in r.data});return r.common.async?rt.mergeObjectAsync(n,i):rt.mergeObjectSync(n,i)}get element(){return this._def.valueType}static create(e,n,r){return n instanceof be?new Gr({keyType:e,valueType:n,typeName:ae.ZodRecord,...me(r)}):new Gr({keyType:Nt.create(),valueType:e,typeName:ae.ZodRecord,...me(n)})}}class Ri extends be{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:n,ctx:r}=this._processInputParams(e);if(r.parsedType!==U.map)return V(r,{code:R.invalid_type,expected:U.map,received:r.parsedType}),ue;const i=this._def.keyType,s=this._def.valueType,o=[...r.data.entries()].map(([l,a],d)=>({key:i._parse(new Ht(r,l,r.path,[d,"key"])),value:s._parse(new Ht(r,a,r.path,[d,"value"]))}));if(r.common.async){const l=new Map;return Promise.resolve().then(async()=>{for(const a of o){const d=await a.key,u=await a.value;if(d.status==="aborted"||u.status==="aborted")return ue;(d.status==="dirty"||u.status==="dirty")&&n.dirty(),l.set(d.value,u.value)}return{status:n.value,value:l}})}else{const l=new Map;for(const a of o){const d=a.key,u=a.value;if(d.status==="aborted"||u.status==="aborted")return ue;(d.status==="dirty"||u.status==="dirty")&&n.dirty(),l.set(d.value,u.value)}return{status:n.value,value:l}}}}Ri.create=(t,e,n)=>new Ri({valueType:e,keyType:t,typeName:ae.ZodMap,...me(n)});class On extends be{_parse(e){const{status:n,ctx:r}=this._processInputParams(e);if(r.parsedType!==U.set)return V(r,{code:R.invalid_type,expected:U.set,received:r.parsedType}),ue;const i=this._def;i.minSize!==null&&r.data.size<i.minSize.value&&(V(r,{code:R.too_small,minimum:i.minSize.value,type:"set",inclusive:!0,exact:!1,message:i.minSize.message}),n.dirty()),i.maxSize!==null&&r.data.size>i.maxSize.value&&(V(r,{code:R.too_big,maximum:i.maxSize.value,type:"set",inclusive:!0,exact:!1,message:i.maxSize.message}),n.dirty());const s=this._def.valueType;function o(a){const d=new Set;for(const u of a){if(u.status==="aborted")return ue;u.status==="dirty"&&n.dirty(),d.add(u.value)}return{status:n.value,value:d}}const l=[...r.data.values()].map((a,d)=>s._parse(new Ht(r,a,r.path,d)));return r.common.async?Promise.all(l).then(a=>o(a)):o(l)}min(e,n){return new On({...this._def,minSize:{value:e,message:se.toString(n)}})}max(e,n){return new On({...this._def,maxSize:{value:e,message:se.toString(n)}})}size(e,n){return this.min(e,n).max(e,n)}nonempty(e){return this.min(1,e)}}On.create=(t,e)=>new On({valueType:t,minSize:null,maxSize:null,typeName:ae.ZodSet,...me(e)});class Xn extends be{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:n}=this._processInputParams(e);if(n.parsedType!==U.function)return V(n,{code:R.invalid_type,expected:U.function,received:n.parsedType}),ue;function r(l,a){return Ni({data:l,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,Ai(),rr].filter(d=>!!d),issueData:{code:R.invalid_arguments,argumentsError:a}})}function i(l,a){return Ni({data:l,path:n.path,errorMaps:[n.common.contextualErrorMap,n.schemaErrorMap,Ai(),rr].filter(d=>!!d),issueData:{code:R.invalid_return_type,returnTypeError:a}})}const s={errorMap:n.common.contextualErrorMap},o=n.data;if(this._def.returns instanceof sr){const l=this;return ht(async function(...a){const d=new wt([]),u=await l._def.args.parseAsync(a,s).catch(b=>{throw d.addIssue(r(a,b)),d}),c=await Reflect.apply(o,this,u);return await l._def.returns._def.type.parseAsync(c,s).catch(b=>{throw d.addIssue(i(c,b)),d})})}else{const l=this;return ht(function(...a){const d=l._def.args.safeParse(a,s);if(!d.success)throw new wt([r(a,d.error)]);const u=Reflect.apply(o,this,d.data),c=l._def.returns.safeParse(u,s);if(!c.success)throw new wt([i(u,c.error)]);return c.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new Xn({...this._def,args:Vt.create(e).rest(Tn.create())})}returns(e){return new Xn({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,n,r){return new Xn({args:e||Vt.create([]).rest(Tn.create()),returns:n||Tn.create(),typeName:ae.ZodFunction,...me(r)})}}class Wr extends be{get schema(){return this._def.getter()}_parse(e){const{ctx:n}=this._processInputParams(e);return this._def.getter()._parse({data:n.data,path:n.path,parent:n})}}Wr.create=(t,e)=>new Wr({getter:t,typeName:ae.ZodLazy,...me(e)});class qr extends be{_parse(e){if(e.data!==this._def.value){const n=this._getOrReturnCtx(e);return V(n,{received:n.data,code:R.invalid_literal,expected:this._def.value}),ue}return{status:"valid",value:e.data}}get value(){return this._def.value}}qr.create=(t,e)=>new qr({value:t,typeName:ae.ZodLiteral,...me(e)});function Va(t,e){return new mn({values:t,typeName:ae.ZodEnum,...me(e)})}class mn extends be{constructor(){super(...arguments),kr.set(this,void 0)}_parse(e){if(typeof e.data!="string"){const n=this._getOrReturnCtx(e),r=this._def.values;return V(n,{expected:ye.joinValues(r),received:n.parsedType,code:R.invalid_type}),ue}if(zi(this,kr)||Da(this,kr,new Set(this._def.values)),!zi(this,kr).has(e.data)){const n=this._getOrReturnCtx(e),r=this._def.values;return V(n,{received:n.data,code:R.invalid_enum_value,options:r}),ue}return ht(e.data)}get options(){return this._def.values}get enum(){const e={};for(const n of this._def.values)e[n]=n;return e}get Values(){const e={};for(const n of this._def.values)e[n]=n;return e}get Enum(){const e={};for(const n of this._def.values)e[n]=n;return e}extract(e,n=this._def){return mn.create(e,{...this._def,...n})}exclude(e,n=this._def){return mn.create(this.options.filter(r=>!e.includes(r)),{...this._def,...n})}}kr=new WeakMap;mn.create=Va;class Kr extends be{constructor(){super(...arguments),Cr.set(this,void 0)}_parse(e){const n=ye.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(e);if(r.parsedType!==U.string&&r.parsedType!==U.number){const i=ye.objectValues(n);return V(r,{expected:ye.joinValues(i),received:r.parsedType,code:R.invalid_type}),ue}if(zi(this,Cr)||Da(this,Cr,new Set(ye.getValidEnumValues(this._def.values))),!zi(this,Cr).has(e.data)){const i=ye.objectValues(n);return V(r,{received:r.data,code:R.invalid_enum_value,options:i}),ue}return ht(e.data)}get enum(){return this._def.values}}Cr=new WeakMap;Kr.create=(t,e)=>new Kr({values:t,typeName:ae.ZodNativeEnum,...me(e)});class sr extends be{unwrap(){return this._def.type}_parse(e){const{ctx:n}=this._processInputParams(e);if(n.parsedType!==U.promise&&n.common.async===!1)return V(n,{code:R.invalid_type,expected:U.promise,received:n.parsedType}),ue;const r=n.parsedType===U.promise?n.data:Promise.resolve(n.data);return ht(r.then(i=>this._def.type.parseAsync(i,{path:n.path,errorMap:n.common.contextualErrorMap})))}}sr.create=(t,e)=>new sr({type:t,typeName:ae.ZodPromise,...me(e)});class Ft extends be{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===ae.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:n,ctx:r}=this._processInputParams(e),i=this._def.effect||null,s={addIssue:o=>{V(r,o),o.fatal?n.abort():n.dirty()},get path(){return r.path}};if(s.addIssue=s.addIssue.bind(s),i.type==="preprocess"){const o=i.transform(r.data,s);if(r.common.async)return Promise.resolve(o).then(async l=>{if(n.value==="aborted")return ue;const a=await this._def.schema._parseAsync({data:l,path:r.path,parent:r});return a.status==="aborted"?ue:a.status==="dirty"||n.value==="dirty"?Gn(a.value):a});{if(n.value==="aborted")return ue;const l=this._def.schema._parseSync({data:o,path:r.path,parent:r});return l.status==="aborted"?ue:l.status==="dirty"||n.value==="dirty"?Gn(l.value):l}}if(i.type==="refinement"){const o=l=>{const a=i.refinement(l,s);if(r.common.async)return Promise.resolve(a);if(a instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return l};if(r.common.async===!1){const l=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return l.status==="aborted"?ue:(l.status==="dirty"&&n.dirty(),o(l.value),{status:n.value,value:l.value})}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(l=>l.status==="aborted"?ue:(l.status==="dirty"&&n.dirty(),o(l.value).then(()=>({status:n.value,value:l.value}))))}if(i.type==="transform")if(r.common.async===!1){const o=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!jr(o))return o;const l=i.transform(o.value,s);if(l instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:n.value,value:l}}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(o=>jr(o)?Promise.resolve(i.transform(o.value,s)).then(l=>({status:n.value,value:l})):o);ye.assertNever(i)}}Ft.create=(t,e,n)=>new Ft({schema:t,typeName:ae.ZodEffects,effect:e,...me(n)});Ft.createWithPreprocess=(t,e,n)=>new Ft({schema:e,effect:{type:"preprocess",transform:t},typeName:ae.ZodEffects,...me(n)});class Bt extends be{_parse(e){return this._getType(e)===U.undefined?ht(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Bt.create=(t,e)=>new Bt({innerType:t,typeName:ae.ZodOptional,...me(e)});class gn extends be{_parse(e){return this._getType(e)===U.null?ht(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}gn.create=(t,e)=>new gn({innerType:t,typeName:ae.ZodNullable,...me(e)});class Jr extends be{_parse(e){const{ctx:n}=this._processInputParams(e);let r=n.data;return n.parsedType===U.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:n.path,parent:n})}removeDefault(){return this._def.innerType}}Jr.create=(t,e)=>new Jr({innerType:t,typeName:ae.ZodDefault,defaultValue:typeof e.default=="function"?e.default:()=>e.default,...me(e)});class Xr extends be{_parse(e){const{ctx:n}=this._processInputParams(e),r={...n,common:{...n.common,issues:[]}},i=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return Dr(i)?i.then(s=>({status:"valid",value:s.status==="valid"?s.value:this._def.catchValue({get error(){return new wt(r.common.issues)},input:r.data})})):{status:"valid",value:i.status==="valid"?i.value:this._def.catchValue({get error(){return new wt(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}}Xr.create=(t,e)=>new Xr({innerType:t,typeName:ae.ZodCatch,catchValue:typeof e.catch=="function"?e.catch:()=>e.catch,...me(e)});class ji extends be{_parse(e){if(this._getType(e)!==U.nan){const r=this._getOrReturnCtx(e);return V(r,{code:R.invalid_type,expected:U.nan,received:r.parsedType}),ue}return{status:"valid",value:e.data}}}ji.create=t=>new ji({typeName:ae.ZodNaN,...me(t)});const o2=Symbol("zod_brand");class Xs extends be{_parse(e){const{ctx:n}=this._processInputParams(e),r=n.data;return this._def.type._parse({data:r,path:n.path,parent:n})}unwrap(){return this._def.type}}class si extends be{_parse(e){const{status:n,ctx:r}=this._processInputParams(e);if(r.common.async)return(async()=>{const s=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return s.status==="aborted"?ue:s.status==="dirty"?(n.dirty(),Gn(s.value)):this._def.out._parseAsync({data:s.value,path:r.path,parent:r})})();{const i=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return i.status==="aborted"?ue:i.status==="dirty"?(n.dirty(),{status:"dirty",value:i.value}):this._def.out._parseSync({data:i.value,path:r.path,parent:r})}}static create(e,n){return new si({in:e,out:n,typeName:ae.ZodPipeline})}}class Yr extends be{_parse(e){const n=this._def.innerType._parse(e),r=i=>(jr(i)&&(i.value=Object.freeze(i.value)),i);return Dr(n)?n.then(i=>r(i)):r(n)}unwrap(){return this._def.innerType}}Yr.create=(t,e)=>new Yr({innerType:t,typeName:ae.ZodReadonly,...me(e)});function Ua(t,e={},n){return t?ir.create().superRefine((r,i)=>{var s,o;if(!t(r)){const l=typeof e=="function"?e(r):typeof e=="string"?{message:e}:e,a=(o=(s=l.fatal)!==null&&s!==void 0?s:n)!==null&&o!==void 0?o:!0,d=typeof l=="string"?{message:l}:l;i.addIssue({code:"custom",...d,fatal:a})}}):ir.create()}const l2={object:Re.lazycreate};var ae;(function(t){t.ZodString="ZodString",t.ZodNumber="ZodNumber",t.ZodNaN="ZodNaN",t.ZodBigInt="ZodBigInt",t.ZodBoolean="ZodBoolean",t.ZodDate="ZodDate",t.ZodSymbol="ZodSymbol",t.ZodUndefined="ZodUndefined",t.ZodNull="ZodNull",t.ZodAny="ZodAny",t.ZodUnknown="ZodUnknown",t.ZodNever="ZodNever",t.ZodVoid="ZodVoid",t.ZodArray="ZodArray",t.ZodObject="ZodObject",t.ZodUnion="ZodUnion",t.ZodDiscriminatedUnion="ZodDiscriminatedUnion",t.ZodIntersection="ZodIntersection",t.ZodTuple="ZodTuple",t.ZodRecord="ZodRecord",t.ZodMap="ZodMap",t.ZodSet="ZodSet",t.ZodFunction="ZodFunction",t.ZodLazy="ZodLazy",t.ZodLiteral="ZodLiteral",t.ZodEnum="ZodEnum",t.ZodEffects="ZodEffects",t.ZodNativeEnum="ZodNativeEnum",t.ZodOptional="ZodOptional",t.ZodNullable="ZodNullable",t.ZodDefault="ZodDefault",t.ZodCatch="ZodCatch",t.ZodPromise="ZodPromise",t.ZodBranded="ZodBranded",t.ZodPipeline="ZodPipeline",t.ZodReadonly="ZodReadonly"})(ae||(ae={}));const a2=(t,e={message:`Input not instance of ${t.name}`})=>Ua(n=>n instanceof t,e),Ga=Nt.create,Wa=hn.create,d2=ji.create,u2=pn.create,qa=Br.create,c2=In.create,f2=Li.create,h2=Zr.create,p2=Hr.create,m2=ir.create,g2=Tn.create,b2=tn.create,v2=Fi.create,$2=zt.create,_2=Re.create,y2=Re.strictCreate,w2=Vr.create,k2=Gi.create,C2=Ur.create,S2=Vt.create,x2=Gr.create,E2=Ri.create,T2=On.create,I2=Xn.create,O2=Wr.create,P2=qr.create,M2=mn.create,A2=Kr.create,N2=sr.create,Jo=Ft.create,z2=Bt.create,L2=gn.create,F2=Ft.createWithPreprocess,R2=si.create,j2=()=>Ga().optional(),D2=()=>Wa().optional(),B2=()=>qa().optional(),Z2={string:t=>Nt.create({...t,coerce:!0}),number:t=>hn.create({...t,coerce:!0}),boolean:t=>Br.create({...t,coerce:!0}),bigint:t=>pn.create({...t,coerce:!0}),date:t=>In.create({...t,coerce:!0})},H2=ue;var Er=Object.freeze({__proto__:null,defaultErrorMap:rr,setErrorMap:Hc,getErrorMap:Ai,makeIssue:Ni,EMPTY_PATH:Vc,addIssueToContext:V,ParseStatus:rt,INVALID:ue,DIRTY:Gn,OK:ht,isAborted:Is,isDirty:Os,isValid:jr,isAsync:Dr,get util(){return ye},get objectUtil(){return Ts},ZodParsedType:U,getParsedType:un,ZodType:be,datetimeRegex:Ha,ZodString:Nt,ZodNumber:hn,ZodBigInt:pn,ZodBoolean:Br,ZodDate:In,ZodSymbol:Li,ZodUndefined:Zr,ZodNull:Hr,ZodAny:ir,ZodUnknown:Tn,ZodNever:tn,ZodVoid:Fi,ZodArray:zt,ZodObject:Re,ZodUnion:Vr,ZodDiscriminatedUnion:Gi,ZodIntersection:Ur,ZodTuple:Vt,ZodRecord:Gr,ZodMap:Ri,ZodSet:On,ZodFunction:Xn,ZodLazy:Wr,ZodLiteral:qr,ZodEnum:mn,ZodNativeEnum:Kr,ZodPromise:sr,ZodEffects:Ft,ZodTransformer:Ft,ZodOptional:Bt,ZodNullable:gn,ZodDefault:Jr,ZodCatch:Xr,ZodNaN:ji,BRAND:o2,ZodBranded:Xs,ZodPipeline:si,ZodReadonly:Yr,custom:Ua,Schema:be,ZodSchema:be,late:l2,get ZodFirstPartyTypeKind(){return ae},coerce:Z2,any:m2,array:$2,bigint:u2,boolean:qa,date:c2,discriminatedUnion:k2,effect:Jo,enum:M2,function:I2,instanceof:a2,intersection:C2,lazy:O2,literal:P2,map:E2,nan:d2,nativeEnum:A2,never:b2,null:p2,nullable:L2,number:Wa,object:_2,oboolean:B2,onumber:D2,optional:z2,ostring:j2,pipeline:R2,preprocess:F2,promise:N2,record:x2,set:T2,strictObject:y2,string:Ga,symbol:f2,transformer:Jo,tuple:S2,undefined:h2,union:w2,unknown:g2,void:v2,NEVER:H2,ZodIssueCode:R,quotelessJson:Zc,ZodError:wt});const Sn=(t=Er.string())=>t.min(1,{message:"This field is required"}),V2=Sn().email({message:"Invalid email address"}),U2=Er.string().refine(t=>{var e;if(t==null||t.length===0)return!0;try{return((e=Ra(t,"US"))==null?void 0:e.isValid())??!1}catch{return!1}},"Invalid phone number");Sn().regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*\W)[A-Za-z\d\W]{8,}$/,{message:"Password must be at least 8 characters and contain at least one uppercase, lowercase, number and special character"});const G2=Er.object({job_title:Er.object({title:Sn()},{message:"Please select a job title"}),location:Er.object({address:Sn()},{message:"Please select a location"}),first_name:Sn(),last_name:Sn(),email:V2});var An=function(t,e){this.items=t,this.settings=e||{diacritics:!0}};An.prototype.tokenize=function(t,e,n){if(t=q2(String(t||"").toLowerCase()),!t||!t.length)return[];var r,i,s,o,l=[],a=t.split(/ +/);for(r=0,i=a.length;r<i;r++){if(s=K2(a[r]),this.settings.diacritics)for(o in xn)xn.hasOwnProperty(o)&&(s=s.replace(new RegExp(o,"g"),xn[o]));e?s="\\b"+s:n&&(s="\\b^"+s),l.push({string:a[r],regex:new RegExp(s,"i")})}return l};An.prototype.iterator=function(t,e){var n;Array.isArray(t)?n=Array.prototype.forEach||function(r){for(var i=0,s=this.length;i<s;i++)r(this[i],i,this)}:n=function(r){for(var i in this)this.hasOwnProperty(i)&&r(this[i],i,this)},n.apply(t,[e])};An.prototype.getScoreFunction=function(t,e){var n,r,i,s,o;n=this,t=n.prepareSearch(t,e),i=t.tokens,r=t.options.fields,s=i.length,o=t.options.nesting;var l=function(d,u){var c,h;return!d||(d=String(d||""),h=d.search(u.regex),h===-1)?0:(c=u.string.length/d.length,h===0&&(c+=.5),c)},a=function(){var d=r.length;return d?d===1?function(u,c){return l(Ms(c,r[0],o),u)}:function(u,c){for(var h=0,b=0;h<d;h++)b+=l(Ms(c,r[h],o),u);return b/d}:function(){return 0}}();return s?s===1?function(d){return a(i[0],d)}:t.options.conjunction==="and"?function(d){for(var u,c=0,h=0;c<s;c++){if(u=a(i[c],d),u<=0)return 0;h+=u}return h/s}:function(d){for(var u=0,c=0;u<s;u++)c+=a(i[u],d);return c/s}:function(){return 0}};An.prototype.getSortFunction=function(t,e){var n,r,i,s,o,l,a,d,u,c,h;if(i=this,t=i.prepareSearch(t,e),h=!t.query&&e.sort_empty||e.sort,u=function(b,m){return b==="$score"?m.score:Ms(i.items[m.id],b,e.nesting)},o=[],h)for(n=0,r=h.length;n<r;n++)(t.query||h[n].field!=="$score")&&o.push(h[n]);if(t.query){for(c=!0,n=0,r=o.length;n<r;n++)if(o[n].field==="$score"){c=!1;break}c&&o.unshift({field:"$score",direction:"desc"})}else for(n=0,r=o.length;n<r;n++)if(o[n].field==="$score"){o.splice(n,1);break}for(d=[],n=0,r=o.length;n<r;n++)d.push(o[n].direction==="desc"?-1:1);return l=o.length,l?l===1?(s=o[0].field,a=d[0],function(b,m){return a*Xo(u(s,b),u(s,m))}):function(b,m){var v,g,y;for(v=0;v<l;v++)if(y=o[v].field,g=d[v]*Xo(u(y,b),u(y,m)),g)return g;return 0}:null};An.prototype.prepareSearch=function(t,e){if(typeof t=="object")return t;e=W2({},e);var n=e.fields,r=e.sort,i=e.sort_empty;return n&&!Array.isArray(n)&&(e.fields=[n]),r&&!Array.isArray(r)&&(e.sort=[r]),i&&!Array.isArray(i)&&(e.sort_empty=[i]),{options:e,query:String(t||"").toLowerCase(),tokens:this.tokenize(t,e.wordsOnly,e.startOnly),total:0,items:[]}};An.prototype.search=function(t,e){var n=this,r,i,s,o;return i=this.prepareSearch(t,e),e=i.options,t=i.query,o=e.score||n.getScoreFunction(i),t.length?n.iterator(n.items,function(l,a){r=o(l),(e.filter===!1||r>0)&&i.items.push({score:r,id:a})}):n.iterator(n.items,function(l,a){i.items.push({score:1,id:a})}),s=n.getSortFunction(i,e),s&&i.items.sort(s),i.total=i.items.length,typeof e.limit=="number"&&(i.items=i.items.slice(0,e.limit)),i};var Xo=function(t,e){return typeof t=="number"&&typeof e=="number"?t>e?1:t<e?-1:0:(t=Di(String(t||"")),e=Di(String(e||"")),t>e?1:e>t?-1:0)},W2=function(t,e){var n,r,i,s;for(n=1,r=arguments.length;n<r;n++)if(s=arguments[n],!!s)for(i in s)s.hasOwnProperty(i)&&(t[i]=s[i]);return t},Ms=function(t,e,n){if(!(!t||!e)){if(!n)return t[e];for(var r=e.split(".");r.length&&(t=t[r.shift()]););return t}},q2=function(t){return(t+"").replace(/^\s+|\s+$|/g,"")},K2=function(t){return(t+"").replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")},xn={a:"[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]",b:"[b␢βΒB฿𐌁ᛒ]",c:"[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]",d:"[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]",e:"[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]",f:"[fƑƒḞḟ]",g:"[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]",h:"[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]",i:"[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]",j:"[jȷĴĵɈɉʝɟʲ]",k:"[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]",l:"[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]",n:"[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]",o:"[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]",p:"[pṔṕṖṗⱣᵽƤƥᵱ]",q:"[qꝖꝗʠɊɋꝘꝙq̃]",r:"[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]",s:"[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]",t:"[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]",u:"[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]",v:"[vṼṽṾṿƲʋꝞꝟⱱʋ]",w:"[wẂẃẀẁŴŵẄẅẆẇẈẉ]",x:"[xẌẍẊẋχ]",y:"[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]",z:"[zŹźẐẑŽžŻżẒẓẔẕƵƶ]"};const Di=function(){var t,e,n,r,i="",s={};for(n in xn)if(xn.hasOwnProperty(n))for(r=xn[n].substring(2,xn[n].length-1),i+=r,t=0,e=r.length;t<e;t++)s[r.charAt(t)]=n;var o=new RegExp("["+i+"]","g");return function(l){return l.replace(o,function(a){return s[a]}).toLowerCase()}}();let yr;function Bi(t,e,n,r,i){const s=r(t,e,n);if(n==""||t.isSelected||i)return s;yr||(yr=document.createElement("div")),yr.innerHTML=s;const o=Di(n);return(o.includes("|")?o.split("|").map(l=>l.trim()):o.split(" ")).filter(l=>l).forEach(l=>{Ka(yr,l)}),yr.innerHTML}const Ka=function(t,e){let n=0;if(t.nodeType===3){const i=Di(t.data);let s=i.indexOf(e);if(s-=i.substr(0,s).toUpperCase().length-i.substr(0,s).length,s>=0){const o=document.createElement("span");o.className="highlight";const l=t.splitText(s);l.splitText(e.length);const a=l.cloneNode(!0);o.appendChild(a),l.parentNode.replaceChild(o,l),n=1}}else if(t.nodeType===1&&t.childNodes&&!/(script|style)/i.test(t.tagName)&&(t.className!=="highlight"||t.tagName!=="SPAN"))for(var r=0;r<t.childNodes.length;++r)r+=Ka(t.childNodes[r],e);return n};function J2(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document}function Yo(){return navigator.userAgent.toLowerCase().includes("android")}function Qo(t){return(t||"").replace(/\t/g," ").trim().split(" ").filter(e=>e).join(" ")}function X2(t){return`${t}`.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function Y2(t,e){let n;return(...r)=>{clearTimeout(n),n=setTimeout(()=>{t.apply(this,r)},e)}}function Q2(t,{url:e,parentValue:n,initial:r},i){n&&(e=e.replace("[parent]",encodeURIComponent(n))),t&&(e=e.replace("[query]",encodeURIComponent(t))),Array.isArray(r)&&r.length===0&&(r=null),r&&(e=e.replace("[query]","init"));const s=e[0]==="/"?new URL(e,window.location.origin):new URL(e);if(r){const a=Array.isArray(r)?r:[r];s.searchParams.append("init",a.join(","))}const o=new AbortController,l=Object.assign({},i,{signal:o.signal});return{request:new Request(s,l),controller:o}}const _e={valueField:null,labelField:null,groupLabelField:"label",groupItemsField:"options",disabledField:"$disabled",placeholder:"Select",valueAsObject:!1,searchable:!0,clearable:!1,highlightFirstItem:!0,selectOnTab:!1,resetOnBlur:!0,resetOnSelect:!0,fetchProps:{},fetchResetOnBlur:!0,fetchDebounceTime:300,multiple:!1,closeAfterSelect:"auto",max:0,collapseSelection:null,keepSelectionInList:"auto",creatable:!1,creatablePrefix:"*",keepCreated:!0,allowEditing:!1,delimiter:",",fetchCallback:null,minQuery:1,lazyDropdown:!0,virtualList:!1,vlItemSize:null,vlHeight:null,i18n:{aria_label:"",aria_describedby:"",aria_selected:t=>t.length?`Option${t.length>1?"s":""} ${t.join(", ")} selected.`:"",aria_listActive:(t,e,n)=>`You are currently focused on option ${t[e]}. ${n} result${n>1?"s":""} available.`,aria_inputFocused:()=>"Select is focused, type to refine list, press down to scroll through the list",empty:"No options",nomatch:"No matching options",max:t=>`Maximum items ${t} selected`,fetchBefore:"Type to start searching",fetchQuery:(t,e)=>`Type at least ${t} character${t>1?"s":""} to start searching`,fetchInit:"Fetching data, please wait...",fetchEmpty:"No data related to your search",collapsedSelection:t=>`${t} selected`,createRowLabel:t=>`Add '${t}'`,emptyCreatable:"Add new by typing"},requestFactory:null},Bn=[];function ef(t,e){return{subscribe:At(t,e).subscribe}}function At(t,e=oe){let n;const r=new Set;function i(l){if(qe(t,l)&&(t=l,n)){const a=!Bn.length;for(const d of r)d[1](),Bn.push(d,t);if(a){for(let d=0;d<Bn.length;d+=2)Bn[d][0](Bn[d+1]);Bn.length=0}}}function s(l){i(l(t))}function o(l,a=oe){const d=[l,a];return r.add(d),r.size===1&&(n=e(i,s)||oe),l(t),()=>{r.delete(d),r.size===0&&n&&(n(),n=null)}}return{set:i,update:s,subscribe:o}}function Ja(t,e,n){const r=!Array.isArray(t),i=r?[t]:t;if(!i.every(Boolean))throw new Error("derived() expects stores as input, got a falsy value");const s=e.length<2;return ef(n,(o,l)=>{let a=!1;const d=[];let u=0,c=oe;const h=()=>{if(u)return;c();const m=e(r?d[0]:d,o,l);s?o(m):c=Et(m)?m:oe},b=i.map((m,v)=>As(m,g=>{d[v]=g,u&=~(1<<v),a&&h()},()=>{u|=1<<v}));return a=!0,h(),function(){it(b),c(),a=!1}})}function Xa(t){const e=t-1;return e*e*e+1}function tf(t,{from:e,to:n},r={}){const i=getComputedStyle(t),s=i.transform==="none"?"":i.transform,[o,l]=i.transformOrigin.split(" ").map(parseFloat),a=e.left+e.width*o/n.width-(n.left+o),d=e.top+e.height*l/n.height-(n.top+l),{delay:u=0,duration:c=b=>Math.sqrt(b)*120,easing:h=Xa}=r;return{delay:u,duration:Et(c)?c(Math.sqrt(a*a+d*d)):c,easing:h,css:(b,m)=>{const v=m*a,g=m*d,y=b+m*e.width/n.width,$=b+m*e.height/n.height;return`transform: ${s} translate(${v}px, ${g}px) scale(${y}, ${$});`}}}const vi={AUTO:"auto",START:"start",CENTER:"center",END:"end"},Qt={HORIZONTAL:"horizontal",VERTICAL:"vertical"},wr={OBSERVED:0,REQUESTED:1},nf={[Qt.VERTICAL]:"top",[Qt.HORIZONTAL]:"left"},el={[Qt.VERTICAL]:"scrollTop",[Qt.HORIZONTAL]:"scrollLeft"};class rf{constructor({itemSize:e,itemCount:n,estimatedItemSize:r}){this.itemSize=e,this.itemCount=n,this.estimatedItemSize=r,this.itemSizeAndPositionData={},this.lastMeasuredIndex=-1,this.checkForMismatchItemSizeAndItemCount(),this.justInTime||this.computeTotalSizeAndPositionData()}get justInTime(){return typeof this.itemSize=="function"}updateConfig({itemSize:e,itemCount:n,estimatedItemSize:r}){n!=null&&(this.itemCount=n),r!=null&&(this.estimatedItemSize=r),e!=null&&(this.itemSize=e),this.checkForMismatchItemSizeAndItemCount(),this.justInTime&&this.totalSize!=null?this.totalSize=void 0:this.computeTotalSizeAndPositionData()}checkForMismatchItemSizeAndItemCount(){if(Array.isArray(this.itemSize)&&this.itemSize.length<this.itemCount)throw Error("When itemSize is an array, itemSize.length can't be smaller than itemCount")}getSize(e){const{itemSize:n}=this;return typeof n=="function"?n(e):Array.isArray(n)?n[e]:n}computeTotalSizeAndPositionData(){let e=0;for(let n=0;n<this.itemCount;n++){const r=this.getSize(n),i=e;e+=r,this.itemSizeAndPositionData[n]={offset:i,size:r}}this.totalSize=e}getLastMeasuredIndex(){return this.lastMeasuredIndex}getSizeAndPositionForIndex(e){if(e<0||e>=this.itemCount)throw Error(`Requested index ${e} is outside of range 0..${this.itemCount}`);return this.justInTime?this.getJustInTimeSizeAndPositionForIndex(e):this.itemSizeAndPositionData[e]}getJustInTimeSizeAndPositionForIndex(e){if(e>this.lastMeasuredIndex){const n=this.getSizeAndPositionOfLastMeasuredItem();let r=n.offset+n.size;for(let i=this.lastMeasuredIndex+1;i<=e;i++){const s=this.getSize(i);if(s==null||isNaN(s))throw Error(`Invalid size returned for index ${i} of value ${s}`);this.itemSizeAndPositionData[i]={offset:r,size:s},r+=s}this.lastMeasuredIndex=e}return this.itemSizeAndPositionData[e]}getSizeAndPositionOfLastMeasuredItem(){return this.lastMeasuredIndex>=0?this.itemSizeAndPositionData[this.lastMeasuredIndex]:{offset:0,size:0}}getTotalSize(){if(this.totalSize)return this.totalSize;const e=this.getSizeAndPositionOfLastMeasuredItem();return e.offset+e.size+(this.itemCount-this.lastMeasuredIndex-1)*this.estimatedItemSize}getUpdatedOffsetForIndex({align:e=vi.START,containerSize:n,currentOffset:r,targetIndex:i}){if(n<=0)return 0;const s=this.getSizeAndPositionForIndex(i),o=s.offset,l=o-n+s.size;let a;switch(e){case vi.END:a=l;break;case vi.CENTER:a=o-(n-s.size)/2;break;case vi.START:a=o;break;default:a=Math.max(l,Math.min(o,r))}const d=this.getTotalSize();return Math.max(0,Math.min(d-n,a))}getVisibleRange({containerSize:e=0,offset:n,overscanCount:r}){if(this.getTotalSize()===0)return{};const s=n+e;let o=this.findNearestItem(n);if(o===void 0)throw Error(`Invalid offset ${n} specified`);const l=this.getSizeAndPositionForIndex(o);n=l.offset+l.size;let a=o;for(;n<s&&a<this.itemCount-1;)a++,n+=this.getSizeAndPositionForIndex(a).size;return r&&(o=Math.max(0,o-r),a=Math.min(a+r,this.itemCount-1)),{start:o,stop:a}}resetItem(e){this.lastMeasuredIndex=Math.min(this.lastMeasuredIndex,e-1)}findNearestItem(e){if(isNaN(e))throw Error(`Invalid offset ${e} specified`);e=Math.max(0,e);const n=this.getSizeAndPositionOfLastMeasuredItem(),r=Math.max(0,this.lastMeasuredIndex);return n.offset>=e?this.binarySearch({high:r,low:0,offset:e}):this.exponentialSearch({index:r,offset:e})}binarySearch({low:e,high:n,offset:r}){let i=0,s=0;for(;e<=n;){if(i=e+Math.floor((n-e)/2),s=this.getSizeAndPositionForIndex(i).offset,s===r)return i;s<r?e=i+1:s>r&&(n=i-1)}return e>0?e-1:0}exponentialSearch({index:e,offset:n}){let r=1;for(;e<this.itemCount&&this.getSizeAndPositionForIndex(e).offset<n;)e+=r,r*=2;return this.binarySearch({high:Math.min(e,this.itemCount-1),low:Math.floor(e/2),offset:n})}}function sf(t){or(t,"svelte-dwpad5",".virtual-list-wrapper.svelte-dwpad5{overflow:auto;will-change:transform;-webkit-overflow-scrolling:touch}.virtual-list-inner.svelte-dwpad5{position:relative;display:flex;width:100%}")}const of=t=>({}),tl=t=>({});function nl(t,e,n){const r=t.slice();return r[37]=e[n],r}const lf=t=>({style:t[0]&4,index:t[0]&4}),rl=t=>({style:t[37].style,index:t[37].index}),af=t=>({}),il=t=>({});function sl(t,e){let n,r;const i=e[21].item,s=dt(i,e,e[20],rl);return{key:t,first:null,c(){n=kt(),s&&s.c(),this.first=n},m(o,l){I(o,n,l),s&&s.m(o,l),r=!0},p(o,l){e=o,s&&s.p&&(!r||l[0]&1048580)&&ct(s,i,e,e[20],r?ut(i,e[20],l,lf):ft(e[20]),rl)},i(o){r||(P(s,o),r=!0)},o(o){L(s,o),r=!1},d(o){o&&T(n),s&&s.d(o)}}}function df(t){let e,n,r,i=[],s=new Map,o,l;const a=t[21].header,d=dt(a,t,t[20],il);let u=nt(t[2]);const c=m=>m[0]?m[0](m[37].index):m[37].index;for(let m=0;m<u.length;m+=1){let v=nl(t,u,m),g=c(v);s.set(g,i[m]=sl(g,v))}const h=t[21].footer,b=dt(h,t,t[20],tl);return{c(){e=k("div"),d&&d.c(),n=q(),r=k("div");for(let m=0;m<i.length;m+=1)i[m].c();o=q(),b&&b.c(),f(r,"class","virtual-list-inner svelte-dwpad5"),f(r,"style",t[4]),f(e,"class","virtual-list-wrapper svelte-dwpad5"),f(e,"style",t[3])},m(m,v){I(m,e,v),d&&d.m(e,null),_(e,n),_(e,r);for(let g=0;g<i.length;g+=1)i[g]&&i[g].m(r,null);_(e,o),b&&b.m(e,null),t[22](e),l=!0},p(m,v){d&&d.p&&(!l||v[0]&1048576)&&ct(d,a,m,m[20],l?ut(a,m[20],v,af):ft(m[20]),il),v[0]&1048581&&(u=nt(m[2]),Me(),i=Bs(i,v,c,1,m,u,s,r,v1,sl,null,nl),Ae()),(!l||v[0]&16)&&f(r,"style",m[4]),b&&b.p&&(!l||v[0]&1048576)&&ct(b,h,m,m[20],l?ut(h,m[20],v,of):ft(m[20]),tl),(!l||v[0]&8)&&f(e,"style",m[3])},i(m){if(!l){P(d,m);for(let v=0;v<u.length;v+=1)P(i[v]);P(b,m),l=!0}},o(m){L(d,m);for(let v=0;v<i.length;v+=1)L(i[v]);L(b,m),l=!1},d(m){m&&T(e),d&&d.d(m);for(let v=0;v<i.length;v+=1)i[v].d();b&&b.d(m),t[22](null)}}}const uf=(()=>{let t=!1;try{const e=Object.defineProperty({},"passive",{get(){return t={passive:!0},!0}});window.addEventListener("testpassive",e,e),window.remove("testpassive",e,e)}catch{}return t})();function cf(t,e,n){let{$$slots:r={},$$scope:i}=e,{height:s}=e,{width:o="100%"}=e,{itemCount:l}=e,{itemSize:a}=e,{estimatedItemSize:d=null}=e,{stickyIndices:u=null}=e,{getKey:c=null}=e,{scrollDirection:h=Qt.VERTICAL}=e,{scrollOffset:b=null}=e,{scrollToIndex:m=null}=e,{scrollToAlignment:v=null}=e,{scrollToBehaviour:g="instant"}=e,{overscanCount:y=3}=e;const $=Rt(),C=new rf({itemCount:l,itemSize:a,estimatedItemSize:ie()});let x=!1,A,K=[],M={offset:b||m!=null&&K.length&&W(m)||0,scrollChangeReason:wr.REQUESTED},Q=M,H={scrollToIndex:m,scrollToAlignment:v,scrollOffset:b,itemCount:l,itemSize:a,estimatedItemSize:d},Z={},D="",re="";B(),bn(()=>{n(18,x=!0),A.addEventListener("scroll",ee,uf),b!=null?X(b):m!=null&&X(W(m))}),Fs(()=>{x&&A.removeEventListener("scroll",ee)});function j(){if(!x)return;const E=H.scrollToIndex!==m||H.scrollToAlignment!==v,N=H.itemCount!==l||H.itemSize!==a||H.estimatedItemSize!==d;N&&(C.updateConfig({itemSize:a,itemCount:l,estimatedItemSize:ie()}),G()),H.scrollOffset!==b?n(19,M={offset:b||0,scrollChangeReason:wr.REQUESTED}):typeof m=="number"&&(E||N)&&n(19,M={offset:W(m,v,l),scrollChangeReason:wr.REQUESTED}),H={scrollToIndex:m,scrollToAlignment:v,scrollOffset:b,itemCount:l,itemSize:a,estimatedItemSize:d}}function S(){if(!x)return;const{offset:E,scrollChangeReason:N}=M;(Q.offset!==E||Q.scrollChangeReason!==N)&&B(),Q.offset!==E&&N===wr.REQUESTED&&X(E),Q=M}function B(){const{offset:E}=M,{start:N,stop:w}=C.getVisibleRange({containerSize:h===Qt.VERTICAL?s:o,offset:E,overscanCount:y});let z=[];const de=C.getTotalSize();h===Qt.VERTICAL?(n(3,D=`height:${s}${typeof s=="number"?"px":""};width:${o};`),n(4,re=`flex-direction:column;height:${de}px;`)):(n(3,D=`height:${s};width:${o}${typeof o=="number"?"px":""}`),n(4,re=`min-height:100%;width:${de}px;`));const we=u!=null&&u.length!==0;if(we)for(let ve=0;ve<u.length;ve++){const J=u[ve];z.push({index:J,style:te(J,!0)})}if(N!==void 0&&w!==void 0){for(let ve=N;ve<=w;ve++)we&&u.includes(ve)||z.push({index:ve,style:te(ve,!1)});$("itemsUpdated",{start:N,end:w})}n(2,K=z)}function X(E){"scroll"in A?A.scroll({[nf[h]]:E,behavior:g}):n(1,A[el[h]]=E,A)}function G(E=0){Z={},C.resetItem(E),B()}function W(E,N=v,w=l){return(E<0||E>=w)&&(E=0),C.getUpdatedOffsetForIndex({align:N,containerSize:h===Qt.VERTICAL?s:o,currentOffset:M.offset||0,targetIndex:E})}function ee(E){const N=ce();N<0||M.offset===N||E.target!==A||(n(19,M={offset:N,scrollChangeReason:wr.OBSERVED}),$("afterScroll",{offset:N,event:E}))}function ce(){return A[el[h]]}function ie(){return d||typeof a=="number"&&a||50}function te(E,N){if(Z[E])return Z[E];const{size:w,offset:z}=C.getSizeAndPositionForIndex(E);let de;return h===Qt.VERTICAL?(de=`left:0;width:100%;height:${w}px;`,N?de+=`position:sticky;flex-grow:0;z-index:1;top:0;margin-top:${z}px;margin-bottom:${-(z+w)}px;`:de+=`position:absolute;top:${z}px;`):(de=`top:0;width:${w}px;`,N?de+=`position:sticky;z-index:1;left:0;margin-left:${z}px;margin-right:${-(z+w)}px;`:de+=`position:absolute;height:100%;left:${z}px;`),Z[E]=de}function Ee(E){je[E?"unshift":"push"](()=>{A=E,n(1,A)})}return t.$$set=E=>{"height"in E&&n(5,s=E.height),"width"in E&&n(6,o=E.width),"itemCount"in E&&n(7,l=E.itemCount),"itemSize"in E&&n(8,a=E.itemSize),"estimatedItemSize"in E&&n(9,d=E.estimatedItemSize),"stickyIndices"in E&&n(10,u=E.stickyIndices),"getKey"in E&&n(0,c=E.getKey),"scrollDirection"in E&&n(11,h=E.scrollDirection),"scrollOffset"in E&&n(12,b=E.scrollOffset),"scrollToIndex"in E&&n(13,m=E.scrollToIndex),"scrollToAlignment"in E&&n(14,v=E.scrollToAlignment),"scrollToBehaviour"in E&&n(15,g=E.scrollToBehaviour),"overscanCount"in E&&n(16,y=E.overscanCount),"$$scope"in E&&n(20,i=E.$$scope)},t.$$.update=()=>{t.$$.dirty[0]&29568&&j(),t.$$.dirty[0]&524288&&S(),t.$$.dirty[0]&263264&&x&&G(0)},[c,A,K,D,re,s,o,l,a,d,u,h,b,m,v,g,y,G,x,M,i,r,Ee]}class Ya extends tt{constructor(e){super(),Qe(this,e,cf,df,qe,{height:5,width:6,itemCount:7,itemSize:8,estimatedItemSize:9,stickyIndices:10,getKey:0,scrollDirection:11,scrollOffset:12,scrollToIndex:13,scrollToAlignment:14,scrollToBehaviour:15,overscanCount:16,recomputeSizes:17},sf,[-1,-1])}get height(){return this.$$.ctx[5]}set height(e){this.$$set({height:e}),O()}get width(){return this.$$.ctx[6]}set width(e){this.$$set({width:e}),O()}get itemCount(){return this.$$.ctx[7]}set itemCount(e){this.$$set({itemCount:e}),O()}get itemSize(){return this.$$.ctx[8]}set itemSize(e){this.$$set({itemSize:e}),O()}get estimatedItemSize(){return this.$$.ctx[9]}set estimatedItemSize(e){this.$$set({estimatedItemSize:e}),O()}get stickyIndices(){return this.$$.ctx[10]}set stickyIndices(e){this.$$set({stickyIndices:e}),O()}get getKey(){return this.$$.ctx[0]}set getKey(e){this.$$set({getKey:e}),O()}get scrollDirection(){return this.$$.ctx[11]}set scrollDirection(e){this.$$set({scrollDirection:e}),O()}get scrollOffset(){return this.$$.ctx[12]}set scrollOffset(e){this.$$set({scrollOffset:e}),O()}get scrollToIndex(){return this.$$.ctx[13]}set scrollToIndex(e){this.$$set({scrollToIndex:e}),O()}get scrollToAlignment(){return this.$$.ctx[14]}set scrollToAlignment(e){this.$$set({scrollToAlignment:e}),O()}get scrollToBehaviour(){return this.$$.ctx[15]}set scrollToBehaviour(e){this.$$set({scrollToBehaviour:e}),O()}get overscanCount(){return this.$$.ctx[16]}set overscanCount(e){this.$$set({overscanCount:e}),O()}get recomputeSizes(){return this.$$.ctx[17]}}et(Ya,{height:{},width:{},itemCount:{},itemSize:{},estimatedItemSize:{},stickyIndices:{},getKey:{},scrollDirection:{},scrollOffset:{},scrollToIndex:{},scrollToAlignment:{},scrollToBehaviour:{},overscanCount:{}},["header","item","footer"],["recomputeSizes"],!0);function ps(t,e){const n=window.getComputedStyle(t);let{groups:{value:r,unit:i}}=n[e].match(/(?<value>\d+)(?<unit>[a-zA-Z]+)/),s=parseFloat(r);if(i!=="px"){const o=i==="rem"?document.documentElement:t.parentElement.parentElement;s=parseFloat(window.getComputedStyle(o).fontSize.match(/\d+/).shift())*s}return s}function ff(t){const e=t.parentElement.parentElement.getBoundingClientRect(),n=t.getBoundingClientRect(),r={};return r.top=e.top<0,r.left=e.left<0,r.bottom=e.bottom+n.height>(window.innerHeight||document.documentElement.clientHeight)&&e.top>n.height&&(window.innerHeight||document.documentElement.clientHeight)>n.height+50,r.right=e.right>(window.innerWidth||document.documentElement.clientWidth),r.any=r.top||r.left||r.bottom||r.right,r}function ms(t,e,n){if(!e||!n)return;const r=ff(e);r.bottom&&!r.top?e.parentElement.style.bottom=e.parentElement.parentElement.clientHeight+1+"px":(!t||r.top)&&(e.parentElement.style.bottom="")}function hf(t,e,n){let r;const i=ps(e,"maxHeight")-ps(e,"paddingTop")-ps(e,"paddingBottom");e.parentElement.style.cssText="opacity: 0; display: block";const s=t.$$.ctx[1].firstElementChild.firstElementChild;if(s){s.style="";const o=s.getBoundingClientRect().height,l=t.$$.ctx[1].firstElementChild.firstElementChild.nextElementSibling;let a;if(l&&(l.style="",a=l.getBoundingClientRect().height),a&&o!==a){const d=n[0].$isGroupHeader?o:a,u=n[0].$isGroupHeader?a:o;r=n.map(c=>c.$isGroupHeader?d:u)}else r=o}return e.parentElement.style.cssText="",{size:r,height:i}}function $i({container:t,scrollContainer:e,virtualList:n,center:r},i){if(n||!t)return;const s=t.querySelector(`[data-pos="${i}"]`);if(!s)return;const o=s.getBoundingClientRect(),l=e.getBoundingClientRect(),a=s.offsetHeight/3,d=r?e.offsetHeight/2:0;switch(!0){case s.offsetTop<e.scrollTop:e.scrollTop=s.offsetTop-a+d;break;case s.offsetTop+o.height>e.scrollTop+l.height:e.scrollTop=s.offsetTop+o.height-e.offsetHeight+a+d;break}}function pf(t,e,n,r){return{optionProps:[],optionsWithGroups:!1,valueField:t,labelField:e,optLabel:n,optItems:r}}function mf(t,e,n,r,i){if(n)return Array.isArray(e)?e:[e];const s=Array.isArray(e)?e:[e];return t.reduce((l,a,d)=>{const u=a[r]&&Array.isArray(a)?a[r]:null;if(u){const c=u.reduce((h,b)=>(s.includes(b[i])&&h.push(b),h),[]);if(c.length)return l.push(...c),l}return l},[]).sort((l,a)=>s.indexOf(l[i])<s.indexOf(a[i])?-1:1)}function ol(t,e,n){return typeof t[0]=="object"?JSON.parse(JSON.stringify(t)):t.map(r=>({[e||"value"]:r,[n||"text"]:r}))}function gf(t,e){const n=t.reduce((r,i,s)=>i[e.optItems]?(i[e.optItems].length===0||(e.optionsWithGroups=!0,r.push({label:i[e.optLabel],$isGroupHeader:!0}),r.push(...i[e.optItems].map(o=>(o.$isGroupItem=!0,o)))),r):(r.push(i),r),[]);return bf(n,e),n}function bf(t,e){t.some(n=>n.$isGroupHeader?!1:(e.optionProps=vf(n),!0))}function vf(t){const e=["$disabled","$isGroupHeader","$isGroupItem","$created","$selected"];return Object.keys(t).filter(n=>!e.includes(n))}function $f(t,e,n,r,i){if(n&&(t=t.filter(d=>!n.has(d[r.valueField])).filter((d,u,c)=>!(d.$isGroupHeader&&(c[u+1]&&c[u+1].$isGroupHeader||c.length<=1||c.length-1===u)))),i.disabled||!e)return t;const s=new An(t);(r.optionsWithGroups||i.skipSort)&&(s.getSortFunction=()=>null);let o="and";e.includes("|")&&(o="or",e=e.split("|").map(d=>d.trim()).join(" "));const l=s.search(e,{fields:i.fields||r.optionProps,sort:i.sort||_f(r.labelField),conjunction:i.conjunction||o,nesting:i.nesting||!1,wordsOnly:i.wordsOnly||!1,startOnly:i.startOnly||!1});return r.optionsWithGroups?l.items.reduce((d,u)=>{const c=t[u.id];if(n&&c.isSelected)return d;const h=d.push(c);if(c.$isGroupItem){const b=t.slice(0,u.id);let m=null;do m=b.pop(),m&&m.$isGroupHeader&&!d.includes(m)&&d.splice(h-1,0,m);while(m&&!m.$isGroupHeader)}return d},[]):l.items.map(d=>t[d.id])}function _f(t){return[{field:t,direction:"asc"}]}function _i(t,e,n){const r=t==="value";let i=r?"value":"text";if(e&&e.length){const s=e[0][n]?e[0][n][0]:e[0];if(!s||typeof s=="string")return i;const o=r?0:1,l=r?["id","value","ID"]:["name","title","label"];i=Object.keys(s).filter(a=>l.includes(a)).concat([Object.keys(s)[o]]).shift()}return i}function Qa(t,e){return t.bound_item=e,{destroy:()=>{}}}function yf(t){or(t,"svelte-kzdkc5",`.sv-hidden-element{opacity:0;position:absolute;z-index:-2;top:0;height:var(--sv-min-height, 30px)}.a11y-text.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{z-index:9999;border:0px;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0px;white-space:nowrap}.svelecte.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{position:relative;flex:1 1 auto;color:var(--sv-color, inherit)}.svelecte.is-disabled.svelte-kzdkc5>.sv-control.svelte-kzdkc5.svelte-kzdkc5{background-color:var(--sv-disabled-bg, #eee)}.sv-control.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{display:flex;align-items:center;border:var(--sv-border, 1px solid #ccc);border-radius:var(--sv-border-radius, 4px);background-color:var(--sv-control-bg, var(--sv-bg, #fff));min-height:var(--sv-min-height, 30px)}.sv-control--selection.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{display:flex;flex-wrap:wrap;align-items:center;flex:1;min-width:0;gap:4px;padding:var(--sv-general-padding, 4px);min-height:24px}.sv-control--selection.is-single.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{flex-wrap:nowrap}.sv-item--container{display:flex;min-width:0}.sv-item--wrap{display:flex;min-width:0;padding:var(--sv-item-wrap-padding, 3px 3px 3px 6px)}.sv-item--wrap.is-multi.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{background-color:var(--sv-item-selected-bg, #efefef)}.sv-item--content{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.sv-item--btn{position:relative;display:inline-flex;align-items:center;align-self:stretch;padding:0 4px;box-sizing:border-box;border-radius:calc(var(--sv-border-radius, 4px) / 2);border-width:0;margin:0;cursor:pointer;background-color:var(--sv-item-btn-bg, var(--sv-item-selected-bg, #efefef))}.sv-item--btn>svg.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{fill:var(--sv-item-btn-color, var(--sv-icon-color, #bbb))}.sv-item--btn:hover{background-color:var(--sv-item-btn-bg-hover, #ddd)}.sv-item--btn:hover>svg.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{fill:var(--sv-item-btn-color-hover, #777)}.sv-buttons.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{display:flex;align-self:stretch;position:relative}.sv-btn-indicator.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{color:var(--sv-icon-color, #bbb);display:flex;transition:color 150ms ease 0s;box-sizing:border-box;background-color:var(--sv-icon-bg, transparent);border:var(--sv-btn-border, 0);padding:0;margin:var(--sv-general-padding, 4px);align-items:center;fill:currentcolor;line-height:1;stroke:currentcolor;stroke-width:0px}.sv-btn-indicator.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:hover{color:var(--sv-icon-color-hover, #777)}.sv-btn-separator.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{align-self:stretch;background-color:var(--sv-separator-bg, #ccc);margin-bottom:var(--sv-general-padding, 4px);margin-top:var(--sv-general-padding, 4px);width:1px;box-sizing:border-box}.indicator-icon.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{width:var(--sv-icon-size, 20px);height:var(--sv-icon-size, 20px)}.is-loading.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:after{animation:svelte-kzdkc5-spinAround 0.5s infinite linear;border:var(--sv-loader-border, 2px solid #ccc);border-radius:50%;border-right-color:transparent;border-top-color:transparent;content:"";display:block;height:var(--sv-icon-size, 20px);width:var(--sv-icon-size, 20px);right:var(--sv-general-padding, 4px);top:calc(50% - (var(--sv-icon-size, 20px) / 2));position:absolute !important;box-sizing:border-box}@keyframes svelte-kzdkc5-spinAround{from{transform:rotate(0deg)
    }to{transform:rotate(359deg)
    }}.sv_dropdown.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{margin:var(--sv-dropdown-offset, 1px) 0;box-sizing:border-box;position:absolute;min-width:100%;width:var(--sv-dropdown-width, auto);background-color:var(--sv-dropdown-bg, var(--sv-bg, #fff));overflow-y:auto;overflow-x:hidden;border:var(--sv-dropdown-border, 1px solid rgba(0,0,0,0.15));border-radius:var(--sv-border-radius, 4px);box-shadow:var(--sv-dropdown-shadow, 0 6px 12px #0000002d);opacity:0;z-index:-1000;pointer-events:none}.sv_dropdown.is-open.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{opacity:1;z-index:2;pointer-events:auto}.sv-dropdown-scroll.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{padding:0;box-sizing:border-box;max-height:var(--sv-dropdown-height, 320px);overflow-y:auto;overflow-x:hidden}.sv-dropdown-scroll.has-items.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{padding:4px}.in-dropdown.is-selected.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{background-color:var(--sv-dropdown-selected-bg, #ECF3F9)}.in-dropdown.is-disabled.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{opacity:0.5;cursor:not-allowed}.in-dropdown.sv-dd-item-active.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5,.in-dropdown.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:hover,.in-dropdown.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:active{background-color:var(--sv-dropdown-active-bg, #F2F5F8)}.is-dropdown-row.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{padding:var(--sv-general-padding, 4px)}.sv-dropdown-scroll.has-items.svelte-kzdkc5+.is-dropdown-row.svelte-kzdkc5.svelte-kzdkc5{border-top:1px solid transparent;border-color:var(--sv-separator-bg, #ccc)}.creatable-row.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{width:100%;border:0;background-color:inherit;box-sizing:border-box;display:flex;justify-content:space-between;align-items:center;border-radius:calc(var(--sv-border-radius, 4px) / 2);padding:var(--sv-item-wrap-padding, 3px 3px 3px 6px)}.creatable-row.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:hover,.creatable-row.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:active,.creatable-row.active.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{background-color:var(--sv-dropdown-active-bg, #F2F5F8)}.creatable-row.active.is-disabled.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{opacity:0.5;background-color:var(--sv-create-disabled-bg, #fcbaba)}.creatable-row.is-disabled.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{opacity:0.5;cursor:not-allowed}.creatable-row.svelte-kzdkc5>.is-loading.svelte-kzdkc5.svelte-kzdkc5{position:relative}.creatable-row.svelte-kzdkc5>.is-loading.svelte-kzdkc5.svelte-kzdkc5:after{left:calc(100% + 4px)}.shortcut.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{display:flex;align-items:center;align-content:center}.shortcut.svelte-kzdkc5>kbd.svelte-kzdkc5.svelte-kzdkc5{border:var(--sv-create-kbd-border, 1px solid #efefef);border-radius:var(--sv-border-radius, 4px);padding:0px 6px;margin:-1px 0;background-color:var(--sv-create-kbd-bg, #fff)}.sv-input--sizer.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{position:relative;display:inline-grid;vertical-align:top;align-items:center}.sv-input--sizer.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:not(:focus-within){position:absolute;pointer-events:none}.sv-input--sizer.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:after{content:attr(data-value) ' ';visibility:hidden;white-space:pre-wrap}.has-items.svelte-kzdkc5 .keep-value.svelte-kzdkc5.svelte-kzdkc5:not(:focus){color:transparent}.is-focused.svelte-kzdkc5 .is-single.has-items.has-input.svelte-kzdkc5>.sv-item--container.svelte-kzdkc5{opacity:0.2}.sv-input--sizer.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:after,.sv-input--text.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{width:auto;min-width:1em;grid-area:1 / 2;font:inherit;padding:0 0.25em;margin:0;resize:none;background:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none}.has-items.svelte-kzdkc5 .sv-input--text.svelte-kzdkc5.svelte-kzdkc5{padding-left:0;margin-left:-2px}.sv-input--text.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5{outline:none}.sv-input--text.svelte-kzdkc5.svelte-kzdkc5.svelte-kzdkc5:placeholder{color:var(--sv-placeholder-color, #ccccd6)}`)}const wf=t=>({isCreating:t[1]&8,inputValue:t[0]&4194304,i18n:t[0]&8388608}),ll=t=>({isCreating:t[34],inputValue:t[22],i18n:t[23]});function al(t,e,n){const r=t.slice();return r[162]=e[n],r[164]=n,r}const kf=t=>({item:t[0]&16777216}),dl=t=>({item:t[162]});function ul(t){const e=t[24][t[161]];t[162]=e}const Cf=t=>({item:t[0]&16777216|t[5]&64}),cl=t=>({item:t[162]}),Sf=t=>({}),fl=t=>({}),xf=t=>({}),hl=t=>({}),Ef=t=>({isOpen:t[0]&524288}),pl=t=>({isOpen:t[19]}),Tf=t=>({selectedOptions:t[0]&262144,inputValue:t[0]&4194304}),ml=t=>({selectedOptions:t[18],inputValue:t[22]});function gl(t,e,n){const r=t.slice();return r[162]=e[n],r}const If=t=>({selectedOptions:t[0]&262144}),bl=t=>({selectedOptions:t[18],bindItem:Qa}),Of=t=>({selectedOptions:t[0]&262144,i18n:t[0]&8388608}),vl=t=>({selectedOptions:t[18],i18n:t[23]}),Pf=t=>({}),$l=t=>({});function _l(t,e,n){const r=t.slice();return r[162]=e[n],r}function yl(t){let e,n,r,i,s;return{c(){e=k("span"),n=$e(t[45]),r=q(),i=k("span"),s=$e(t[44]),f(e,"id","aria-selection"),f(i,"id","aria-context")},m(o,l){I(o,e,l),_(e,n),I(o,r,l),I(o,i,l),_(i,s)},p(o,l){l[1]&16384&&De(n,o[45]),l[1]&8192&&De(s,o[44])},d(o){o&&(T(e),T(r),T(i))}}}function wl(t){let e,n=[],r=new Map,i,s,o,l=nt(t[18]);const a=d=>d[162][d[26]];for(let d=0;d<l.length;d+=1){let u=_l(t,l,d),c=a(u);r.set(c,n[d]=kl(c,u))}return{c(){e=k("select");for(let d=0;d<n.length;d+=1)n[d].c();f(e,"name",t[4]),e.required=t[5],e.multiple=t[0],e.disabled=t[3],f(e,"size","1"),f(e,"class","sv-hidden-element"),f(e,"id",t[49]),f(e,"tabindex","-1"),f(e,"aria-hidden","true")},m(d,u){I(d,e,u);for(let c=0;c<n.length;c+=1)n[c]&&n[c].m(e,null);t[110](e),s||(o=Ns(i=t[59].call(null,e,t[13])),s=!0)},p(d,u){u[0]&67371008&&(l=nt(d[18]),n=Bs(n,u,a,1,d,l,r,e,pa,kl,null,_l)),u[0]&16&&f(e,"name",d[4]),u[0]&32&&(e.required=d[5]),u[0]&1&&(e.multiple=d[0]),u[0]&8&&(e.disabled=d[3]),i&&Et(i.update)&&u[0]&8192&&i.update.call(null,d[13])},d(d){d&&T(e);for(let u=0;u<n.length;u+=1)n[u].d();t[110](null),s=!1,o()}}}function kl(t,e){let n,r;return{key:t,first:null,c(){n=k("option"),n.__value=r=e[162][e[26]],er(n,n.__value),n.selected=!0,this.first=n},m(i,s){I(i,n,s)},p(i,s){e=i,s[0]&67371008&&r!==(r=e[162][e[26]])&&(n.__value=r,er(n,n.__value))},d(i){i&&T(n)}}}function Cl(t){let e,n,r,i;const s=[Af,Mf],o=[];function l(a,d){return a[0]&&a[32]?0:1}return e=l(t),n=o[e]=s[e](t),{c(){n.c(),r=kt()},m(a,d){o[e].m(a,d),I(a,r,d),i=!0},p(a,d){let u=e;e=l(a),e===u?o[e].p(a,d):(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae(),n=o[e],n?n.p(a,d):(n=o[e]=s[e](a),n.c()),P(n,1),n.m(r.parentNode,r))},i(a){i||(P(n),i=!0)},o(a){L(n),i=!1},d(a){a&&T(r),o[e].d(a)}}}function Mf(t){let e;const n=t[107].selection,r=dt(n,t,t[116],bl),i=r||Nf(t);return{c(){i&&i.c()},m(s,o){i&&i.m(s,o),e=!0},p(s,o){r?r.p&&(!e||o[0]&262144|o[3]&8388608)&&ct(r,n,s,s[116],e?ut(n,s[116],o,If):ft(s[116]),bl):i&&i.p&&(!e||o[0]&262145|o[1]&4096)&&i.p(s,e?o:[-1,-1,-1,-1,-1,-1])},i(s){e||(P(i,s),e=!0)},o(s){L(i,s),e=!1},d(s){i&&i.d(s)}}}function Af(t){let e;const n=t[107].collapsedSelection,r=dt(n,t,t[116],vl),i=r||zf(t);return{c(){i&&i.c()},m(s,o){i&&i.m(s,o),e=!0},p(s,o){r?r.p&&(!e||o[0]&8650752|o[3]&8388608)&&ct(r,n,s,s[116],e?ut(n,s[116],o,Of):ft(s[116]),vl):i&&i.p&&(!e||o[0]&8650752)&&i.p(s,e?o:[-1,-1,-1,-1,-1,-1])},i(s){e||(P(i,s),e=!0)},o(s){L(i,s),e=!1},d(s){i&&i.d(s)}}}function Sl(t){let e,n,r,i;return{c(){e=k("button"),e.innerHTML='<svg height="16" width="16" viewBox="0 0 20 20" aria-hidden="true" focusable="false" class="svelte-kzdkc5"><path d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"></path></svg>',f(e,"class","sv-item--btn"),f(e,"tabindex","-1"),f(e,"type","button"),f(e,"data-action","deselect")},m(s,o){I(s,e,o),r||(i=Ns(n=Qa.call(null,e,t[162])),r=!0)},p(s,o){t=s,n&&Et(n.update)&&o[0]&262144&&n.update.call(null,t[162])},d(s){s&&T(e),r=!1,i()}}}function xl(t,e){let n,r,i,s=e[43](e[162],!0)+"",o,l,a,d=oe,u,c,h=e[0]&&Sl(e);return{key:t,first:null,c(){n=k("div"),r=k("div"),i=k("div"),o=q(),h&&h.c(),l=q(),f(i,"class","sv-item--content"),f(r,"class","sv-item--wrap svelte-kzdkc5"),ne(r,"is-multi",e[0]),f(n,"class","sv-item--container svelte-kzdkc5"),this.first=n},m(b,m){I(b,n,m),_(n,r),_(r,i),i.innerHTML=s,_(n,o),h&&h.m(n,null),_(n,l),u||(c=he(n,"mousedown",xi(e[109])),u=!0)},p(b,m){e=b,m[0]&262144|m[1]&4096&&s!==(s=e[43](e[162],!0)+"")&&(i.innerHTML=s),m[0]&1&&ne(r,"is-multi",e[0]),e[0]?h?h.p(e,m):(h=Sl(e),h.c(),h.m(n,l)):h&&(h.d(1),h=null)},r(){a=n.getBoundingClientRect()},f(){f1(n),d()},a(){d(),d=c1(n,a,tf,{duration:e[35]})},d(b){b&&T(n),h&&h.d(),u=!1,c()}}}function Nf(t){let e=[],n=new Map,r,i=nt(t[18]);const s=o=>o[162][o[26]];for(let o=0;o<i.length;o+=1){let l=gl(t,i,o),a=s(l);n.set(a,e[o]=xl(a,l))}return{c(){for(let o=0;o<e.length;o+=1)e[o].c();r=kt()},m(o,l){for(let a=0;a<e.length;a+=1)e[a]&&e[a].m(o,l);I(o,r,l)},p(o,l){if(l[0]&67371009|l[1]&4096){i=nt(o[18]);for(let a=0;a<e.length;a+=1)e[a].r();e=Bs(e,l,s,1,o,i,n,r.parentNode,$1,xl,r,gl);for(let a=0;a<e.length;a+=1)e[a].a()}},d(o){o&&T(r);for(let l=0;l<e.length;l+=1)e[l].d(o)}}}function zf(t){let e=t[23].collapsedSelection(t[18].length)+"",n;return{c(){n=$e(e)},m(r,i){I(r,n,i)},p(r,i){i[0]&8650752&&e!==(e=r[23].collapsedSelection(r[18].length)+"")&&De(n,e)},d(r){r&&T(n)}}}function El(t){let e,n;const r=t[107]["clear-icon"],i=dt(r,t,t[116],ml),s=i||Lf(t);return{c(){e=k("button"),s&&s.c(),f(e,"type","button"),f(e,"class","sv-btn-indicator svelte-kzdkc5"),f(e,"data-action","deselect"),f(e,"tabindex","-1"),ne(e,"sv-has-selection",t[18].length)},m(o,l){I(o,e,l),s&&s.m(e,null),n=!0},p(o,l){i?i.p&&(!n||l[0]&4456448|l[3]&8388608)&&ct(i,r,o,o[116],n?ut(r,o[116],l,Tf):ft(o[116]),ml):s&&s.p&&(!n||l[0]&262144)&&s.p(o,n?l:[-1,-1,-1,-1,-1,-1]),(!n||l[0]&262144)&&ne(e,"sv-has-selection",o[18].length)},i(o){n||(P(s,o),n=!0)},o(o){L(s,o),n=!1},d(o){o&&T(e),s&&s.d(o)}}}function Tl(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"),f(e,"class","indicator-icon svelte-kzdkc5"),f(e,"viewBox","0 0 20 20"),f(e,"aria-hidden","true"),f(e,"focusable","false")},m(r,i){I(r,e,i),_(e,n)},d(r){r&&T(e)}}}function Lf(t){let e,n=t[18].length&&Tl();return{c(){n&&n.c(),e=kt()},m(r,i){n&&n.m(r,i),I(r,e,i)},p(r,i){r[18].length?n||(n=Tl(),n.c(),n.m(e.parentNode,e)):n&&(n.d(1),n=null)},d(r){r&&T(e),n&&n.d(r)}}}function Il(t){let e;return{c(){e=k("span"),f(e,"class","sv-btn-separator svelte-kzdkc5")},m(n,r){I(n,e,r)},d(n){n&&T(e)}}}function Ff(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"),f(e,"class","indicator-icon svelte-kzdkc5"),f(e,"viewBox","0 0 20 20"),f(e,"aria-hidden","true"),f(e,"focusable","false")},m(r,i){I(r,e,i),_(e,n)},p:oe,d(r){r&&T(e)}}}function Ol(t){let e,n,r,i,s,o,l,a;const d=t[107]["list-header"],u=dt(d,t,t[116],fl),c=[jf,Rf],h=[];function b(v,g){return v[24].length?0:v[24].length===0&&(!v[14]||!v[22])||v[25]?1:-1}~(i=b(t))&&(s=h[i]=c[i](t));let m=t[14]&&t[22]&&!t[25]&&Ml(t);return{c(){u&&u.c(),e=q(),n=k("div"),r=k("div"),s&&s.c(),o=q(),m&&m.c(),l=kt(),f(r,"class","sv-dropdown-content"),ne(r,"max-reached",t[25]),f(n,"class","sv-dropdown-scroll svelte-kzdkc5"),f(n,"tabindex","-1"),ne(n,"has-items",t[24].length>0),ne(n,"is-virtual",t[15])},m(v,g){u&&u.m(v,g),I(v,e,g),I(v,n,g),_(n,r),~i&&h[i].m(r,null),t[114](r),t[115](n),I(v,o,g),m&&m.m(v,g),I(v,l,g),a=!0},p(v,g){u&&u.p&&(!a||g[3]&8388608)&&ct(u,d,v,v[116],a?ut(d,v[116],g,Sf):ft(v[116]),fl);let y=i;i=b(v),i===y?~i&&h[i].p(v,g):(s&&(Me(),L(h[y],1,1,()=>{h[y]=null}),Ae()),~i?(s=h[i],s?s.p(v,g):(s=h[i]=c[i](v),s.c()),P(s,1),s.m(r,null)):s=null),(!a||g[0]&33554432)&&ne(r,"max-reached",v[25]),(!a||g[0]&16777216)&&ne(n,"has-items",v[24].length>0),(!a||g[0]&32768)&&ne(n,"is-virtual",v[15]),v[14]&&v[22]&&!v[25]?m?(m.p(v,g),g[0]&37765120&&P(m,1)):(m=Ml(v),m.c(),P(m,1),m.m(l.parentNode,l)):m&&(Me(),L(m,1,1,()=>{m=null}),Ae())},i(v){a||(P(u,v),P(s),P(m),a=!0)},o(v){L(u,v),L(s),L(m),a=!1},d(v){v&&(T(e),T(n),T(o),T(l)),u&&u.d(v),~i&&h[i].d(),t[114](null),t[115](null),m&&m.d(v)}}}function Rf(t){let e,n,r,i;return{c(){e=k("div"),n=k("div"),r=k("div"),i=$e(t[41]),f(r,"class","sv-item--content"),f(n,"class","sv-item--wrap"),f(e,"class","is-dropdown-row svelte-kzdkc5")},m(s,o){I(s,e,o),_(e,n),_(n,r),_(r,i)},p(s,o){o[1]&1024&&De(i,s[41])},i:oe,o:oe,d(s){s&&T(e)}}}function jf(t){let e,n,r,i;const s=[Bf,Df],o=[];function l(a,d){return a[15]?0:1}return e=l(t),n=o[e]=s[e](t),{c(){n.c(),r=kt()},m(a,d){o[e].m(a,d),I(a,r,d),i=!0},p(a,d){let u=e;e=l(a),e===u?o[e].p(a,d):(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae(),n=o[e],n?n.p(a,d):(n=o[e]=s[e](a),n.c()),P(n,1),n.m(r.parentNode,r))},i(a){i||(P(n),i=!0)},o(a){L(n),i=!1},d(a){a&&T(r),o[e].d(a)}}}function Df(t){let e,n,r=nt(t[24]),i=[];for(let o=0;o<r.length;o+=1)i[o]=Pl(al(t,r,o));const s=o=>L(i[o],1,1,()=>{i[o]=null});return{c(){for(let o=0;o<i.length;o+=1)i[o].c();e=kt()},m(o,l){for(let a=0;a<i.length;a+=1)i[a]&&i[a].m(o,l);I(o,e,l),n=!0},p(o,l){if(l[0]&22021248|l[1]&4096|l[3]&8388608){r=nt(o[24]);let a;for(a=0;a<r.length;a+=1){const d=al(o,r,a);i[a]?(i[a].p(d,l),P(i[a],1)):(i[a]=Pl(d),i[a].c(),P(i[a],1),i[a].m(e.parentNode,e))}for(Me(),a=r.length;a<i.length;a+=1)s(a);Ae()}},i(o){if(!n){for(let l=0;l<r.length;l+=1)P(i[l]);n=!0}},o(o){i=i.filter(Boolean);for(let l=0;l<i.length;l+=1)L(i[l]);n=!1},d(o){o&&T(e),ei(i,o)}}}function Bf(t){let e,n,r={width:"100%",height:t[48],itemCount:t[24].length,itemSize:t[21],scrollToAlignment:"auto",scrollToIndex:t[20],$$slots:{item:[qf,({style:i,index:s})=>({160:i,161:s}),({style:i,index:s})=>[0,0,0,0,0,(i?32:0)|(s?64:0)]]},$$scope:{ctx:t}};return e=new Ya({props:r}),t[113](e),{c(){Ne(e.$$.fragment)},m(i,s){Te(e,i,s),n=!0},p(i,s){const o={};s[1]&131072&&(o.height=i[48]),s[0]&16777216&&(o.itemCount=i[24].length),s[0]&2097152&&(o.itemSize=i[21]),s[0]&1048576&&(o.scrollToIndex=i[20]),s[0]&22021248|s[1]&4096|s[3]&8388608|s[5]&96&&(o.$$scope={dirty:s,ctx:i}),e.$set(o)},i(i){n||(P(e.$$.fragment,i),n=!0)},o(i){L(e.$$.fragment,i),n=!1},d(i){t[113](null),Ie(e,i)}}}function Zf(t){let e,n,r;const i=t[107].option,s=dt(i,t,t[116],dl),o=s||Vf(t);return{c(){e=k("div"),o&&o.c(),n=q(),f(e,"data-pos",t[164]),f(e,"class","sv-item--wrap in-dropdown svelte-kzdkc5"),ne(e,"sv-dd-item-active",t[20]===t[164]),ne(e,"is-selected",t[162].$selected),ne(e,"is-disabled",t[162][t[7]])},m(l,a){I(l,e,a),o&&o.m(e,null),_(e,n),r=!0},p(l,a){s?s.p&&(!r||a[0]&16777216|a[3]&8388608)&&ct(s,i,l,l[116],r?ut(i,l[116],a,kf):ft(l[116]),dl):o&&o.p&&(!r||a[0]&20972544|a[1]&4096)&&o.p(l,r?a:[-1,-1,-1,-1,-1,-1]),(!r||a[0]&1048576)&&ne(e,"sv-dd-item-active",l[20]===l[164]),(!r||a[0]&16777216)&&ne(e,"is-selected",l[162].$selected),(!r||a[0]&16777344)&&ne(e,"is-disabled",l[162][l[7]])},i(l){r||(P(o,l),r=!0)},o(l){L(o,l),r=!1},d(l){l&&T(e),o&&o.d(l)}}}function Hf(t){let e,n,r=t[162].label+"",i;return{c(){e=k("div"),n=k("b"),i=$e(r),f(e,"class","sv-optgroup-header")},m(s,o){I(s,e,o),_(e,n),_(n,i)},p(s,o){o[0]&16777216&&r!==(r=s[162].label+"")&&De(i,r)},i:oe,o:oe,d(s){s&&T(e)}}}function Vf(t){let e,n=Bi(t[162],!1,t[22],t[43],t[10])+"";return{c(){e=k("div"),f(e,"class","sv-item--content")},m(r,i){I(r,e,i),e.innerHTML=n},p(r,i){i[0]&20972544|i[1]&4096&&n!==(n=Bi(r[162],!1,r[22],r[43],r[10])+"")&&(e.innerHTML=n)},d(r){r&&T(e)}}}function Pl(t){let e,n,r,i;const s=[Hf,Zf],o=[];function l(a,d){return a[162].$isGroupHeader?0:1}return e=l(t),n=o[e]=s[e](t),{c(){n.c(),r=kt()},m(a,d){o[e].m(a,d),I(a,r,d),i=!0},p(a,d){let u=e;e=l(a),e===u?o[e].p(a,d):(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae(),n=o[e],n?n.p(a,d):(n=o[e]=s[e](a),n.c()),P(n,1),n.m(r.parentNode,r))},i(a){i||(P(n),i=!0)},o(a){L(n),i=!1},d(a){a&&T(r),o[e].d(a)}}}function Uf(t){let e,n,r;const i=t[107].option,s=dt(i,t,t[116],cl),o=s||Wf(t);return{c(){e=k("div"),o&&o.c(),f(e,"data-pos",n=t[161]),f(e,"class","sv-item--wrap in-dropdown svelte-kzdkc5"),ne(e,"sv-dd-item-active",t[20]===t[161]),ne(e,"is-selected",t[162].$selected),ne(e,"is-disabled",t[162][t[7]])},m(l,a){I(l,e,a),o&&o.m(e,null),r=!0},p(l,a){s?s.p&&(!r||a[0]&16777216|a[3]&8388608|a[5]&64)&&ct(s,i,l,l[116],r?ut(i,l[116],a,Cf):ft(l[116]),cl):o&&o.p&&(!r||a[0]&20972544|a[1]&4096|a[5]&64)&&o.p(l,r?a:[-1,-1,-1,-1,-1,-1]),(!r||a[5]&64&&n!==(n=l[161]))&&f(e,"data-pos",n),(!r||a[0]&1048576|a[5]&64)&&ne(e,"sv-dd-item-active",l[20]===l[161]),(!r||a[0]&16777216|a[5]&64)&&ne(e,"is-selected",l[162].$selected),(!r||a[0]&16777344|a[5]&64)&&ne(e,"is-disabled",l[162][l[7]])},i(l){r||(P(o,l),r=!0)},o(l){L(o,l),r=!1},d(l){l&&T(e),o&&o.d(l)}}}function Gf(t){let e,n,r=t[162].label+"",i;return{c(){e=k("div"),n=k("b"),i=$e(r),f(e,"class","sv-optgroup-header")},m(s,o){I(s,e,o),_(e,n),_(n,i)},p(s,o){o[0]&16777216|o[5]&64&&r!==(r=s[162].label+"")&&De(i,r)},i:oe,o:oe,d(s){s&&T(e)}}}function Wf(t){let e,n=Bi(t[162],!1,t[22],t[43],t[10])+"";return{c(){e=k("div"),f(e,"class","sv-item--content")},m(r,i){I(r,e,i),e.innerHTML=n},p(r,i){i[0]&20972544|i[1]&4096|i[5]&64&&n!==(n=Bi(r[162],!1,r[22],r[43],r[10])+"")&&(e.innerHTML=n)},d(r){r&&T(e)}}}function qf(t){ul(t);let e,n,r,i,s;const o=[Gf,Uf],l=[];function a(d,u){return d[162].$isGroupHeader?0:1}return n=a(t),r=l[n]=o[n](t),{c(){e=k("div"),r.c(),f(e,"slot","item"),f(e,"style",i=t[160])},m(d,u){I(d,e,u),l[n].m(e,null),s=!0},p(d,u){ul(d);let c=n;n=a(d),n===c?l[n].p(d,u):(Me(),L(l[c],1,1,()=>{l[c]=null}),Ae(),r=l[n],r?r.p(d,u):(r=l[n]=o[n](d),r.c()),P(r,1),r.m(e,null)),(!s||u[5]&32&&i!==(i=d[160]))&&f(e,"style",i)},i(d){s||(P(r),s=!0)},o(d){L(r),s=!1},d(d){d&&T(e),l[n].d()}}}function Ml(t){let e,n,r,i,s;const o=t[107]["create-row"],l=dt(o,t,t[116],ll),a=l||Kf(t);return{c(){e=k("div"),n=k("button"),a&&a.c(),f(n,"type","button"),f(n,"class","creatable-row svelte-kzdkc5"),ne(n,"active",(t[24].length?t[24].length:0)===t[20]),ne(n,"is-disabled",t[1](t[22])),f(e,"class","is-dropdown-row svelte-kzdkc5")},m(d,u){I(d,e,u),_(e,n),a&&a.m(n,null),r=!0,i||(s=[he(n,"click",xi(t[50])),he(n,"mousedown",xi(t[108]))],i=!0)},p(d,u){l?l.p&&(!r||u[0]&12582912|u[1]&8|u[3]&8388608)&&ct(l,o,d,d[116],r?ut(o,d[116],u,wf):ft(d[116]),ll):a&&a.p&&(!r||u[0]&12582912|u[1]&9)&&a.p(d,r?u:[-1,-1,-1,-1,-1,-1]),(!r||u[0]&17825792)&&ne(n,"active",(d[24].length?d[24].length:0)===d[20]),(!r||u[0]&4194306)&&ne(n,"is-disabled",d[1](d[22]))},i(d){r||(P(a,d),r=!0)},o(d){L(a,d),r=!1},d(d){d&&T(e),a&&a.d(d),i=!1,it(s)}}}function Kf(t){let e,n=t[23].createRowLabel(t[22])+"",r,i,s,o,l,a,d;return{c(){e=k("span"),r=$e(n),i=q(),s=k("span"),o=k("kbd"),l=$e(t[31]),a=$e("+"),d=k("kbd"),d.textContent="Enter",f(e,"class","svelte-kzdkc5"),ne(e,"is-loading",t[34]),f(o,"class","svelte-kzdkc5"),f(d,"class","svelte-kzdkc5"),f(s,"class","shortcut svelte-kzdkc5")},m(u,c){I(u,e,c),_(e,r),I(u,i,c),I(u,s,c),_(s,o),_(o,l),_(s,a),_(s,d)},p(u,c){c[0]&12582912&&n!==(n=u[23].createRowLabel(u[22])+"")&&De(r,n),c[1]&8&&ne(e,"is-loading",u[34]),c[1]&1&&De(l,u[31])},d(u){u&&(T(e),T(i),T(s))}}}function Jf(t){let e,n,r,i,s,o,l,a,d,u,c,h,b,m,v,g,y,$,C,x,A,K,M,Q,H,Z,D,re,j=t[27]&&yl(t),S=t[4]&&!t[6]&&wl(t);const B=t[107].icon,X=dt(B,t,t[116],$l);let G=t[18].length&&Cl(t),W=t[9]&&!t[3]&&El(t),ee=t[9]&&Il();const ce=t[107]["dropdown-toggle"],ie=dt(ce,t,t[116],pl),te=ie||Ff(),Ee=t[107]["control-end"],E=dt(Ee,t,t[116],hl);let N=t[17]&&t[30]&&Ol(t);return{c(){e=k("div"),n=k("span"),j&&j.c(),r=q(),S&&S.c(),i=q(),s=k("div"),X&&X.c(),o=q(),l=k("div"),G&&G.c(),a=q(),d=k("span"),u=k("input"),y=q(),$=k("div"),W&&W.c(),C=q(),ee&&ee.c(),x=q(),A=k("button"),te&&te.c(),K=q(),E&&E.c(),M=q(),Q=k("div"),N&&N.c(),f(n,"aria-live","polite"),f(n,"aria-atomic","false"),f(n,"aria-relevant","additions text"),f(n,"class","a11y-text svelte-kzdkc5"),f(u,"type","text"),f(u,"class","sv-input--text svelte-kzdkc5"),f(u,"size","1"),f(u,"id",t[2]),f(u,"placeholder",c=t[22]?"":t[46]),f(u,"inputmode",t[47]),u.readOnly=h=!t[8],f(u,"enterkeyhint",t[42]),u.disabled=t[3],f(u,"aria-label",b=t[23].aria_label),f(u,"aria-describedby",m=t[23].aria_describedby),f(u,"autocapitalize","none"),f(u,"autocomplete","off"),f(u,"autocorrect","off"),f(u,"spellcheck","false"),f(u,"aria-autocomplete","list"),f(u,"tabindex","0"),ne(u,"keep-value",!t[11]),f(d,"class","sv-input--sizer svelte-kzdkc5"),f(d,"data-value",v=t[22]||t[46]),f(l,"class","sv-control--selection svelte-kzdkc5"),ne(l,"is-single",t[0]===!1),ne(l,"has-items",t[18].length>0),ne(l,"has-input",t[22].length),f(A,"type","button"),f(A,"class","sv-btn-indicator svelte-kzdkc5"),f(A,"data-action","toggle"),f(A,"tabindex","-1"),ne(A,"sv-dropdown-opened",t[19]),f($,"class","sv-buttons svelte-kzdkc5"),ne($,"is-loading",t[33]),f(s,"class","sv-control svelte-kzdkc5"),f(Q,"class","sv_dropdown svelte-kzdkc5"),ne(Q,"is-open",t[29]),f(e,"class",H=Si(`svelecte ${t[16]}`)+" svelte-kzdkc5"),f(e,"role","none"),ne(e,"is-required",t[5]),ne(e,"is-empty",t[18].length===0),ne(e,"is-invalid",t[5]&&t[18].length===0),ne(e,"is-tainted",t[28]),ne(e,"is-valid",t[5]?t[18].length>0:!0),ne(e,"is-focused",t[27]),ne(e,"is-open",t[19]),ne(e,"is-disabled",t[3])},m(w,z){I(w,e,z),_(e,n),j&&j.m(n,null),_(e,r),S&&S.m(e,null),_(e,i),_(e,s),X&&X.m(s,null),_(s,o),_(s,l),G&&G.m(l,null),_(l,a),_(l,d),_(d,u),t[111](u),er(u,t[22]),_(s,y),_(s,$),W&&W.m($,null),_($,C),ee&&ee.m($,null),_($,x),_($,A),te&&te.m(A,null),_(s,K),E&&E.m(s,null),_(e,M),_(e,Q),N&&N.m(Q,null),Z=!0,D||(re=[he(u,"input",t[112]),he(u,"focus",t[55]),he(u,"keydown",t[52]),he(u,"keyup",t[53]),he(u,"input",t[54]),he(u,"blur",t[56]),he(u,"paste",t[57]),Ns(g=t[12].call(null,l,{items:t[18],flipDurationMs:t[35],type:t[2],dragDisabled:t[32]})),he(l,"consider",t[58]),he(l,"finalize",t[58]),he(s,"mousedown",Al),he(s,"click",t[51]),he(Q,"mousedown",Al),he(Q,"click",t[51])],D=!0)},p(w,z){w[27]?j?j.p(w,z):(j=yl(w),j.c(),j.m(n,null)):j&&(j.d(1),j=null),w[4]&&!w[6]?S?S.p(w,z):(S=wl(w),S.c(),S.m(e,i)):S&&(S.d(1),S=null),X&&X.p&&(!Z||z[3]&8388608)&&ct(X,B,w,w[116],Z?ut(B,w[116],z,Pf):ft(w[116]),$l),w[18].length?G?(G.p(w,z),z[0]&262144&&P(G,1)):(G=Cl(w),G.c(),P(G,1),G.m(l,a)):G&&(Me(),L(G,1,1,()=>{G=null}),Ae()),(!Z||z[0]&4)&&f(u,"id",w[2]),(!Z||z[0]&4194304|z[1]&32768&&c!==(c=w[22]?"":w[46]))&&f(u,"placeholder",c),(!Z||z[1]&65536)&&f(u,"inputmode",w[47]),(!Z||z[0]&256&&h!==(h=!w[8]))&&(u.readOnly=h),(!Z||z[1]&2048)&&f(u,"enterkeyhint",w[42]),(!Z||z[0]&8)&&(u.disabled=w[3]),(!Z||z[0]&8388608&&b!==(b=w[23].aria_label))&&f(u,"aria-label",b),(!Z||z[0]&8388608&&m!==(m=w[23].aria_describedby))&&f(u,"aria-describedby",m),z[0]&4194304&&u.value!==w[22]&&er(u,w[22]),(!Z||z[0]&2048)&&ne(u,"keep-value",!w[11]),(!Z||z[0]&4194304|z[1]&32768&&v!==(v=w[22]||w[46]))&&f(d,"data-value",v),g&&Et(g.update)&&z[0]&262148|z[1]&18&&g.update.call(null,{items:w[18],flipDurationMs:w[35],type:w[2],dragDisabled:w[32]}),(!Z||z[0]&1)&&ne(l,"is-single",w[0]===!1),(!Z||z[0]&262144)&&ne(l,"has-items",w[18].length>0),(!Z||z[0]&4194304)&&ne(l,"has-input",w[22].length),w[9]&&!w[3]?W?(W.p(w,z),z[0]&520&&P(W,1)):(W=El(w),W.c(),P(W,1),W.m($,C)):W&&(Me(),L(W,1,1,()=>{W=null}),Ae()),w[9]?ee||(ee=Il(),ee.c(),ee.m($,x)):ee&&(ee.d(1),ee=null),ie&&ie.p&&(!Z||z[0]&524288|z[3]&8388608)&&ct(ie,ce,w,w[116],Z?ut(ce,w[116],z,Ef):ft(w[116]),pl),(!Z||z[0]&524288)&&ne(A,"sv-dropdown-opened",w[19]),(!Z||z[1]&4)&&ne($,"is-loading",w[33]),E&&E.p&&(!Z||z[3]&8388608)&&ct(E,Ee,w,w[116],Z?ut(Ee,w[116],z,xf):ft(w[116]),hl),w[17]&&w[30]?N?(N.p(w,z),z[0]&1073872896&&P(N,1)):(N=Ol(w),N.c(),P(N,1),N.m(Q,null)):N&&(Me(),L(N,1,1,()=>{N=null}),Ae()),(!Z||z[0]&536870912)&&ne(Q,"is-open",w[29]),(!Z||z[0]&65536&&H!==(H=Si(`svelecte ${w[16]}`)+" svelte-kzdkc5"))&&f(e,"class",H),(!Z||z[0]&65568)&&ne(e,"is-required",w[5]),(!Z||z[0]&327680)&&ne(e,"is-empty",w[18].length===0),(!Z||z[0]&327712)&&ne(e,"is-invalid",w[5]&&w[18].length===0),(!Z||z[0]&268500992)&&ne(e,"is-tainted",w[28]),(!Z||z[0]&327712)&&ne(e,"is-valid",w[5]?w[18].length>0:!0),(!Z||z[0]&134283264)&&ne(e,"is-focused",w[27]),(!Z||z[0]&589824)&&ne(e,"is-open",w[19]),(!Z||z[0]&65544)&&ne(e,"is-disabled",w[3])},i(w){Z||(P(X,w),P(G),P(W),P(te,w),P(E,w),P(N),Z=!0)},o(w){L(X,w),L(G),L(W),L(te,w),L(E,w),L(N),Z=!1},d(w){w&&T(e),j&&j.d(),S&&S.d(),X&&X.d(w),G&&G.d(),t[111](null),W&&W.d(),ee&&ee.d(),te&&te.d(w),E&&E.d(w),N&&N.d(),D=!1,it(re)}}}_e.requestFactory=Q2;const yi={default(t){return X2(t[this.label])}},Xf=_e;function Al(t){t.preventDefault()}function Yf(t,e,n){let r,i,s,o,l,a,d,u,c,h,{$$slots:b={},$$scope:m}=e,{name:v="svelecte"}=e,{inputId:g=""}=e,{required:y=!1}=e,{disabled:$=!1}=e,{anchor_element:C=null}=e,{options:x=[]}=e,{optionResolver:A=null}=e,{valueField:K=_e.valueField}=e,{labelField:M=_e.labelField}=e,{groupLabelField:Q=_e.groupLabelField}=e,{groupItemsField:H=_e.groupItemsField}=e,{disabledField:Z=_e.disabledField}=e,{placeholder:D=_e.placeholder}=e,{searchable:re=_e.searchable}=e,{clearable:j=_e.clearable}=e,{renderer:S=null}=e,{disableHighlight:B=!1}=e,{highlightFirstItem:X=_e.highlightFirstItem}=e,{selectOnTab:G=_e.selectOnTab}=e,{resetOnBlur:W=_e.resetOnBlur}=e,{resetOnSelect:ee=_e.resetOnSelect}=e,{closeAfterSelect:ce=_e.closeAfterSelect}=e,{dndzone:ie=()=>({noop:!0,destroy:()=>{}})}=e,{validatorAction:te=[]}=e,{strictMode:Ee=!0}=e,{multiple:E=_e.multiple}=e,{max:N=_e.max}=e,{collapseSelection:w=_e.collapseSelection}=e,{keepSelectionInList:z=_e.keepSelectionInList}=e,{creatable:de=_e.creatable}=e,{creatablePrefix:we=_e.creatablePrefix}=e,{allowEditing:ve=_e.allowEditing}=e,{keepCreated:J=_e.keepCreated}=e,{delimiter:fe=_e.delimiter}=e,{createFilter:jt=null}=e,{createHandler:pt=null}=e,{fetch:Ue=null}=e,{fetchProps:Gt=_e.fetchProps}=e,{fetchMode:Wt="auto"}=e,{fetchCallback:_n=_e.fetchCallback}=e,{fetchResetOnBlur:Ct=!0}=e,{fetchDebounceTime:Nn=_e.fetchDebounceTime}=e,{minQuery:mt=_e.minQuery}=e,{lazyDropdown:Ki=_e.lazyDropdown}=e,{virtualList:nn=_e.virtualList}=e,{vlHeight:ai=_e.vlHeight}=e,{vlItemSize:di=_e.vlItemSize}=e,{searchProps:Ji=null}=e,{class:ro="svelecte-control"}=e,{i18n:ui=null}=e,{readSelection:yn=null}=e,{value:ot=null}=e,{valueAsObject:wn=_e.valueAsObject}=e,{parentValue:ar=void 0}=e;function md(){on.focus()}function gd(p,F){is(p),F&&pr()}function bd(p){return p?ot:yn}function vd(p){Ue&&(ls({init:!0,initValue:p,storedValue:Ct}),n(63,Ct=!1))}const Tt=Rt(),io=`sv-${v}-select`;Ue&&ot&&wn&&(!x||x&&x.length===0)&&(x=Array.isArray(ot)?ot:[ot]),g||(g=`${io}-input`),E=v&&!E?v.endsWith("[]"):E;let rn=!1,It,Ke=A?A(x,new Set):ol(x,K,M),Xi,ze=K||_i("value",Ke,H),lt=M||_i("label",Ke,H),Ce=ot!==null?mf(Ke,ot,wn,H,ze):[];const Ge=Ce.reduce((p,F)=>(p.add(F[ze]),p),new Set);let qt=Ce.filter(p=>p.$created),zn=!1,Ln=!1,Yi=!1,Oe=!1,dr=!1,Be=X?0:null,ur=!Ki,Qi=null,so=nn&&ai===null&&di===null,es=ai,Fn=di,oo,Se="",ts=!1,Fe,Ot=Wt==="init"||Ue&&Ue.includes("[query]")===!1,cr=Ot||Ue&&x.length===0?ot:null,ns=null,ci=w!==null,sn=!1,rs=!1,lo=100,fr=!1,ao=!1,on,Ze,ln,vt,hr;const St=pf(ze,lt,Q,H);co(ui,!0);function $d(p,F){rn&&(p&&(n(105,St.valueField=n(26,ze=p),St),Ge.size>0&&gr()),F&&(n(105,St.labelField=n(102,lt=F),St),(S===null||S==="default")&&n(43,o=yi.default.bind({label:lt}))))}function _d(p){if(rn){if(Ke!==p){if(p=ol(p,ze,lt),!K){const F=_i("value",p||null,H);!K&&ze!==F&&(n(105,St.valueField=n(26,ze=F),St),Ge.size>0&&gr())}if(!M){const F=_i("label",p||null,H);!M&&lt!==F&&(n(105,St.labelField=F,St),n(102,lt=F),(S===null||S==="default")&&n(43,o=yi.default.bind({label:lt})))}}n(60,x=p),n(101,Ke=A?A(p,Ge):p)}}function is(p,F){if(!(It===p&&!(F!=null&&F.skipEqualityCheck))){if(gr(),p){if((E&&!Array.isArray(p)||!E&&Array.isArray(p))&&console.warn(`Passed 'value' property should ${E?"be":"NOT be"} an array`),cr)return;const pe=Array.isArray(p)?p:[p],le=pe.reduce((Pt,xt)=>{if(wn&&(!Ee||de&&xt.$created))return Pt.push(xt),Pt;const Mt=i.find(Rn=>wn?Rn[ze]==xt[ze]:Rn[ze]==xt);return Mt?Pt.push(Mt):!Ee&&Pt.push(pt?pt({inputValue:xt,valueField:ze,labelField:lt,prefix:we}):{[ze]:xt,[lt]:xt}),Pt},[]);if(!(le.every(ss)&&(E?pe.length===le.length:le.length>0))){console.warn('[Svelecte]: provided "value" property is invalid',p),n(62,ot=E?[]:null),n(64,yn=ot),Tt("invalidValue",p);return}n(64,yn=Array.isArray(p)?le:le.shift())}It=p}}function yd(p){if(fr)return;const F=p.map(le=>{const{$disabled:He,$isGroupItem:Pt,...xt}=le;return xt}),pe=E?F:F.length?F[0]:null;wn?It=pe:It=E?pe.map(le=>le[ze]):Ce.length?pe[ze]:null,n(62,ot=It),n(64,yn=pe),N&&p.length===N&&n(41,kn=Fe.max(N))}function wd(p){if(p!==void 0&&Xi!==p||p===void 0&&Xi!==p){const F=p===void 0?!1:!p;gr(),It=E?[]:null,n(3,$=F)}Xi=p,ao=p!==void 0}function uo(p){!rn||!ur||$t().then(()=>{if(!hr)return;const F=hf(hr,vt,s);n(21,Fn=F.size),n(104,es=F.height)}).then(()=>ms(Oe,vt,ur))}function kd(p){rn&&(p&&!Ln&&(Ln=!0),!ur&&p&&n(30,ur=!0),$t().then(()=>{so&&uo()}).then(()=>{ms(p,vt,!0),p&&(X&&(Ce.length===0||E)&&Kt(0,{asc:!0}),!E&&Ce.length&&n(20,Be=i.findIndex(F=>F===Ce[0])),$i({container:ln,scrollContainer:vt,virtualList:nn,center:!1},Be)),$t().then(()=>n(29,dr=p))}),Qi||(Qi=()=>ms(p,vt,!0)),document[p?"addEventListener":"removeEventListener"]("scroll",Qi,{passive:!0}))}function co(p,F=null){(rn||F)&&n(23,Fe=Object.assign({},Xf.i18n,p||{}))}function Cd(p,F){if(!(Ue&&!Ot)){if(p){n(41,kn=Fe.max(N));return}n(41,kn=F.length!==i.length?de?Fe.emptyCreatable:Fe.nomatch:de?Fe.emptyCreatable:Fe.empty)}}function pr(){$t().then(()=>{Tt("change",yn),Ze&&(Ze.dispatchEvent(new Event("input")),Ze.dispatchEvent(new Event("change")))})}function Sd(p){Tt("createoption",p)}function mr(p,F){if(F=F||p.detail,!($||F[Z]||F.$isGroupHeader)){if(!F||E&&r)return!1;if(Ge.has(F[ze]))return fi(null,F);if(typeof F=="string"){if(!de||(F=Qo(F),qt.includes(F)||Ge.has(F)))return;n(34,rs=!0),Promise.resolve(pt.call(null,{inputValue:F,valueField:ze,labelField:lt,prefix:we})).then(pe=>{n(34,rs=!1),!Ue&&qt.push(F),pe.$created=!0,J&&n(101,Ke=[...Ke,pe]),Sd(pe),ss(pe),fo(),pr()}).catch(pe=>{Tt("createFail",{input:F,error:pe})});return}ss(F),fo(),pr()}}function fo(){(E&&ee||!E)&&n(22,Se=""),(ce===!0||ce==="auto"&&!E)&&n(19,Oe=!1),N&&Ce.length==N&&n(20,Be=0)}function ss(p){if(p.$selected=!0,E)Ce.push(p),n(18,Ce),Ge.add(p[ze]);else{const F=Ce.shift();F&&(F.$selected=!1),n(18,Ce=[p]),Ge.clear(),Ge.add(p[ze]),$t().then(()=>{n(20,Be=i.indexOf(p))})}return A?(n(101,Ke=A(x,Ge)),!0):(n(106,i),n(101,Ke),n(105,St),!0)}function fi(p={},F=null,pe){$||(F=F||p.detail,F?(xd(F,pe),z!==!0&&$t().then(()=>$i({scrollContainer:vt,container:ln,virtualList:nn,center:!1},Be))):gr(),pr())}function xd(p,F){if(p.$created){if(qt.splice(qt.findIndex(le=>le===p[ze]),1),n(103,qt),J){const le=Ke.findIndex(He=>He[ze]===p[ze]);le!==-1&&Ke.splice(le,1),n(101,Ke)}F&&ve&&n(22,Se=p[lt].replace(we,""))}p.$selected=!1;const pe=p[ze];if(Ge.delete(pe),Ce.splice(Ce.findIndex(le=>le[ze]==pe),1),n(18,Ce),A){n(101,Ke=A(x,Ge));return}n(106,i=Ue&&!Ot&&Ct?[]:i)}function gr(){if(Ge.size!==0){if(Ge.clear(),n(18,Ce=Ce.reduce((p,F)=>(F.$selected=!1,[]),[])),J||n(103,qt=[]),n(25,r=!1),Se&&n(22,Se=""),A){n(101,Ke=A(x,Ge));return}n(106,i=Ue&&!Ot&&Ct?[]:i)}}function Ed(p){qt.includes(Se)||mr(null,Se)}function Td(p){if(de&&fe.indexOf(p.key)>-1){Se.length>0&&mr(null,Se),p.preventDefault();return}const F=G&&Oe&&!p.shiftKey?"Tab":"No-tab";let pe=ns?p.metaKey:p.ctrlKey,le=["PageUp","PageDown"].includes(p.key),He=!1,Pt=!1;switch(p.key){case"End":if(Se.length!==0)return;Kt(s.length,{desc:!0});case"PageDown":if(le){const[Rn,br]=ho();n(20,Be=Math.min(Math.ceil((br*Be+Rn)/br),s.length))}case"ArrowUp":if(p.preventDefault(),!Oe){n(19,Oe=!0);return}Kt(Be-1,{desc:!0}),$t().then(()=>$i({scrollContainer:vt,container:ln,virtualList:nn,center:!1},Be));break;case"Home":if(Pt=!0,Se.length!==0||Se.length===0&&s.length===0)return;Kt(0,{asc:!0});case"PageUp":if(le){const[Rn,br]=ho();n(20,Be=Math.floor((br*Be-Rn)/br))}case"ArrowDown":if(p.preventDefault(),!Oe){n(19,Oe=!0);return}!Pt&&Kt((Be===null?-1:Be)+1,{asc:!0}),$t().then(()=>$i({scrollContainer:vt,container:ln,virtualList:nn,center:!1},Be));break;case"Escape":Oe&&(p.preventDefault(),p.stopPropagation()),Se||n(19,Oe=!1),n(22,Se="");break;case F:case"Enter":if(!Oe){p.key!==F&&Tt("enterKey",p);return}let Mt=pe?null:s[Be];if(de&&Se&&(Mt=!Mt||pe?Qo(Se):Mt,pe=!1),!pe&&Mt&&mr(null,Mt),s.length<=Be&&Kt(s.length-1),!Mt&&Ce.length){n(19,Oe=!1),p.key!==F&&Tt("enterKey",p);return}(p.key!==F||p.key===F&&G!=="select-navigate")&&p.preventDefault();break;case" ":!Ue&&!Oe&&(n(19,Oe=!0),p.preventDefault());break;case"Backspace":if(w==="always")return;He=!0;case"Delete":Se===""&&Ce.length&&(pe?fi({}):fi(null,Ce[Ce.length-1],He),p.preventDefault());default:!pe&&!["Tab","Shift"].includes(p.key)&&!Oe&&!sn&&n(19,Oe=!0)}}function Id(p){if($)return;const F=p.target.closest("[data-action]");if(Ln||(Ln=!0),(F==null?void 0:F.dataset.action)==="default")return;p.preventDefault();const pe=p.target.closest("[data-pos]");if(!F&&!pe)return Bd(p.target);switch((F==null?void 0:F.dataset.action)||"select"){case"deselect":let He=F.bound_item;if(!He){const xt=F.dataset.id;He=Ce.filter(Mt=>Mt[ze]==xt).shift()}fi({},He),He&&!zn&&on.focus();break;case"select":const Pt=parseInt(pe.dataset.pos);mr(null,s[Pt]);break;case"toggle":n(19,Oe=!Oe);break}}function Od(p){if(Yo()&&!u&&p.key==="Enter")return!0;ts=["Enter","Escape"].includes(p.key)&&Oe,Td(p)}function Pd(p){ts&&(p.stopImmediatePropagation(),p.preventDefault()),ts=!1}function Md(){Ce.length}function Ad(){n(27,zn=!0),n(19,Oe=Ln),Yi||n(28,Yi=!0),w==="blur"&&!fr&&setTimeout(()=>{n(32,ci=!1)},100),Tt("focus",on)}function Nd(){n(27,zn=!1),n(19,Oe=!1),Ln=!1,W?n(22,Se=""):hi&&!Ot&&hi.abort("blur"),w==="blur"&&!fr&&setTimeout(()=>{n(32,ci=!0)},100),Tt("blur",on)}function zd(p){if(de){p.preventDefault();const F=new RegExp("([^"+fe+"\\n]+)","g"),pe=p.clipboardData.getData("text/plain").replace(/\//g,"/").replace(/\t/g," "),le=pe.match(F);le.length===1&&pe.indexOf(",")===-1&&n(22,Se=le.pop().trim()),le.forEach(He=>mr(null,He.trim()))}}function Ld(p){fr=p.type==="consider",n(18,Ce=p.detail.items),fr||(pr(),w==="blur"&&setTimeout(()=>{n(32,ci=!0)},200))}let hi,pi,kn=Ue?Ot?Fe.fetchInit:mt>1?Fe.fetchQuery(mt,0):Fe.fetchBefore:de?Fe.emptyCreatable:Fe.empty;function Fd(p,F){if(!p){pi=null;return}(Ot||cr)&&(n(33,sn=!0),ls({init:!0})),pi=Y2(ls,Nn)}let Rd=At({control:null});const os=(p=null)=>Rd.update(F=>{var pe;return(pe=F.control)==null||pe.abort(),{control:p}});function jd(p){Ot||r||pi&&(os(),n(33,sn=!0),Se.length<mt&&n(33,sn=!1),Ct&&n(24,s=[]),n(29,dr=!(p.length>=mt)),n(41,kn=mt<=1?Fe.fetchBefore:Fe.fetchQuery(mt,p.length)),pi())}function ls(p={}){if(os(),p.init!==!0&&!Se.length||ao&&!ar){n(33,sn=!1),Ct&&n(101,Ke=A?A(x,Ge):[]);return}if(Se&&Se.length<mt){n(33,sn=!1);return}Ot&&It&&(!E||(It==null?void 0:It.length)>0)&&(cr=It);const F=cr||p.initValue;Ot&&n(41,kn=Fe.fetchInit);const pe=_e.requestFactory(Se,{parentValue:ar,url:Ue,initial:F},Gt);hi=pe.controller,os(pe.controller),window.fetch(pe.request).then(le=>le.json()).then(le=>(!Array.isArray(le)&&(le!=null&&le.error)&&Tt("fetchError",le.error),Promise.resolve(_n?_n(le):le.data||le.items||le.options||le).then(He=>{Array.isArray(He)||(console.warn("[Svelecte]:Fetch - array expected, invalid property provided:",He),He=[]),n(101,Ke=He),Tt("fetch",He),$t().then(()=>{F&&(cr=null,is(F,{skipEqualityCheck:!0}),"storedValue"in p&&n(63,Ct=p.storedValue))})}))).catch(le=>{if(le instanceof DOMException&&le.name==="AbortError")return!0;n(101,Ke=[]),Tt("fetchError",le),console.warn("[Svelecte] Fetch Error:",le)}).then(le=>{le!==!0&&(n(41,kn=Ot?Fe.empty:F?mt>1?Fe.fetchQuery(mt,0):Fe.fetchBefore:Fe.fetchEmpty),hi=null,n(33,sn=!1),zn&&n(19,Oe=!0),Oe&&!dr&&n(29,dr=!0))})}function Dd(p){return z?z===!0?p?Ge:null:p||E?Ge:null:Ge}function Kt(p,F={},pe=0){var He;const le=de?s.length+1:s.length;if(!(pe>=2)){if(p<0&&(p=F.desc?le-1:0),(Be===null&&X||p>=le)&&(p=0),(He=s[p])!=null&&He.$isGroupHeader){Kt(F.asc?p+1:p-1,F,++pe);return}n(20,Be=p)}}function Bd(p){if(!$){if(!zn){on.focus();return}p.tagName==="INPUT"&&Se||n(19,Oe=!Oe)}}function ho(){return nn?[vt.offsetHeight,Fn]:[vt.offsetHeight,ln.firstElementChild.offsetHeight]}const Zd=te.length?te.shift():()=>{};bn(()=>{n(17,rn=!0),Yo(),ns=J2(),n(31,oo=ns?"⌘":"Ctrl"),C?(n(37,Ze=document.getElementById(C)),n(37,Ze.className="sv-hidden-element",Ze),n(37,Ze.innerHTML="",Ze),n(37,Ze.tabIndex=-1,Ze),n(37,Ze.disabled=$,Ze),n(37,Ze.required=y,Ze),n(37,Ze.multiple=E,Ze),!E&&Ze.insertAdjacentHTML("beforeend",'<option value="" selected>Empty</option>'),Ge.forEach(p=>{Ze.insertAdjacentHTML("beforeend",`<option value=${p} selected>${p}</option>`)})):Ce.length&&setTimeout(()=>{Array.from(Ze.children).forEach(p=>{p.selected=!0})},200),window.matchMedia("(prefers-reduced-motion: reduce)").matches&&n(35,lo=0)});function Hd(p){Pe.call(this,t,p)}function Vd(p){Pe.call(this,t,p)}function Ud(p){je[p?"unshift":"push"](()=>{Ze=p,n(37,Ze),n(18,Ce),n(26,ze)})}function Gd(p){je[p?"unshift":"push"](()=>{on=p,n(36,on)})}function Wd(){Se=this.value,n(22,Se)}function qd(p){je[p?"unshift":"push"](()=>{hr=p,n(40,hr)})}function Kd(p){je[p?"unshift":"push"](()=>{ln=p,n(38,ln)})}function Jd(p){je[p?"unshift":"push"](()=>{vt=p,n(39,vt)})}return t.$$set=p=>{"name"in p&&n(4,v=p.name),"inputId"in p&&n(2,g=p.inputId),"required"in p&&n(5,y=p.required),"disabled"in p&&n(3,$=p.disabled),"anchor_element"in p&&n(6,C=p.anchor_element),"options"in p&&n(60,x=p.options),"optionResolver"in p&&n(65,A=p.optionResolver),"valueField"in p&&n(66,K=p.valueField),"labelField"in p&&n(67,M=p.labelField),"groupLabelField"in p&&n(68,Q=p.groupLabelField),"groupItemsField"in p&&n(69,H=p.groupItemsField),"disabledField"in p&&n(7,Z=p.disabledField),"placeholder"in p&&n(70,D=p.placeholder),"searchable"in p&&n(8,re=p.searchable),"clearable"in p&&n(9,j=p.clearable),"renderer"in p&&n(71,S=p.renderer),"disableHighlight"in p&&n(10,B=p.disableHighlight),"highlightFirstItem"in p&&n(72,X=p.highlightFirstItem),"selectOnTab"in p&&n(73,G=p.selectOnTab),"resetOnBlur"in p&&n(11,W=p.resetOnBlur),"resetOnSelect"in p&&n(74,ee=p.resetOnSelect),"closeAfterSelect"in p&&n(75,ce=p.closeAfterSelect),"dndzone"in p&&n(12,ie=p.dndzone),"validatorAction"in p&&n(13,te=p.validatorAction),"strictMode"in p&&n(76,Ee=p.strictMode),"multiple"in p&&n(0,E=p.multiple),"max"in p&&n(77,N=p.max),"collapseSelection"in p&&n(78,w=p.collapseSelection),"keepSelectionInList"in p&&n(79,z=p.keepSelectionInList),"creatable"in p&&n(14,de=p.creatable),"creatablePrefix"in p&&n(80,we=p.creatablePrefix),"allowEditing"in p&&n(81,ve=p.allowEditing),"keepCreated"in p&&n(82,J=p.keepCreated),"delimiter"in p&&n(83,fe=p.delimiter),"createFilter"in p&&n(1,jt=p.createFilter),"createHandler"in p&&n(61,pt=p.createHandler),"fetch"in p&&n(84,Ue=p.fetch),"fetchProps"in p&&n(85,Gt=p.fetchProps),"fetchMode"in p&&n(86,Wt=p.fetchMode),"fetchCallback"in p&&n(87,_n=p.fetchCallback),"fetchResetOnBlur"in p&&n(63,Ct=p.fetchResetOnBlur),"fetchDebounceTime"in p&&n(88,Nn=p.fetchDebounceTime),"minQuery"in p&&n(89,mt=p.minQuery),"lazyDropdown"in p&&n(90,Ki=p.lazyDropdown),"virtualList"in p&&n(15,nn=p.virtualList),"vlHeight"in p&&n(91,ai=p.vlHeight),"vlItemSize"in p&&n(92,di=p.vlItemSize),"searchProps"in p&&n(93,Ji=p.searchProps),"class"in p&&n(16,ro=p.class),"i18n"in p&&n(94,ui=p.i18n),"readSelection"in p&&n(64,yn=p.readSelection),"value"in p&&n(62,ot=p.value),"valueAsObject"in p&&n(95,wn=p.valueAsObject),"parentValue"in p&&n(96,ar=p.parentValue),"$$scope"in p&&n(116,m=p.$$scope)},t.$$.update=()=>{t.$$.dirty[2]&48&&$d(K,M),t.$$.dirty[0]&262144|t.$$.dirty[2]&32768&&n(25,r=N!==0&&Ce.length==N),t.$$.dirty[1]&536870912&&_d(x),t.$$.dirty[3]&4352&&n(106,i=gf(Ke,St)),t.$$.dirty[2]&1&&is(ot),t.$$.dirty[0]&37748736|t.$$.dirty[3]&12289&&n(24,s=r?[]:$f(i,Se,Dd(Se),St,Ji||{})),t.$$.dirty[2]&1024&&X&&Kt(0,{asc:!0}),t.$$.dirty[0]&17842176&&s.length<=Be&&Kt(0,{asc:!de,desc:de}),t.$$.dirty[0]&2|t.$$.dirty[3]&1024&&(jt||n(1,jt=p=>qt.includes(p))),t.$$.dirty[1]&1073741824&&(pt||n(61,pt=({inputValue:p,labelField:F,valueField:pe,prefix:le})=>({[pe]:p,[F]:`${le}${p}`}))),t.$$.dirty[3]&2&&co(ui),t.$$.dirty[3]&8&&wd(ar),t.$$.dirty[0]&262144&&yd(Ce),t.$$.dirty[2]&512|t.$$.dirty[3]&512&&n(43,o=typeof S=="function"?S:yi[S]||yi.default.bind({label:lt})),t.$$.dirty[0]&18874368|t.$$.dirty[3]&2048&&n(48,l=Math.min(es,Array.isArray(Fn)?Fn.reduce((p,F)=>(p+=F,p),0):s.length*Fn)),t.$$.dirty[0]&16777216&&so&&uo(),t.$$.dirty[0]&524288&&kd(Oe),t.$$.dirty[0]&256&&n(47,a=re?"text":"none"),t.$$.dirty[0]&262144|t.$$.dirty[2]&256&&n(46,d=Ce.length?"":D),t.$$.dirty[0]&262145&&n(42,u=Ce.length>0&&E===!1?null:"enter"),t.$$.dirty[0]&8650752|t.$$.dirty[3]&512&&n(45,c=Fe.aria_selected(Ce.map(p=>p[lt]))),t.$$.dirty[0]&30932992|t.$$.dirty[3]&512&&n(44,h=s.length&&Be>0?Oe?Fe.aria_listActive(s[Be],lt,s.length):Fe.aria_inputFocused():Se.length?Fe.nomatch:Fe.empty),t.$$.dirty[0]&4194304&&jd(Se),t.$$.dirty[0]&131072|t.$$.dirty[2]&4194304|t.$$.dirty[3]&8&&rn&&Fd(Ue),t.$$.dirty[0]&50331648&&Cd(r,s)},[E,jt,g,$,v,y,C,Z,re,j,B,W,ie,te,de,nn,ro,rn,Ce,Oe,Be,Fn,Se,Fe,s,r,ze,zn,Yi,dr,ur,oo,ci,sn,rs,lo,on,Ze,ln,vt,hr,kn,u,o,h,c,d,a,l,io,Ed,Id,Od,Pd,Md,Ad,Nd,zd,Ld,Zd,x,pt,ot,Ct,yn,A,K,M,Q,H,D,S,X,G,ee,ce,Ee,N,w,z,we,ve,J,fe,Ue,Gt,Wt,_n,Nn,mt,Ki,ai,di,Ji,ui,wn,ar,md,gd,bd,vd,Ke,lt,qt,es,St,i,b,Hd,Vd,Ud,Gd,Wd,qd,Kd,Jd,m]}class ed extends tt{constructor(e){super(),Qe(this,e,Yf,Jf,qe,{name:4,inputId:2,required:5,disabled:3,anchor_element:6,options:60,optionResolver:65,valueField:66,labelField:67,groupLabelField:68,groupItemsField:69,disabledField:7,placeholder:70,searchable:8,clearable:9,renderer:71,disableHighlight:10,highlightFirstItem:72,selectOnTab:73,resetOnBlur:11,resetOnSelect:74,closeAfterSelect:75,dndzone:12,validatorAction:13,strictMode:76,multiple:0,max:77,collapseSelection:78,keepSelectionInList:79,creatable:14,creatablePrefix:80,allowEditing:81,keepCreated:82,delimiter:83,createFilter:1,createHandler:61,fetch:84,fetchProps:85,fetchMode:86,fetchCallback:87,fetchResetOnBlur:63,fetchDebounceTime:88,minQuery:89,lazyDropdown:90,virtualList:15,vlHeight:91,vlItemSize:92,searchProps:93,class:16,i18n:94,readSelection:64,value:62,valueAsObject:95,parentValue:96,focus:97,setSelection:98,getSelection:99,refetchWith:100},yf,[-1,-1,-1,-1,-1,-1])}get name(){return this.$$.ctx[4]}set name(e){this.$$set({name:e}),O()}get inputId(){return this.$$.ctx[2]}set inputId(e){this.$$set({inputId:e}),O()}get required(){return this.$$.ctx[5]}set required(e){this.$$set({required:e}),O()}get disabled(){return this.$$.ctx[3]}set disabled(e){this.$$set({disabled:e}),O()}get anchor_element(){return this.$$.ctx[6]}set anchor_element(e){this.$$set({anchor_element:e}),O()}get options(){return this.$$.ctx[60]}set options(e){this.$$set({options:e}),O()}get optionResolver(){return this.$$.ctx[65]}set optionResolver(e){this.$$set({optionResolver:e}),O()}get valueField(){return this.$$.ctx[66]}set valueField(e){this.$$set({valueField:e}),O()}get labelField(){return this.$$.ctx[67]}set labelField(e){this.$$set({labelField:e}),O()}get groupLabelField(){return this.$$.ctx[68]}set groupLabelField(e){this.$$set({groupLabelField:e}),O()}get groupItemsField(){return this.$$.ctx[69]}set groupItemsField(e){this.$$set({groupItemsField:e}),O()}get disabledField(){return this.$$.ctx[7]}set disabledField(e){this.$$set({disabledField:e}),O()}get placeholder(){return this.$$.ctx[70]}set placeholder(e){this.$$set({placeholder:e}),O()}get searchable(){return this.$$.ctx[8]}set searchable(e){this.$$set({searchable:e}),O()}get clearable(){return this.$$.ctx[9]}set clearable(e){this.$$set({clearable:e}),O()}get renderer(){return this.$$.ctx[71]}set renderer(e){this.$$set({renderer:e}),O()}get disableHighlight(){return this.$$.ctx[10]}set disableHighlight(e){this.$$set({disableHighlight:e}),O()}get highlightFirstItem(){return this.$$.ctx[72]}set highlightFirstItem(e){this.$$set({highlightFirstItem:e}),O()}get selectOnTab(){return this.$$.ctx[73]}set selectOnTab(e){this.$$set({selectOnTab:e}),O()}get resetOnBlur(){return this.$$.ctx[11]}set resetOnBlur(e){this.$$set({resetOnBlur:e}),O()}get resetOnSelect(){return this.$$.ctx[74]}set resetOnSelect(e){this.$$set({resetOnSelect:e}),O()}get closeAfterSelect(){return this.$$.ctx[75]}set closeAfterSelect(e){this.$$set({closeAfterSelect:e}),O()}get dndzone(){return this.$$.ctx[12]}set dndzone(e){this.$$set({dndzone:e}),O()}get validatorAction(){return this.$$.ctx[13]}set validatorAction(e){this.$$set({validatorAction:e}),O()}get strictMode(){return this.$$.ctx[76]}set strictMode(e){this.$$set({strictMode:e}),O()}get multiple(){return this.$$.ctx[0]}set multiple(e){this.$$set({multiple:e}),O()}get max(){return this.$$.ctx[77]}set max(e){this.$$set({max:e}),O()}get collapseSelection(){return this.$$.ctx[78]}set collapseSelection(e){this.$$set({collapseSelection:e}),O()}get keepSelectionInList(){return this.$$.ctx[79]}set keepSelectionInList(e){this.$$set({keepSelectionInList:e}),O()}get creatable(){return this.$$.ctx[14]}set creatable(e){this.$$set({creatable:e}),O()}get creatablePrefix(){return this.$$.ctx[80]}set creatablePrefix(e){this.$$set({creatablePrefix:e}),O()}get allowEditing(){return this.$$.ctx[81]}set allowEditing(e){this.$$set({allowEditing:e}),O()}get keepCreated(){return this.$$.ctx[82]}set keepCreated(e){this.$$set({keepCreated:e}),O()}get delimiter(){return this.$$.ctx[83]}set delimiter(e){this.$$set({delimiter:e}),O()}get createFilter(){return this.$$.ctx[1]}set createFilter(e){this.$$set({createFilter:e}),O()}get createHandler(){return this.$$.ctx[61]}set createHandler(e){this.$$set({createHandler:e}),O()}get fetch(){return this.$$.ctx[84]}set fetch(e){this.$$set({fetch:e}),O()}get fetchProps(){return this.$$.ctx[85]}set fetchProps(e){this.$$set({fetchProps:e}),O()}get fetchMode(){return this.$$.ctx[86]}set fetchMode(e){this.$$set({fetchMode:e}),O()}get fetchCallback(){return this.$$.ctx[87]}set fetchCallback(e){this.$$set({fetchCallback:e}),O()}get fetchResetOnBlur(){return this.$$.ctx[63]}set fetchResetOnBlur(e){this.$$set({fetchResetOnBlur:e}),O()}get fetchDebounceTime(){return this.$$.ctx[88]}set fetchDebounceTime(e){this.$$set({fetchDebounceTime:e}),O()}get minQuery(){return this.$$.ctx[89]}set minQuery(e){this.$$set({minQuery:e}),O()}get lazyDropdown(){return this.$$.ctx[90]}set lazyDropdown(e){this.$$set({lazyDropdown:e}),O()}get virtualList(){return this.$$.ctx[15]}set virtualList(e){this.$$set({virtualList:e}),O()}get vlHeight(){return this.$$.ctx[91]}set vlHeight(e){this.$$set({vlHeight:e}),O()}get vlItemSize(){return this.$$.ctx[92]}set vlItemSize(e){this.$$set({vlItemSize:e}),O()}get searchProps(){return this.$$.ctx[93]}set searchProps(e){this.$$set({searchProps:e}),O()}get class(){return this.$$.ctx[16]}set class(e){this.$$set({class:e}),O()}get i18n(){return this.$$.ctx[94]}set i18n(e){this.$$set({i18n:e}),O()}get readSelection(){return this.$$.ctx[64]}set readSelection(e){this.$$set({readSelection:e}),O()}get value(){return this.$$.ctx[62]}set value(e){this.$$set({value:e}),O()}get valueAsObject(){return this.$$.ctx[95]}set valueAsObject(e){this.$$set({valueAsObject:e}),O()}get parentValue(){return this.$$.ctx[96]}set parentValue(e){this.$$set({parentValue:e}),O()}get focus(){return this.$$.ctx[97]}get setSelection(){return this.$$.ctx[98]}get getSelection(){return this.$$.ctx[99]}get refetchWith(){return this.$$.ctx[100]}}et(ed,{name:{},inputId:{},required:{type:"Boolean"},disabled:{type:"Boolean"},anchor_element:{},options:{},optionResolver:{},valueField:{},labelField:{},groupLabelField:{},groupItemsField:{},disabledField:{},placeholder:{},searchable:{},clearable:{},renderer:{},disableHighlight:{type:"Boolean"},highlightFirstItem:{},selectOnTab:{},resetOnBlur:{},resetOnSelect:{},closeAfterSelect:{},dndzone:{},validatorAction:{},strictMode:{type:"Boolean"},multiple:{},max:{},collapseSelection:{},keepSelectionInList:{},creatable:{},creatablePrefix:{},allowEditing:{},keepCreated:{},delimiter:{},createFilter:{},createHandler:{},fetch:{},fetchProps:{},fetchMode:{},fetchCallback:{},fetchResetOnBlur:{type:"Boolean"},fetchDebounceTime:{},minQuery:{},lazyDropdown:{},virtualList:{},vlHeight:{},vlItemSize:{},searchProps:{},class:{},i18n:{},readSelection:{},value:{},valueAsObject:{},parentValue:{}},["icon","collapsedSelection","selection","clear-icon","dropdown-toggle","control-end","list-header","option","create-row"],["focus","setSelection","getSelection","refetchWith"],!0);function Qf(t){or(t,"svelte-1cyeexn",".auto-complete-input-base.svelte-1cyeexn .sv-control{--sv-border:none;--sv-min-height:2rem;--sv-active-border:none;--sv-item-color:#ffffff;--sv-item-selected-bg:hsl(var(--twc-secondary));--sv-item-btn-bg:hsl(var(--twc-secondary));--sv-item-btn-bg-hover:hsl(var(--twc-secondary-950));--sv-item-btn-icon:#ffffff;--sv-general-padding:0;--sv-separator-bg:#efefef;--sv-border-radius:0;--sv-item-btn-color:#ffffff;--sv-item-btn-color-hover:#ffffff;--sv-icon-size:1.25rem}.auto-complete-input-base.svelte-1cyeexn .sv-buttons .sv-btn-separator,.auto-complete-input-base.svelte-1cyeexn .sv-buttons .sv-btn-indicator:not(.sv-has-selection){display:none}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection span.sv-input--sizer:not(:focus-within){pointer-events:auto;position:relative}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection .sv-input--sizer .sv-input--text{--tw-ring-color:transparent;font-weight:600;--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);outline:2px solid transparent;outline-offset:2px;transition:width 150ms}.auto-complete-input-base.svelte-1cyeexn .sv-input--text::-moz-placeholder{font-weight:400;--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .sv-input--text::placeholder{font-weight:400;--tw-text-opacity:1;color:rgb(156 163 175 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .sv-item--container>.sv-item--wrap>.sv-item--content{font-weight:600;--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .sv-dropdown-content>.sv-item--wrap .sv-item--content{padding-top:0.5rem;padding-bottom:0.5rem;font-size:0.875rem;line-height:1.25rem;font-weight:500;--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .sv-dropdown-content>.sv-item--wrap .sv-item--content .highlight{--tw-bg-opacity:1;background-color:hsl(var(--twc-accent-100) / var(--twc-accent-100-opacity, var(--tw-bg-opacity)))}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection:not(.is-single) .sv-item--container{border-radius:0.75rem}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection:not(.is-single) .sv-item--wrap{border-top-left-radius:0.75rem;border-bottom-left-radius:0.75rem;padding-right:0px}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection:not(.is-single) .sv-item--btn{border-top-right-radius:0.75rem;border-bottom-right-radius:0.75rem;padding-left:0.25rem;padding-right:0.5rem;--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .sv-control--selection:not(.is-single) .sv-item--content{padding:0.25rem;padding-left:0.375rem;font-weight:600;--tw-text-opacity:1;color:rgb(255 255 255 / var(--tw-text-opacity))}.auto-complete-input-base.svelte-1cyeexn .is-dropdown-row .creatable-row{padding-top:0.5rem;padding-bottom:0.5rem;font-size:0.875rem;line-height:1.25rem;font-weight:500;--tw-text-opacity:1;color:rgb(75 85 99 / var(--tw-text-opacity))}")}function e3(t){let e,n,r,i,s,o;const l=[t[3],{allowEditing:!0},{clearable:!0},{creatablePrefix:""},{minQuery:2},{searchProps:{skipSort:!0}},{strictMode:!1},{valueAsObject:t[4].valueAsObject??!0}];function a(u){t[5](u)}let d={};for(let u=0;u<l.length;u+=1)d=gt(d,l[u]);return t[0]!==void 0&&(d.value=t[0]),n=new ed({props:d}),je.push(()=>$n(n,"value",a)),n.$on("blur",t[6]),n.$on("change",t[7]),n.$on("createoption",t[8]),n.$on("enterKey",t[9]),n.$on("fetch",t[10]),n.$on("invalidValue",t[11]),{c(){e=k("div"),Ne(n.$$.fragment),i=q(),s=k("select"),f(s,"class","hidden"),f(s,"id",t[2]),f(e,"class","auto-complete-input-base w-full svelte-1cyeexn")},m(u,c){I(u,e,c),Te(n,e,null),_(e,i),_(e,s),t[12](e),o=!0},p(u,[c]){const h=c&24?ri(l,[c&8&&Zs(u[3]),l[1],l[2],l[3],l[4],l[5],l[6],c&16&&{valueAsObject:u[4].valueAsObject??!0}]):{};!r&&c&1&&(r=!0,h.value=u[0],vn(()=>r=!1)),n.$set(h)},i(u){o||(P(n.$$.fragment,u),o=!0)},o(u){L(n.$$.fragment,u),o=!1},d(u){u&&T(e),Ie(n),t[12](null)}}}function t3(t,e,n){const r=["value"];let i=Qn(e,r),{value:s}=e,o;const l=`autocomplete-select-${Math.random().toString(36).substring(7)}`;bn(()=>{const g=o.querySelector("#sv-svelecte-select-input");if(g!=null){const y=()=>{const A=(g==null?void 0:g.placeholder.length)>0?g==null?void 0:g.placeholder:g==null?void 0:g.value;g==null||g.setAttribute("style",`width: ${(A==null?void 0:A.length)+3.5}ch`)},$=A=>["input","change","focusout"].forEach(A);$(A=>g.addEventListener(A,y));const C=new MutationObserver(y);C.observe(g,{attributes:!0,attributeFilter:["placeholder","value"]});const x=Object.getOwnPropertyDescriptor(HTMLInputElement.prototype,"value");return Object.defineProperty(g,"value",{get:x==null?void 0:x.get,set(A){var K;(K=x==null?void 0:x.set)==null||K.call(this,A),y()}}),y(),g.focus(),g.autofocus=!0,()=>{$(A=>g.removeEventListener(A,y)),C.disconnect()}}});function a(g){s=g,n(0,s)}function d(g){Pe.call(this,t,g)}function u(g){Pe.call(this,t,g)}function c(g){Pe.call(this,t,g)}function h(g){Pe.call(this,t,g)}function b(g){Pe.call(this,t,g)}function m(g){Pe.call(this,t,g)}function v(g){je[g?"unshift":"push"](()=>{o=g,n(1,o)})}return t.$$set=g=>{n(4,e=gt(gt({},e),fn(g))),n(3,i=Qn(e,r)),"value"in g&&n(0,s=g.value)},t.$$.update=()=>{n(3,i.i18n={createRowLabel:g=>g,fetchBefore:"Type to get suggestions",fetchQuery:()=>"Type to get suggestions",...i.i18n},i),n(3,i.labelField=i.labelField??i.valueField,i),delete i.class},e=fn(e),[s,o,l,i,e,a,d,u,c,h,b,m,v]}class td extends tt{constructor(e){super(),Qe(this,e,t3,e3,qe,{value:0},Qf)}get value(){return this.$$.ctx[0]}set value(e){this.$$set({value:e}),O()}}et(td,{value:{}},[],[],!0);function n3(t){or(t,"svelte-t77avd",`.auto-complete-input-regular-container.compact.svelte-t77avd .sv-control .sv-item--wrap{padding-left:0px
}.auto-complete-input-regular-container.has-error.svelte-t77avd .svelecte-control .sv-control{background-color:rgb(253 232 232 / var(--tw-bg-opacity));--tw-bg-opacity:0.5
}`)}function Nl(t){let e,n,r,i;return{c(){e=k("label"),n=$e(t[4]),f(e,"class",r=(t[2]==="alt"?"text-primary":"text-indigo-950")+" text-xs font-semibold"),f(e,"for",i="input-"+t[9].name)},m(s,o){I(s,e,o),_(e,n)},p(s,o){o&16&&De(n,s[4]),o&4&&r!==(r=(s[2]==="alt"?"text-primary":"text-indigo-950")+" text-xs font-semibold")&&f(e,"class",r),o&512&&i!==(i="input-"+s[9].name)&&f(e,"for",i)},d(s){s&&T(e)}}}function zl(t){let e,n;return{c(){e=k("small"),n=$e(t[7]),f(e,"class","text-xs text-red-600")},m(r,i){I(r,e,i),_(e,n)},p(r,i){i&128&&De(n,r[7])},d(r){r&&T(e)}}}function r3(t){let e,n,r,i,s,o,l,a,d,u,c=t[4]&&Nl(t);const h=[t[10]];function b($){t[16]($)}let m={};for(let $=0;$<h.length;$+=1)m=gt(m,h[$]);t[1]!==void 0&&(m.value=t[1]),i=new td({props:m}),t[15](i),je.push(()=>$n(i,"value",b)),i.$on("blur",t[17]),i.$on("change",t[18]),i.$on("createoption",t[19]),i.$on("enterKey",t[20]),i.$on("fetch",t[21]),i.$on("invalidValue",t[22]);const v=t[14].default,g=dt(v,t,t[13],null);let y=t[7]&&zl(t);return{c(){e=k("div"),c&&c.c(),n=q(),r=k("div"),Ne(i.$$.fragment),o=q(),g&&g.c(),a=q(),y&&y.c(),f(r,"class",l="auto-complete-input-regular-container flex flex-row gap-2 items-center "+t[8][t[3]]+" shadow-primary "+(t[7]?"has-error bg-red-100 bg-opacity-50":"bg-white")+" "+t[6]+" svelte-t77avd"),f(e,"class",d=Si(t[0])+" svelte-t77avd")},m($,C){I($,e,C),c&&c.m(e,null),_(e,n),_(e,r),Te(i,r,null),_(r,o),g&&g.m(r,null),_(e,a),y&&y.m(e,null),u=!0},p($,[C]){$[4]?c?c.p($,C):(c=Nl($),c.c(),c.m(e,n)):c&&(c.d(1),c=null);const x=C&1024?ri(h,[Zs($[10])]):{};!s&&C&2&&(s=!0,x.value=$[1],vn(()=>s=!1)),i.$set(x),g&&g.p&&(!u||C&8192)&&ct(g,v,$,$[13],u?ut(v,$[13],C,null):ft($[13]),null),(!u||C&200&&l!==(l="auto-complete-input-regular-container flex flex-row gap-2 items-center "+$[8][$[3]]+" shadow-primary "+($[7]?"has-error bg-red-100 bg-opacity-50":"bg-white")+" "+$[6]+" svelte-t77avd"))&&f(r,"class",l),$[7]?y?y.p($,C):(y=zl($),y.c(),y.m(e,null)):y&&(y.d(1),y=null),(!u||C&1&&d!==(d=Si($[0])+" svelte-t77avd"))&&f(e,"class",d)},i($){u||(P(i.$$.fragment,$),P(g,$),u=!0)},o($){L(i.$$.fragment,$),L(g,$),u=!1},d($){$&&T(e),c&&c.d(),t[15](null),Ie(i),g&&g.d($),y&&y.d()}}}function i3(t,e,n){let r,i;const s=["value","theme","labelTheme","size","errors","label","componentContainerMergedClass"];let o=Qn(e,s),{$$slots:l={},$$scope:a}=e,{value:d=""}=e,{theme:u="main"}=e,{labelTheme:c=u==="underline"?"main":u}=e,{size:h="normal"}=e,{errors:b=[]}=e,{label:m}=e,{componentContainerMergedClass:v}=e,g=null;const y={main:"text-xs rounded-xl border border-white focus-within:ring-2 focus-within:ring-secondary-500",alt:"text-xs rounded-xl border border-stone-300 focus-within:ring-2 focus-within:ring-secondary-500",underline:"text-xs border-b border-neutral-300"},$={normal:"p-1 pr-2",compact:"p-2 pl-4",extraCompact:"p-0"};function C(D){je[D?"unshift":"push"](()=>{g=D,n(5,g)})}function x(D){d=D,n(1,d)}function A(D){Pe.call(this,t,D)}function K(D){Pe.call(this,t,D)}function M(D){Pe.call(this,t,D)}function Q(D){Pe.call(this,t,D)}function H(D){Pe.call(this,t,D)}function Z(D){Pe.call(this,t,D)}return t.$$set=D=>{n(9,e=gt(gt({},e),fn(D))),n(10,o=Qn(e,s)),"value"in D&&n(1,d=D.value),"theme"in D&&n(11,u=D.theme),"labelTheme"in D&&n(2,c=D.labelTheme),"size"in D&&n(3,h=D.size),"errors"in D&&n(12,b=D.errors),"label"in D&&n(4,m=D.label),"componentContainerMergedClass"in D&&n(0,v=D.componentContainerMergedClass),"$$scope"in D&&n(13,a=D.$$scope)},t.$$.update=()=>{t.$$.dirty&4096&&n(7,r=(b==null?void 0:b[0])??null),n(6,i=Kn(y[u],e.class)),t.$$.dirty&1&&n(0,v=Kn("flex flex-col gap-2 w-full",v))},e=fn(e),[v,d,c,h,m,g,i,r,$,e,o,u,b,a,l,C,x,A,K,M,Q,H,Z]}class Ys extends tt{constructor(e){super(),Qe(this,e,i3,r3,qe,{value:1,theme:11,labelTheme:2,size:3,errors:12,label:4,componentContainerMergedClass:0},n3)}get value(){return this.$$.ctx[1]}set value(e){this.$$set({value:e}),O()}get theme(){return this.$$.ctx[11]}set theme(e){this.$$set({theme:e}),O()}get labelTheme(){return this.$$.ctx[2]}set labelTheme(e){this.$$set({labelTheme:e}),O()}get size(){return this.$$.ctx[3]}set size(e){this.$$set({size:e}),O()}get errors(){return this.$$.ctx[12]}set errors(e){this.$$set({errors:e}),O()}get label(){return this.$$.ctx[4]}set label(e){this.$$set({label:e}),O()}get componentContainerMergedClass(){return this.$$.ctx[0]}set componentContainerMergedClass(e){this.$$set({componentContainerMergedClass:e}),O()}}et(Ys,{value:{},theme:{},labelTheme:{},size:{},errors:{},label:{},componentContainerMergedClass:{}},["default"],[],!0);const Ll="data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M8.25%2011.25C8.25%209.17893%209.92893%207.5%2012%207.5C14.0711%207.5%2015.75%209.17893%2015.75%2011.25C15.75%2013.3211%2014.0711%2015%2012%2015C9.92893%2015%208.25%2013.3211%208.25%2011.25Z'%20stroke='%2360778C'%20stroke-width='1.5'/%3e%3cmask%20id='path-2-inside-1_205_5835'%20fill='white'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M23.1278%2011.25C21.3476%2015.6477%2017.0361%2018.75%2012%2018.75C6.96397%2018.75%202.65248%2015.6477%200.872314%2011.25C2.65248%206.85225%206.96397%203.75%2012%203.75C17.0361%203.75%2021.3476%206.85226%2023.1278%2011.25Z'/%3e%3c/mask%3e%3cpath%20d='M23.1278%2011.25L24.5182%2011.8128L24.746%2011.25L24.5182%2010.6872L23.1278%2011.25ZM0.872314%2011.25L-0.518092%2010.6872L-0.745917%2011.25L-0.518092%2011.8128L0.872314%2011.25ZM21.7374%2010.6872C20.1786%2014.538%2016.4042%2017.25%2012%2017.25V20.25C17.668%2020.25%2022.5166%2016.7575%2024.5182%2011.8128L21.7374%2010.6872ZM12%2017.25C7.59584%2017.25%203.82148%2014.538%202.26272%2010.6872L-0.518092%2011.8128C1.48347%2016.7575%206.3321%2020.25%2012%2020.25V17.25ZM2.26272%2011.8128C3.82148%207.96203%207.59584%205.25%2012%205.25V2.25C6.3321%202.25%201.48347%205.74248%20-0.518092%2010.6872L2.26272%2011.8128ZM12%205.25C16.4042%205.25%2020.1786%207.96203%2021.7374%2011.8128L24.5182%2010.6872C22.5166%205.74248%2017.668%202.25%2012%202.25V5.25Z'%20fill='%2360778C'%20mask='url(%23path-2-inside-1_205_5835)'/%3e%3cpath%20d='M15.75%201.5L8.25%2021.75'%20stroke='%2360778C'%20stroke-width='1.5'%20stroke-linecap='round'/%3e%3cpath%20d='M16.9458%201.5L9.4458%2021.75'%20stroke='white'%20stroke-width='1.5'%20stroke-linecap='round'/%3e%3c/svg%3e",Fl="data:image/svg+xml,%3csvg%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M8.25%2011.25C8.25%209.17893%209.92893%207.5%2012%207.5C14.0711%207.5%2015.75%209.17893%2015.75%2011.25C15.75%2013.3211%2014.0711%2015%2012%2015C9.92893%2015%208.25%2013.3211%208.25%2011.25Z'%20stroke='%2360778C'%20stroke-width='1.5'/%3e%3cmask%20id='path-2-inside-1_205_5835'%20fill='white'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M23.1278%2011.25C21.3476%2015.6477%2017.0361%2018.75%2012%2018.75C6.96397%2018.75%202.65248%2015.6477%200.872314%2011.25C2.65248%206.85225%206.96397%203.75%2012%203.75C17.0361%203.75%2021.3476%206.85226%2023.1278%2011.25Z'/%3e%3c/mask%3e%3cpath%20d='M23.1278%2011.25L24.5182%2011.8128L24.746%2011.25L24.5182%2010.6872L23.1278%2011.25ZM0.872314%2011.25L-0.518092%2010.6872L-0.745917%2011.25L-0.518092%2011.8128L0.872314%2011.25ZM21.7374%2010.6872C20.1786%2014.538%2016.4042%2017.25%2012%2017.25V20.25C17.668%2020.25%2022.5166%2016.7575%2024.5182%2011.8128L21.7374%2010.6872ZM12%2017.25C7.59584%2017.25%203.82148%2014.538%202.26272%2010.6872L-0.518092%2011.8128C1.48347%2016.7575%206.3321%2020.25%2012%2020.25V17.25ZM2.26272%2011.8128C3.82148%207.96203%207.59584%205.25%2012%205.25V2.25C6.3321%202.25%201.48347%205.74248%20-0.518092%2010.6872L2.26272%2011.8128ZM12%205.25C16.4042%205.25%2020.1786%207.96203%2021.7374%2011.8128L24.5182%2010.6872C22.5166%205.74248%2017.668%202.25%2012%202.25V5.25Z'%20fill='%2360778C'%20mask='url(%23path-2-inside-1_205_5835)'/%3e%3c/svg%3e";function s3(t){or(t,"svelte-1ejvq6w","input.svelte-1ejvq6w:-webkit-autofill,input.svelte-1ejvq6w:-webkit-autofill:hover,input.svelte-1ejvq6w:-webkit-autofill:focus{-webkit-text-fill-color:#4B5563 !important}")}function Rl(t){let e,n,r;return{c(){e=k("label"),n=$e(t[2]),f(e,"class",t[7]),f(e,"for",r="input-"+t[12].name)},m(i,s){I(i,e,s),_(e,n)},p(i,s){s&4&&De(n,i[2]),s&128&&f(e,"class",i[7]),s&4096&&r!==(r="input-"+i[12].name)&&f(e,"for",r)},d(i){i&&T(e)}}}function o3(t){let e,n,r,i,s;return{c(){e=k("button"),n=k("img"),f(n,"alt","toggle-password"),f(n,"class","h-4 scale-150"),Yn(n.src,r=t[6]==="password"?Ll:Fl)||f(n,"src",r),f(e,"type","button")},m(o,l){I(o,e,l),_(e,n),i||(s=he(e,"click",t[11]),i=!0)},p(o,l){l&64&&!Yn(n.src,r=o[6]==="password"?Ll:Fl)&&f(n,"src",r)},d(o){o&&T(e),i=!1,s()}}}function jl(t){let e,n;return{c(){e=k("small"),n=$e(t[5]),f(e,"class","text-sm text-rose-500")},m(r,i){I(r,e,i),_(e,n)},p(r,i){i&32&&De(n,r[5])},d(r){r&&T(e)}}}function l3(t){let e,n,r,i,s,o,l,a,d,u,c,h,b=t[2]&&Rl(t),m=[t[13],{type:t[6]},{"aria-invalid":s=t[5]?"true":void 0},{class:o="p-0 border-none disabled:bg-neutral-200 focus:border-none focus:outline-none focus:ring-0 focus:shadow-none flex-grow "+t[4]+" text-"+t[3]+" font-semibold placeholder:font-normal placeholder:text-gray-400 bg-transparent"},{id:l="input-"+t[12].name},{placeholder:t[9]}],v={};for(let $=0;$<m.length;$+=1)v=gt(v,m[$]);let g=t[10]==="password"&&o3(t),y=t[5]&&jl(t);return{c(){e=k("div"),b&&b.c(),n=q(),r=k("div"),i=k("input"),a=q(),g&&g.c(),u=q(),y&&y.c(),gs(i,v),ne(i,"svelte-1ejvq6w",!0),f(r,"class",d="flex flex-row gap-2 text-"+t[3]+" "+(t[12].disabled?"bg-neutral-200":"bg-white")+" "+t[8]),f(e,"class",t[0])},m($,C){I($,e,C),b&&b.m(e,null),_(e,n),_(e,r),_(r,i),i.autofocus&&i.focus(),er(i,t[1]),_(r,a),g&&g.m(r,null),_(e,u),y&&y.m(e,null),c||(h=[he(i,"input",t[23]),he(i,"change",t[19]),he(i,"blur",t[20]),he(i,"input",t[21]),he(i,"keydown",t[22])],c=!0)},p($,[C]){$[2]?b?b.p($,C):(b=Rl($),b.c(),b.m(e,n)):b&&(b.d(1),b=null),gs(i,v=ri(m,[C&8192&&$[13],C&64&&{type:$[6]},C&32&&s!==(s=$[5]?"true":void 0)&&{"aria-invalid":s},C&24&&o!==(o="p-0 border-none disabled:bg-neutral-200 focus:border-none focus:outline-none focus:ring-0 focus:shadow-none flex-grow "+$[4]+" text-"+$[3]+" font-semibold placeholder:font-normal placeholder:text-gray-400 bg-transparent")&&{class:o},C&4096&&l!==(l="input-"+$[12].name)&&{id:l},C&512&&{placeholder:$[9]}])),C&2&&i.value!==$[1]&&er(i,$[1]),ne(i,"svelte-1ejvq6w",!0),$[10]==="password"&&g.p($,C),C&4360&&d!==(d="flex flex-row gap-2 text-"+$[3]+" "+($[12].disabled?"bg-neutral-200":"bg-white")+" "+$[8])&&f(r,"class",d),$[5]?y?y.p($,C):(y=jl($),y.c(),y.m(e,null)):y&&(y.d(1),y=null),C&1&&f(e,"class",$[0])},i:oe,o:oe,d($){$&&T(e),b&&b.d(),g&&g.d(),y&&y.d(),c=!1,it(h)}}}function a3(t,e,n){let r,i,s,o;const l=["theme","label","labelTheme","labelClass","fontSize","errorTheme","textColorClass","errors","componentContainerMergedClass","value"];let a=Qn(e,l),{theme:d="main"}=e,{label:u}=e,{labelTheme:c=d}=e,{labelClass:h=""}=e,{fontSize:b="xs"}=e,{errorTheme:m=d==="underline"?"underline":"main"}=e,{textColorClass:v="text-gray-600"}=e,{errors:g}=e,{componentContainerMergedClass:y}=e,{value:$}=e;const C=e.type;let x=C;function A(){n(6,x=x==="password"?"text":"password")}const K={main:"rounded-xl p-4 shadow-primary focus-within:ring-2 focus-within:ring-secondary-500",alt:"rounded-xl p-4 shadow-primary focus-within:ring-2 focus-within:ring-secondary-500 border border-stone-300",underline:"px-0 py-1 border-b border-neutral-300"},M={main:"bg-rose-100 bg-opacity-50",alt:"border border-rose-500",underline:"border-b border-rose-500"},Q={main:`text-${b} font-semibold text-indigo-950`,alt:`text-${b} font-semibold text-primary`,underline:"text-sm font-normal text-neutral-400"};function H(S){Pe.call(this,t,S)}function Z(S){Pe.call(this,t,S)}function D(S){Pe.call(this,t,S)}function re(S){Pe.call(this,t,S)}function j(){$=this.value,n(1,$)}return t.$$set=S=>{n(12,e=gt(gt({},e),fn(S))),n(13,a=Qn(e,l)),"theme"in S&&n(14,d=S.theme),"label"in S&&n(2,u=S.label),"labelTheme"in S&&n(15,c=S.labelTheme),"labelClass"in S&&n(16,h=S.labelClass),"fontSize"in S&&n(3,b=S.fontSize),"errorTheme"in S&&n(17,m=S.errorTheme),"textColorClass"in S&&n(4,v=S.textColorClass),"errors"in S&&n(18,g=S.errors),"componentContainerMergedClass"in S&&n(0,y=S.componentContainerMergedClass),"value"in S&&n(1,$=S.value)},t.$$.update=()=>{var S;n(9,r=e.placeholder??`Enter ${u}`),n(5,i=((S=g==null?void 0:g[e.name])==null?void 0:S[0])??null),n(8,s=Kn(K[d],e.class,i?M[m]:"")),t.$$.dirty&229408&&n(7,o=Kn(Q[c],i&&m==="alt"?"text-rose-500":"",h)),t.$$.dirty&1&&n(0,y=Kn("flex flex-col gap-2 w-full",y))},e=fn(e),[y,$,u,b,v,i,x,o,s,r,C,A,e,a,d,c,h,m,g,H,Z,D,re,j]}class Qs extends tt{constructor(e){super(),Qe(this,e,a3,l3,qe,{theme:14,label:2,labelTheme:15,labelClass:16,fontSize:3,errorTheme:17,textColorClass:4,errors:18,componentContainerMergedClass:0,value:1},s3)}get theme(){return this.$$.ctx[14]}set theme(e){this.$$set({theme:e}),O()}get label(){return this.$$.ctx[2]}set label(e){this.$$set({label:e}),O()}get labelTheme(){return this.$$.ctx[15]}set labelTheme(e){this.$$set({labelTheme:e}),O()}get labelClass(){return this.$$.ctx[16]}set labelClass(e){this.$$set({labelClass:e}),O()}get fontSize(){return this.$$.ctx[3]}set fontSize(e){this.$$set({fontSize:e}),O()}get errorTheme(){return this.$$.ctx[17]}set errorTheme(e){this.$$set({errorTheme:e}),O()}get textColorClass(){return this.$$.ctx[4]}set textColorClass(e){this.$$set({textColorClass:e}),O()}get errors(){return this.$$.ctx[18]}set errors(e){this.$$set({errors:e}),O()}get componentContainerMergedClass(){return this.$$.ctx[0]}set componentContainerMergedClass(e){this.$$set({componentContainerMergedClass:e}),O()}get value(){return this.$$.ctx[1]}set value(e){this.$$set({value:e}),O()}}et(Qs,{theme:{},label:{},labelTheme:{},labelClass:{},fontSize:{},errorTheme:{},textColorClass:{},errors:{},componentContainerMergedClass:{},value:{}},[],[],!0);function Ut(t){return{get context(){return m1(t)},set context(e){p1(t,e)}}}const oi=Ut("configContextWrapper"),li=Ut("layoutContextWrapper"),Wi=Ut("callbacksContextWrapper"),nd=Ut("userContextWrapper"),rd=Ut("validationsContextWrapper"),id=Ut("formErrorsContextWrapper"),eo=Ut("footerButtonsContextWrapper"),qi=Ut("showBigLoadingContextWrapper"),sd=Ut("isEmbeddedComponentShowingContextWrapper"),to=Ut("showSnackBarErrorContextWrapper");function d3(t){or(t,"svelte-1u65px",`.input-autocomplete-regular{--sv-item-wrap-padding:0
    }`)}function u3(t){let e,n,r,i=t[1]==="edit"&&(!["locationAutocomplete","jobTitleAutocomplete"].includes(t[2].component)||t[2].multiple),s,o;const l=[v3,b3,g3,m3,p3,h3],a=[];function d(c,h){return c[1]==="show"?0:c[2].component==="regular"?1:c[2].component==="tel"?2:c[2].component==="jobTitleAutocomplete"?3:c[2].component==="locationAutocomplete"?4:5}e=d(t),n=a[e]=l[e](t);let u=i&&Dl(t);return{c(){n.c(),r=q(),u&&u.c(),s=kt()},m(c,h){a[e].m(c,h),I(c,r,h),u&&u.m(c,h),I(c,s,h),o=!0},p(c,h){let b=e;e=d(c),e===b?a[e].p(c,h):(Me(),L(a[b],1,1,()=>{a[b]=null}),Ae(),n=a[e],n?n.p(c,h):(n=a[e]=l[e](c),n.c()),P(n,1),n.m(r.parentNode,r)),h[0]&6&&(i=c[1]==="edit"&&(!["locationAutocomplete","jobTitleAutocomplete"].includes(c[2].component)||c[2].multiple)),i?u?(u.p(c,h),h[0]&6&&P(u,1)):(u=Dl(c),u.c(),P(u,1),u.m(s.parentNode,s)):u&&(Me(),L(u,1,1,()=>{u=null}),Ae())},i(c){o||(P(n),P(u),o=!0)},o(c){L(n),L(u),o=!1},d(c){c&&(T(r),T(s)),a[e].d(c),u&&u.d(c)}}}function c3(t){let e,n,r,i,s,o=(t[2].label??"Text me updates")+"",l,a,d,u,c,h,b=t[6].clientName?`${t[6].clientName} via`:"",m,v,g,y,$,C,x,A;return{c(){e=k("div"),n=k("button"),r=k("input"),i=q(),s=k("label"),l=$e(o),a=q(),d=k("div"),u=q(),c=k("p"),h=$e(`By checking the box above and submitting this form, you consent to receive automated text messages about
                jobs and your job application(s) from `),m=$e(b),v=$e(` Dalia, and
                agree to our
                `),g=k("a"),g.textContent="Terms",y=$e(`

                and `),$=k("a"),$.textContent="Privacy Policy",C=$e(`. Consent is not a
                condition of employment. Reply STOP to opt out. Reply HELP for help. Standard message and data rates may
                apply. Message frequency may vary.`),f(r,"class","w-5 h-5 text-primary bg-gray-100 border-gray-300 rounded focus:ring-primary !bg-[length:0.7rem_0.55rem]"),f(r,"name","consentCheckbox"),f(r,"type","checkbox"),f(s,"class","ml-2 text-black text-sm font-medium"),f(s,"for","remember-me"),f(n,"class","flex items-center mr-4"),f(d,"class","self-stretch h-[1.50px] bg-zinc-100 rounded-lg"),f(g,"class","text-blue-700 hover:text-blue-900 transition duration-200"),f(g,"href","https://daliajobs.com/about/terms"),f(g,"target","_blank"),f($,"class","text-blue-700 hover:text-blue-900 transition duration-200"),f($,"href","https://daliajobs.com/about/privacy"),f($,"target","_blank"),f(c,"class","text-black text-sm font-normal"),f(e,"class","flex flex-col gap-3")},m(K,M){I(K,e,M),_(e,n),_(n,r),r.checked=t[0],_(n,i),_(n,s),_(s,l),_(e,a),_(e,d),_(e,u),_(e,c),_(c,h),_(c,m),_(c,v),_(c,g),_(c,y),_(c,$),_(c,C),x||(A=[he(r,"change",t[16]),he(r,"change",t[17]),he(n,"click",t[18])],x=!0)},p(K,M){M[0]&1&&(r.checked=K[0]),M[0]&4&&o!==(o=(K[2].label??"Text me updates")+"")&&De(l,o)},i:oe,o:oe,d(K){K&&T(e),x=!1,it(A)}}}function f3(t){let e,n;return{c(){e=k("div"),n=$e(t[4]),f(e,"class","text-black text-sm font-medium")},m(r,i){I(r,e,i),_(e,n)},p(r,i){i[0]&16&&De(n,r[4])},i:oe,o:oe,d(r){r&&T(e)}}}function h3(t){let e,n;return{c(){e=k("div"),n=$e(t[4]),f(e,"class","text-black text-sm font-medium")},m(r,i){I(r,e,i),_(e,n)},p(r,i){i[0]&16&&De(n,r[4])},i:oe,o:oe,d(r){r&&T(e)}}}function p3(t){let e,n,r;function i(o){t[26](o)}let s={class:"input-autocomplete-regular  min-h-10 text-base",componentContainerMergedClass:"gap-1",fetch:t[2].options==null?`${t[6].apiUrl}/api/v2/location/geocode-address?location=[query]&countries=US&types=place,locality`:void 0,labelField:"address",fetchCallback:C3,label:t[4],valueAsObject:!0,theme:"underline",size:"extraCompact",labelTheme:"main",errors:t[5].location,placeholder:t[2].placeholder};return t[3]!==void 0&&(s.value=t[3]),e=new Ys({props:s}),je.push(()=>$n(e,"value",i)),e.$on("blur",t[27]),e.$on("change",t[28]),e.$on("enterKey",t[29]),{c(){Ne(e.$$.fragment)},m(o,l){Te(e,o,l),r=!0},p(o,l){const a={};l[0]&4&&(a.fetch=o[2].options==null?`${o[6].apiUrl}/api/v2/location/geocode-address?location=[query]&countries=US&types=place,locality`:void 0),l[0]&16&&(a.label=o[4]),l[0]&32&&(a.errors=o[5].location),l[0]&4&&(a.placeholder=o[2].placeholder),!n&&l[0]&8&&(n=!0,a.value=o[3],vn(()=>n=!1)),e.$set(a)},i(o){r||(P(e.$$.fragment,o),r=!0)},o(o){L(e.$$.fragment,o),r=!1},d(o){Ie(e,o)}}}function m3(t){let e,n,r;const i=[{class:"input-autocomplete-regular min-h-10 text-sm gap-1"},{componentContainerMergedClass:"gap-1"},{creatable:t[2].creatable},t[2].options?{options:t[2].options}:{},{fetch:t[2].options==null?`${t[6].apiUrl}/job-titles?title=[query]&format=1`:void 0},{valueField:"title"},{fetchCallback:k3},{label:t[4]},{valueAsObject:!0},{theme:"underline"},{multiple:t[2].multiple},{size:"extraCompact"},{labelTheme:"main"},{errors:t[5].job_title},{placeholder:t[2].placeholder}];function s(l){t[22](l)}let o={};for(let l=0;l<i.length;l+=1)o=gt(o,i[l]);return t[3]!==void 0&&(o.value=t[3]),e=new Ys({props:o}),je.push(()=>$n(e,"value",s)),e.$on("blur",t[23]),e.$on("change",t[24]),e.$on("enterKey",t[25]),{c(){Ne(e.$$.fragment)},m(l,a){Te(e,l,a),r=!0},p(l,a){const d=a[0]&116?ri(i,[i[0],i[1],a[0]&4&&{creatable:l[2].creatable},a[0]&4&&Zs(l[2].options?{options:l[2].options}:{}),a[0]&68&&{fetch:l[2].options==null?`${l[6].apiUrl}/job-titles?title=[query]&format=1`:void 0},i[5],i[6],a[0]&16&&{label:l[4]},i[8],i[9],a[0]&4&&{multiple:l[2].multiple},i[11],i[12],a[0]&32&&{errors:l[5].job_title},a[0]&4&&{placeholder:l[2].placeholder}]):{};!n&&a[0]&8&&(n=!0,d.value=l[3],vn(()=>n=!1)),e.$set(d)},i(l){r||(P(e.$$.fragment,l),r=!0)},o(l){L(e.$$.fragment,l),r=!1},d(l){Ie(e,l)}}}function g3(t){return{c:oe,m:oe,p:oe,i:oe,o:oe,d:oe}}function b3(t){let e,n,r;function i(o){t[21](o)}let s={errors:t[5],autofocus:!0,class:"border-b border-neutral-200 min-w-[17rem] min-h-10 text-base",componentContainerMergedClass:"gap-1",fontSize:"base",label:t[4],theme:"underline",type:t[2].type,name:t[2].key,placeholder:t[2].placeholder};return t[3]!==void 0&&(s.value=t[3]),e=new Qs({props:s}),je.push(()=>$n(e,"value",i)),e.$on("blur",t[12]),e.$on("input",t[13]),e.$on("keydown",t[10]),{c(){Ne(e.$$.fragment)},m(o,l){Te(e,o,l),r=!0},p(o,l){const a={};l[0]&32&&(a.errors=o[5]),l[0]&16&&(a.label=o[4]),l[0]&4&&(a.type=o[2].type),l[0]&4&&(a.name=o[2].key),l[0]&4&&(a.placeholder=o[2].placeholder),!n&&l[0]&8&&(n=!0,a.value=o[3],vn(()=>n=!1)),e.$set(a)},i(o){r||(P(e.$$.fragment,o),r=!0)},o(o){L(e.$$.fragment,o),r=!1},d(o){Ie(e,o)}}}function v3(t){var m,v;let e,n,r,i,s,o,l=(t[2].component==="locationAutocomplete"?(m=t[0])==null?void 0:m.address:t[2].component==="jobTitleAutocomplete"?(v=t[0])==null?void 0:v.title:t[0]??"")+"",a,d,u,c,h,b;return u=new Zt({props:{class:"border-0 p-0 px-2 min-h-[2.5rem]",shape:"miniRound",theme:"neutral",$$slots:{default:[$3]},$$scope:{ctx:t}}}),u.$on("click",t[19]),{c(){e=k("button"),n=k("div"),r=k("h6"),i=$e(t[4]),s=q(),o=k("p"),a=$e(l),d=q(),Ne(u.$$.fragment),f(r,"class","text-neutral-400 text-sm font-normal"),f(o,"class","text-black text-sm font-medium "),f(n,"class","flex flex-col gap-1 items-start"),f(e,"class","flex justify-between items-center gap-1")},m(g,y){I(g,e,y),_(e,n),_(n,r),_(r,i),_(n,s),_(n,o),_(o,a),_(e,d),Te(u,e,null),c=!0,h||(b=he(e,"click",t[20]),h=!0)},p(g,y){var C,x;(!c||y[0]&16)&&De(i,g[4]),(!c||y[0]&5)&&l!==(l=(g[2].component==="locationAutocomplete"?(C=g[0])==null?void 0:C.address:g[2].component==="jobTitleAutocomplete"?(x=g[0])==null?void 0:x.title:g[0]??"")+"")&&De(a,l);const $={};y[1]&128&&($.$$scope={dirty:y,ctx:g}),u.$set($)},i(g){c||(P(u.$$.fragment,g),c=!0)},o(g){L(u.$$.fragment,g),c=!1},d(g){g&&T(e),Ie(u),h=!1,b()}}}function $3(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M20.9441 5.28406L18.7161 3.05603C18.1951 2.53603 17.5441 2.249 16.7681 2.25C16.0321 2.251 15.341 2.53906 14.823 3.06006L2.46899 15.471C2.32799 15.6119 2.25 15.802 2.25 16V21C2.25 21.414 2.586 21.75 3 21.75H8C8.198 21.75 8.38905 21.671 8.52905 21.532L20.9399 9.177C21.4609 8.658 21.749 7.96706 21.75 7.23206C21.751 6.49606 21.4651 5.80406 20.9441 5.28406ZM7.68994 20.25H3.75V16.3101L12.7429 7.276L16.7251 11.257L7.68994 20.25ZM19.8821 8.11402L17.7881 10.199L13.801 6.21302L15.886 4.11804C16.122 3.88104 16.436 3.751 16.771 3.75H16.772C17.106 3.75 17.42 3.87997 17.657 4.11597L19.885 6.344C20.121 6.581 20.251 6.89498 20.251 7.22998C20.25 7.56398 20.1191 7.87802 19.8821 8.11402Z"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","24"),f(e,"viewBox","0 0 24 24"),f(e,"fill","none"),f(e,"class","fill-primary")},m(r,i){I(r,e,i),_(e,n)},p:oe,d(r){r&&T(e)}}}function Dl(t){let e,n,r,i,s;return n=new Zt({props:{theme:"neutral",class:"justify-center min-w-[5.5rem] ripple-bg-gray-200 text-black rounded-full h-fit px-4 py-2",$$slots:{default:[_3]},$$scope:{ctx:t}}}),n.$on("click",t[30]),i=new Zt({props:{disabled:t[5][t[2].key]!=null,theme:"primary",class:"justify-center min-w-[5.5rem]  rounded-full h-fit px-4 py-2",$$slots:{default:[y3]},$$scope:{ctx:t}}}),i.$on("click",t[31]),{c(){e=k("div"),Ne(n.$$.fragment),r=q(),Ne(i.$$.fragment),f(e,"class","flex justify-end gap-2")},m(o,l){I(o,e,l),Te(n,e,null),_(e,r),Te(i,e,null),s=!0},p(o,l){const a={};l[1]&128&&(a.$$scope={dirty:l,ctx:o}),n.$set(a);const d={};l[0]&36&&(d.disabled=o[5][o[2].key]!=null),l[1]&128&&(d.$$scope={dirty:l,ctx:o}),i.$set(d)},i(o){s||(P(n.$$.fragment,o),P(i.$$.fragment,o),s=!0)},o(o){L(n.$$.fragment,o),L(i.$$.fragment,o),s=!1},d(o){o&&T(e),Ie(n),Ie(i)}}}function _3(t){let e;return{c(){e=$e("Cancel")},m(n,r){I(n,e,r)},d(n){n&&T(e)}}}function y3(t){let e;return{c(){e=$e("Save")},m(n,r){I(n,e,r)},d(n){n&&T(e)}}}function w3(t){let e,n,r,i;const s=[f3,c3,u3],o=[];function l(a,d){return a[2].component==null?0:a[2].component==="consentCheckbox"?1:2}return n=l(t),r=o[n]=s[n](t),{c(){e=k("div"),r.c(),f(e,"class","flex flex-col w-fit min-w-[90%] gap-2 rounded-xl border border-neutral-200 px-4 py-2.5 text-black text-sm font-medium focus-within:ring-1 focus-within:ring-primary")},m(a,d){I(a,e,d),o[n].m(e,null),i=!0},p(a,d){let u=n;n=l(a),n===u?o[n].p(a,d):(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae(),r=o[n],r?r.p(a,d):(r=o[n]=s[n](a),r.c()),P(r,1),r.m(e,null))},i(a){i||(P(r),i=!0)},o(a){L(r),i=!1},d(a){a&&T(e),o[n].d()}}}const k3=t=>t.data,C3=t=>t.data;function S3(t,e,n){let r,i,s;const o=Rt(),l=oi.context,a=rd.context,d=id.context;Ye(t,d,N=>n(5,s=N));const u=eo.context;Ye(t,u,N=>n(32,i=N));let{step:c}=e,{value:h=c.defaultValue??null}=e,{mode:b="show"}=e,{isNewUser:m=!1}=e,v=h;function g(){n(1,b="edit"),n(3,v=h)}function y(){Q(),console.log("submitting",h,v),n(0,h=v),o("submit",{value:h,step:c})}function $(N){(N==null?void 0:N.key)==="Enter"&&x()&&C()}function C(){b==="edit"?(n(1,b="show"),n(0,h=v)):y()}function x(N=!0){const z=a.pick({[c.key??""]:!0}).safeParse({[c.key??""]:v});return z.success?K():A(z.error,N),z.success}function A(N,w){const z=N==null?void 0:N.flatten().fieldErrors[c.key??""];d.update(de=>{const we={...de};return w?we[c.key??""]=z:we.$=z,we})}function K(){d.update(N=>{const w={...N};return delete w[c.key??""],delete w.$,w})}function M(){$t().then(()=>{x()&&y()})}function Q(){i.onClick.delete(M)}bn(()=>{b==="new"&&(x(!1),i.onClick.add(M))}),Fs(()=>{Q()});function H(){h=this.checked,n(0,h)}const Z=()=>n(3,v=h),D=()=>{n(0,h=!h),n(3,v=h)},re=()=>{g()},j=()=>{g()};function S(N){v=N,n(3,v)}function B(N){v=N,n(3,v)}const X=()=>x(),G=N=>{N.detail==null?x():(K(),c.multiple||C())},W=N=>$(N.detail);function ee(N){v=N,n(3,v)}const ce=()=>x(),ie=N=>{N.detail==null?x():(K(),c.multiple||C())},te=N=>$(N.detail),Ee=()=>{n(1,b="show"),K()},E=()=>{x()&&C()};return t.$$set=N=>{"step"in N&&n(2,c=N.step),"value"in N&&n(0,h=N.value),"mode"in N&&n(1,b=N.mode),"isNewUser"in N&&n(14,m=N.isNewUser)},t.$$.update=()=>{t.$$.dirty[0]&16388&&n(4,r=m?c.label:c.existingUserLabel??c.label)},[h,b,c,v,r,s,l,d,u,g,$,C,x,K,m,y,H,Z,D,re,j,S,B,X,G,W,ee,ce,ie,te,Ee,E]}class no extends tt{constructor(e){super(),Qe(this,e,S3,w3,qe,{step:2,value:0,mode:1,isNewUser:14,submit:15},d3,[-1,-1])}get step(){return this.$$.ctx[2]}set step(e){this.$$set({step:e}),O()}get value(){return this.$$.ctx[0]}set value(e){this.$$set({value:e}),O()}get mode(){return this.$$.ctx[1]}set mode(e){this.$$set({mode:e}),O()}get isNewUser(){return this.$$.ctx[14]}set isNewUser(e){this.$$set({isNewUser:e}),O()}get submit(){return this.$$.ctx[15]}}et(no,{step:{},value:{},mode:{},isNewUser:{type:"Boolean"}},[],["submit"],!0);function Pn(t,{delay:e=0,duration:n=400,easing:r=Qr}={}){const i=+getComputedStyle(t).opacity;return{delay:e,duration:n,easing:r,css:s=>`opacity: ${s*i}`}}function Mn(t,{delay:e=0,duration:n=400,easing:r=Xa,x:i=0,y:s=0,opacity:o=0}={}){const l=getComputedStyle(t),a=+l.opacity,d=l.transform==="none"?"":l.transform,u=a*(1-o),[c,h]=bo(i),[b,m]=bo(s);return{delay:e,duration:n,easing:r,css:(v,g)=>`
			transform: ${d} translate(${(1-v)*c}${h}, ${(1-v)*b}${m});
			opacity: ${a-u*g}`}}function Bl(t,e,n){const r=t.slice();return r[26]=e[n],r[27]=e,r[28]=n,r}function x3(t){let e,n;return e=new no({props:{isNewUser:t[2],mode:t[26].visibilityMode,step:t[26]}}),e.$on("submit",t[15]),{c(){Ne(e.$$.fragment)},m(r,i){Te(e,r,i),n=!0},p(r,i){const s={};i&4&&(s.isNewUser=r[2]),i&16&&(s.mode=r[26].visibilityMode),i&16&&(s.step=r[26]),e.$set(s)},i(r){n||(P(e.$$.fragment,r),n=!0)},o(r){L(e.$$.fragment,r),n=!1},d(r){Ie(e,r)}}}function E3(t){let e,n,r;function i(o){t[13](o,t[26])}let s={isNewUser:t[2],mode:t[26].visibilityMode,step:t[26]};return t[3][t[26].key]!==void 0&&(s.value=t[3][t[26].key]),e=new no({props:s}),je.push(()=>$n(e,"value",i)),e.$on("submit",t[14]),{c(){Ne(e.$$.fragment)},m(o,l){Te(e,o,l),r=!0},p(o,l){t=o;const a={};l&4&&(a.isNewUser=t[2]),l&16&&(a.mode=t[26].visibilityMode),l&16&&(a.step=t[26]),!n&&l&24&&(n=!0,a.value=t[3][t[26].key],vn(()=>n=!1)),e.$set(a)},i(o){r||(P(e.$$.fragment,o),r=!0)},o(o){L(e.$$.fragment,o),r=!1},d(o){Ie(e,o)}}}function Zl(t){let e,n,r,i,s;const o=[E3,x3],l=[];function a(d,u){return d[26].key?0:1}return n=a(t),r=l[n]=o[n](t),{c(){e=k("div"),r.c(),f(e,"class","")},m(d,u){I(d,e,u),l[n].m(e,null),s=!0},p(d,u){let c=n;n=a(d),n===c?l[n].p(d,u):(Me(),L(l[c],1,1,()=>{l[c]=null}),Ae(),r=l[n],r?r.p(d,u):(r=l[n]=o[n](d),r.c()),P(r,1),r.m(e,null))},i(d){s||(P(r),d&&(i||bt(()=>{i=ni(e,Mn,{y:50,duration:500}),i.start()})),s=!0)},o(d){L(r),s=!1},d(d){d&&T(e),l[n].d()}}}function T3(t){let e,n,r,i,s=nt(t[4]),o=[];for(let a=0;a<s.length;a+=1)o[a]=Zl(Bl(t,s,a));const l=a=>L(o[a],1,1,()=>{o[a]=null});return{c(){e=k("div");for(let a=0;a<o.length;a+=1)o[a].c();n=q(),r=k("div"),f(e,"class","space-y-3 min-h-[45vh]")},m(a,d){I(a,e,d);for(let u=0;u<o.length;u+=1)o[u]&&o[u].m(e,null);_(e,n),_(e,r),t[16](r),i=!0},p(a,[d]){if(d&29){s=nt(a[4]);let u;for(u=0;u<s.length;u+=1){const c=Bl(a,s,u);o[u]?(o[u].p(c,d),P(o[u],1)):(o[u]=Zl(c),o[u].c(),P(o[u],1),o[u].m(e,n))}for(Me(),u=s.length;u<o.length;u+=1)l(u);Ae()}},i(a){if(!i){for(let d=0;d<s.length;d+=1)P(o[d]);i=!0}},o(a){o=o.filter(Boolean);for(let d=0;d<o.length;d+=1)L(o[d]);i=!1},d(a){a&&T(e),ei(o,a),t[16](null)}}}function I3(t,e,n){let r,i,s,o,l,a,{userIdentification:d=""}=e;const u=Rt(),c=Wi.context,h=nd.context;Ye(t,h,j=>n(12,a=j));const b=li.context,m=eo.context;Ye(t,m,j=>n(18,i=j));const v=qi.context;Ye(t,v,j=>n(19,s=j));const g=to.context,y=At({first_name:(a==null?void 0:a.first_name)??"",last_name:(a==null?void 0:a.last_name)??"",email:(a==null?void 0:a.email)??"",phone:(a==null?void 0:a.phone)??"",sms_optin:(a==null?void 0:a.sms_optin)??!1,job_title:(a==null?void 0:a.job_title)??{title:""},location:(a==null?void 0:a.location)??{address:""}});Ye(t,y,j=>n(3,o=j));const $=b.stages.chat.steps,C=At([]);Ye(t,C,j=>n(4,l=j));let x=-1,A=null;async function K(){await $t(),A==null||A.scrollIntoView({behavior:"smooth",block:"end"})}function M(){if(x<$.length-1){const j=l[x];j.visibilityMode="show",x+=1,C.update(S=>{const B=$[x];return B.visibilityMode="new",S.push(B),S}),K(),x===$.length-1&&We(m,i.label="Submit",i)}else Q()}async function Q(){await $t(),We(v,s=!0,s),We(m,i.show=!1,i);try{const j=await c.onSignup({...o,phone:d});j.success?u("finish",{...j}):(We(m,i.show=!0,i),g("Unable process your data. Please try again.",3e3))}catch(j){We(m,i.show=!0,i),console.error(j),g("An error ouccured. Please try again later.",3e3)}finally{We(v,s=!1,s)}}bn(()=>{if(We(m,i.show=!0,i),r){for(const j of $)if(C.update(S=>(S.push(j),S)),x+=1,j.component!=null){j.visibilityMode="new";break}K()}else C.set($.map(j=>(j.visibilityMode="show",j))),We(m,i.label="Submit",i),i.onClick.add(Q)});function H(j,S){t.$$.not_equal(o[S.key],j)&&(o[S.key]=j,y.set(o))}const Z=()=>M(),D=()=>M();function re(j){je[j?"unshift":"push"](()=>{A=j,n(1,A)})}return t.$$set=j=>{"userIdentification"in j&&n(10,d=j.userIdentification)},t.$$.update=()=>{t.$$.dirty&4096&&n(2,r=a==null)},[M,A,r,o,l,h,m,v,y,C,d,Q,a,H,Z,D,re]}class od extends tt{constructor(e){super(),Qe(this,e,I3,T3,qe,{userIdentification:10,nextStep:0,submit:11})}get userIdentification(){return this.$$.ctx[10]}set userIdentification(e){this.$$set({userIdentification:e}),O()}get nextStep(){return this.$$.ctx[0]}get submit(){return this.$$.ctx[11]}}et(od,{userIdentification:{}},[],["nextStep","submit"],!0);function O3(t){let e;return{c(){e=k("span"),e.textContent="Next",f(e,"class","font-normal text-center")},m(n,r){I(n,e,r)},p:oe,d(n){n&&T(e)}}}function P3(t){let e,n,r,i,s,o,l,a,d,u,c,h,b,m,v,g;function y(C){t[9](C)}let $={class:"bg-neutral-50",errors:t[1],autocomplete:"tel",label:"Mobile Number",name:"phone",placeholder:"Ex: +1 XXX XXX XXXX",theme:"alt",labelTheme:"main",type:"tel"};return t[0]!==void 0&&($.value=t[0]),u=new Qs({props:$}),je.push(()=>$n(u,"value",y)),u.$on("blur",t[10]),u.$on("input",t[7]),b=new Zt({props:{type:"submit",disabled:t[2]||t[0]==="",class:"px-10 py-3 rounded-xl text-center justify-center",theme:"primary",shape:"extraRound",fontSize:"base",$$slots:{default:[O3]},$$scope:{ctx:t}}}),{c(){e=k("div"),n=k("form"),r=k("div"),i=k("div"),s=k("h1"),s.textContent=`${t[3].welcomeTitle??"Connect to Apply Faster"}`,o=q(),l=k("p"),l.textContent=`${t[3].welcomeSubtitle??"Tell us what you're looking for and we will find your perfect match"}`,a=q(),d=k("div"),Ne(u.$$.fragment),h=q(),Ne(b.$$.fragment),f(s,"class","text-black text-lg font-semibold"),f(l,"class","text-neutral-500 text-sm font-normal"),f(i,"class","text-center flex flex-col"),f(d,"class","flex flex-col gap-4"),f(r,"class","flex flex-col gap-8"),f(n,"class","h-full flex flex-col justify-between gap-8"),f(e,"class","h-full")},m(C,x){I(C,e,x),_(e,n),_(n,r),_(r,i),_(i,s),_(i,o),_(i,l),_(r,a),_(r,d),Te(u,d,null),_(n,h),Te(b,n,null),m=!0,v||(g=he(n,"submit",xi(t[8])),v=!0)},p(C,[x]){const A={};x&2&&(A.errors=C[1]),!c&&x&1&&(c=!0,A.value=C[0],vn(()=>c=!1)),u.$set(A);const K={};x&5&&(K.disabled=C[2]||C[0]===""),x&65536&&(K.$$scope={dirty:x,ctx:C}),b.$set(K)},i(C){m||(P(u.$$.fragment,C),P(b.$$.fragment,C),m=!0)},o(C){L(u.$$.fragment,C),L(b.$$.fragment,C),m=!1},d(C){C&&T(e),Ie(u),Ie(b),v=!1,g()}}}function M3(t,e,n){let r,i;const s=Rt(),o=li.context.stages.mfa;oi.context;const l=At({});Ye(t,l,$=>n(1,r=$));const a=Ja(l,$=>Object.keys($).length>0);Ye(t,a,$=>n(2,i=$));let{userIdentification:d=""}=e,u;function c($=!0){const x=Sn().and(U2).safeParse(d);return x.success?(b(),!0):($&&m(x.error),!1)}function h(){b(),!(o.removeFocusFromPhoneInputAfter==null||o.removeFocusFromPhoneInputAfter===0)&&(clearTimeout(u),u=setTimeout(()=>{var C;c(!1)&&((C=document.activeElement)==null||C.blur())},o.removeFocusFromPhoneInputAfter))}function b(){l.set({})}function m($){const C=$==null?void 0:$.flatten().formErrors;l.set({phone:C})}function v(){c()&&s("submit")}function g($){d=$,n(0,d)}const y=()=>c();return t.$$set=$=>{"userIdentification"in $&&n(0,d=$.userIdentification)},[d,r,i,o,l,a,c,h,v,g,y]}class ld extends tt{constructor(e){super(),Qe(this,e,M3,P3,qe,{userIdentification:0})}get userIdentification(){return this.$$.ctx[0]}set userIdentification(e){this.$$set({userIdentification:e}),O()}}et(ld,{userIdentification:{}},[],[],!0);function Hl(t,e,n){const r=t.slice();return r[4]=e[n],r}function A3(t){let e,n,r,i,s,o;return{c(){e=ke("svg"),n=ke("path"),r=ke("path"),i=ke("path"),s=ke("path"),o=ke("path"),f(n,"fill-rule","evenodd"),f(n,"clip-rule","evenodd"),f(n,"d","M2.45001 21.65L3.80001 16.75C2.95001 15.3 2.50001 13.65 2.50001 12C2.50001 6.75 6.75001 2.5 12 2.5C14.55 2.5 16.9 3.5 18.7 5.3C20.5 7.1 21.5 9.45 21.5 12C21.5 17.25 17.25 21.5 12 21.5C10.4 21.5 8.85001 21.1 7.45001 20.35L2.45001 21.65Z"),f(n,"fill","white"),f(r,"fill-rule","evenodd"),f(r,"clip-rule","evenodd"),f(r,"d","M2.45 21.9C2.4 21.9 2.3 21.85 2.25 21.85C2.2 21.8 2.15 21.7 2.2 21.6L3.5 16.75C2.7 15.3 2.25 13.65 2.25 11.95C2.25 6.6 6.65 2.25 12 2.25C14.6 2.25 17.05 3.25 18.9 5.1C20.75 6.95 21.75 9.4 21.75 12C21.75 17.35 17.4 21.75 12 21.75C10.4 21.75 8.85 21.35 7.45 20.6L2.5 21.9H2.45Z"),f(r,"fill","white"),f(i,"fill-rule","evenodd"),f(i,"clip-rule","evenodd"),f(i,"d","M12 2.5C14.55 2.5 16.9 3.5 18.7 5.3C20.5 7.1 21.5 9.45 21.5 12C21.5 17.25 17.25 21.5 12 21.5C10.4 21.5 8.84999 21.1 7.44999 20.35L2.44999 21.65L3.79999 16.75C2.94999 15.3 2.49999 13.65 2.49999 12C2.49999 6.75 6.74999 2.5 12 2.5ZM12 2C6.49999 2 1.99999 6.5 1.99999 12C1.99999 13.7 2.39999 15.35 3.24999 16.8L1.94999 21.5C1.89999 21.65 1.94999 21.85 2.09999 22C2.19999 22.1 2.29999 22.15 2.44999 22.15C2.49999 22.15 2.54999 22.15 2.59999 22.15L7.44999 20.9C8.84999 21.65 10.45 22 12.05 22C17.55 22 22.05 17.5 22.05 12C22.05 9.35 21 6.8 19.15 4.95C17.2 3.05 14.7 2 12 2Z"),f(i,"fill","#CFD8DC"),f(s,"fill-rule","evenodd"),f(s,"clip-rule","evenodd"),f(s,"d","M17.6 6.39998C16.1 4.89998 14.15 4.09998 12 4.09998C7.65001 4.09998 4.10001 7.64998 4.10001 12C4.10001 13.5 4.50001 14.95 5.30001 16.2L5.50001 16.5L4.70001 19.4L7.70001 18.6L8.00001 18.75C9.20001 19.45 10.6 19.85 12 19.85C16.35 19.85 19.9 16.3 19.9 11.95C19.9 9.89998 19.1 7.89998 17.6 6.39998Z"),f(s,"fill","#40C351"),f(o,"fill-rule","evenodd"),f(o,"clip-rule","evenodd"),f(o,"d","M9.64999 7.99998C9.44999 7.59998 9.29999 7.59998 9.09999 7.59998C8.94999 7.59998 8.79999 7.59998 8.64999 7.59998C8.49999 7.59998 8.24999 7.64998 7.99999 7.89998C7.79999 8.14998 7.14999 8.69998 7.14999 9.89998C7.14999 11.1 7.99999 12.2 8.09999 12.35C8.19999 12.5 9.74999 15 12.15 15.95C14.15 16.75 14.55 16.6 15 16.55C15.45 16.5 16.4 16 16.6 15.4C16.8 14.85 16.8 14.35 16.75 14.25C16.7 14.15 16.55 14.1 16.3 13.95C16.05 13.8 14.9 13.25 14.7 13.2C14.5 13.1 14.3 13.1 14.15 13.3C14 13.55 13.55 14.05 13.4 14.25C13.25 14.4 13.1 14.45 12.9 14.3C12.65 14.2 11.9 13.95 11 13.1C10.3 12.45 9.79999 11.7 9.69999 11.45C9.54999 11.2 9.69999 11.1 9.79999 10.95C9.89999 10.85 10.05 10.65 10.15 10.55C10.25 10.4 10.3 10.3 10.4 10.15C10.5 9.99998 10.45 9.84998 10.4 9.74998C10.3 9.64998 9.84999 8.49998 9.64999 7.99998Z"),f(o,"fill","white"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","24"),f(e,"viewBox","0 0 24 24"),f(e,"fill","none")},m(l,a){I(l,e,a),_(e,n),_(e,r),_(e,i),_(e,s),_(e,o)},d(l){l&&T(e)}}}function N3(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M16.5521 21.752C16.0931 21.752 15.6311 21.69 15.1751 21.565C9.01111 19.873 4.12909 14.995 2.43609 8.83402C2.05109 7.43302 2.26204 5.97301 3.03204 4.72501C3.80504 3.47101 5.0761 2.58701 6.5191 2.29801C7.4721 2.10701 8.4281 2.53301 8.9151 3.35501L10.4781 5.99399C11.2371 7.27599 10.86 8.92799 9.61896 9.75299L8.4881 10.505C9.5451 12.676 11.3229 14.458 13.4839 15.514L14.2462 14.377C15.0752 13.138 16.7281 12.767 18.0091 13.53L20.6522 15.106C21.4702 15.594 21.8941 16.548 21.7071 17.481C21.4191 18.924 20.5341 20.195 19.2811 20.968C18.4391 21.487 17.5021 21.752 16.5521 21.752ZM6.97809 3.75C6.92909 3.75 6.87911 3.75502 6.83111 3.76502C5.77711 3.97602 4.86512 4.611 4.31012 5.512C3.76112 6.402 3.61009 7.44101 3.88409 8.43601C5.43709 14.09 9.91608 18.566 15.5721 20.118C16.5671 20.391 17.605 20.239 18.493 19.691C19.393 19.136 20.0291 18.222 20.2361 17.186C20.2981 16.875 20.1571 16.556 19.8841 16.394L17.241 14.818C16.643 14.463 15.876 14.637 15.492 15.212L14.377 16.877C14.177 17.175 13.7911 17.289 13.4651 17.151C10.5021 15.913 8.09213 13.496 6.85113 10.522C6.71313 10.19 6.82999 9.80801 7.12799 9.60901L8.78912 8.504C9.36512 8.121 9.54007 7.35401 9.18707 6.75901L7.62408 4.12C7.48708 3.887 7.23909 3.75 6.97809 3.75ZM14.869 14.794H14.879H14.869ZM17.7501 10C17.7501 7.932 16.0671 6.25 14.0001 6.25C13.5861 6.25 13.2501 6.586 13.2501 7C13.2501 7.414 13.5861 7.75 14.0001 7.75C15.2401 7.75 16.2501 8.759 16.2501 10C16.2501 10.414 16.5861 10.75 17.0001 10.75C17.4141 10.75 17.7501 10.414 17.7501 10ZM20.7501 10C20.7501 6.278 17.7221 3.25 14.0001 3.25C13.5861 3.25 13.2501 3.586 13.2501 4C13.2501 4.414 13.5861 4.75 14.0001 4.75C16.8951 4.75 19.2501 7.105 19.2501 10C19.2501 10.414 19.5861 10.75 20.0001 10.75C20.4141 10.75 20.7501 10.414 20.7501 10Z"),f(e,"class","fill-primary"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","24"),f(e,"viewBox","0 0 24 24"),f(e,"fill","none")},m(r,i){I(r,e,i),_(e,n)},d(r){r&&T(e)}}}function z3(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M3 21.75C2.903 21.75 2.80589 21.731 2.71289 21.693C2.43289 21.577 2.25 21.303 2.25 21V6C2.25 3.582 3.582 2.25 6 2.25H18C20.418 2.25 21.75 3.582 21.75 6V15C21.75 17.418 20.418 18.75 18 18.75H6.31104L3.53101 21.53C3.38701 21.674 3.195 21.75 3 21.75ZM6 3.75C4.423 3.75 3.75 4.423 3.75 6V19.189L5.46997 17.469C5.61097 17.328 5.801 17.249 6 17.249H18C19.577 17.249 20.25 16.576 20.25 14.999V5.99902C20.25 4.42202 19.577 3.74902 18 3.74902H6V3.75ZM16.75 8.5C16.75 8.086 16.414 7.75 16 7.75H8C7.586 7.75 7.25 8.086 7.25 8.5C7.25 8.914 7.586 9.25 8 9.25H16C16.414 9.25 16.75 8.914 16.75 8.5ZM13.75 12.5C13.75 12.086 13.414 11.75 13 11.75H8C7.586 11.75 7.25 12.086 7.25 12.5C7.25 12.914 7.586 13.25 8 13.25H13C13.414 13.25 13.75 12.914 13.75 12.5Z"),f(e,"class","fill-primary"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","24"),f(e,"viewBox","0 0 24 24"),f(e,"fill","none")},m(r,i){I(r,e,i),_(e,n)},d(r){r&&T(e)}}}function L3(t){let e,n,r,i,s,o,l;function a(c,h){if(c[4].name==="sms")return z3;if(c[4].name==="voice")return N3;if(c[4].name==="whatsapp")return A3}let d=a(t),u=d&&d(t);return{c(){e=k("div"),u&&u.c(),n=q(),r=k("span"),r.textContent=`${t[4].label}`,i=q(),s=ke("svg"),o=ke("path"),l=q(),f(r,"class","font-normal"),f(e,"class","flex flex-row gap-2"),f(o,"d","M10 16.75C9.80802 16.75 9.61599 16.6771 9.46999 16.5301C9.17699 16.2371 9.17699 15.762 9.46999 15.469L12.94 11.999L9.46999 8.52908C9.17699 8.23608 9.17699 7.76104 9.46999 7.46804C9.76299 7.17504 10.238 7.17504 10.531 7.46804L14.531 11.468C14.824 11.761 14.824 12.2361 14.531 12.5291L10.531 16.5291C10.384 16.6771 10.192 16.75 10 16.75Z"),f(s,"class","fill-primary"),f(s,"xmlns","http://www.w3.org/2000/svg"),f(s,"width","24"),f(s,"height","24"),f(s,"viewBox","0 0 24 24"),f(s,"fill","currentColor")},m(c,h){I(c,e,h),u&&u.m(e,null),_(e,n),_(e,r),I(c,i,h),I(c,s,h),_(s,o),I(c,l,h)},p:oe,d(c){c&&(T(e),T(i),T(s),T(l)),u&&u.d()}}}function Vl(t){let e,n;function r(){return t[3](t[4])}return e=new Zt({props:{class:"p-4 rounded-xl text-black justify-between",theme:"neutral",shape:"extraRound",fontSize:"base",$$slots:{default:[L3]},$$scope:{ctx:t}}}),e.$on("click",r),{c(){Ne(e.$$.fragment)},m(i,s){Te(e,i,s),n=!0},p(i,s){t=i;const o={};s&128&&(o.$$scope={dirty:s,ctx:t}),e.$set(o)},i(i){n||(P(e.$$.fragment,i),n=!0)},o(i){L(e.$$.fragment,i),n=!1},d(i){Ie(e,i)}}}function F3(t){let e,n,r,i,s,o=nt(t[0]),l=[];for(let d=0;d<o.length;d+=1)l[d]=Vl(Hl(t,o,d));const a=d=>L(l[d],1,1,()=>{l[d]=null});return{c(){e=k("div"),n=k("div"),n.innerHTML=`<h1 class="text-black text-lg font-semibold">Verify Your Identity</h1> <p class="text-neutral-500 text-sm font-normal">Please select the method that you want to receive the
            verification code on it</p>`,r=q(),i=k("div");for(let d=0;d<l.length;d+=1)l[d].c();f(n,"class","text-center flex flex-col"),f(i,"class","flex flex-col gap-4"),f(e,"class","flex flex-col gap-8")},m(d,u){I(d,e,u),_(e,n),_(e,r),_(e,i);for(let c=0;c<l.length;c+=1)l[c]&&l[c].m(i,null);s=!0},p(d,[u]){if(u&3){o=nt(d[0]);let c;for(c=0;c<o.length;c+=1){const h=Hl(d,o,c);l[c]?(l[c].p(h,u),P(l[c],1)):(l[c]=Vl(h),l[c].c(),P(l[c],1),l[c].m(i,null))}for(Me(),c=o.length;c<l.length;c+=1)a(c);Ae()}},i(d){if(!s){for(let u=0;u<o.length;u+=1)P(l[u]);s=!0}},o(d){l=l.filter(Boolean);for(let u=0;u<l.length;u+=1)L(l[u]);s=!1},d(d){d&&T(e),ei(l,d)}}}function R3(t,e,n){let{supportedMethods:r=["sms","voice","whatsapp"]}=e;const i=[{name:"sms",label:"SMS"},{name:"voice",label:"Call"},{name:"whatsapp",label:"WhatsApp"}].filter(l=>r.includes(l.name)),s=Rt(),o=l=>s("select",l.name);return t.$$set=l=>{"supportedMethods"in l&&n(2,r=l.supportedMethods)},[i,s,r,o]}class ad extends tt{constructor(e){super(),Qe(this,e,R3,F3,qe,{supportedMethods:2})}get supportedMethods(){return this.$$.ctx[2]}set supportedMethods(e){this.$$set({supportedMethods:e}),O()}}et(ad,{supportedMethods:{}},[],[],!0);function Ul(t,e,n){const r=t.slice();return r[27]=e[n],r[28]=e,r[29]=n,r}function Gl(t){let e,n,r,i,s,o=t[27],l,a;const d=()=>t[17](e,o),u=()=>t[17](null,o);function c(...g){return t[18](t[27],...g)}function h(...g){return t[19](t[27],...g)}function b(...g){return t[20](t[27],...g)}function m(...g){return t[21](t[27],...g)}function v(...g){return t[22](t[27],...g)}return{c(){e=k("input"),f(e,"class",n="w-16 text-center bg-transparent outline-none focus:ring-0 border-none 1leading-8 "+(t[0]?"text-red-500":"text-black")+" text-base font-semibold placeholder-neutral-300"),f(e,"type","text"),f(e,"inputmode","numeric"),f(e,"pattern","[0-9]*"),f(e,"maxlength","1"),f(e,"placeholder","—"),f(e,"aria-label",r=`Digit ${t[27]+1}`),e.disabled=t[3],f(e,"autocomplete",i=t[27]===0?"one-time-code":"off"),e.value=s=t[6][t[27]]},m(g,y){I(g,e,y),d(),l||(a=[he(e,"beforeinput",c),he(e,"input",h),he(e,"keydown",b),he(e,"paste",m),he(e,"focus",v)],l=!0)},p(g,y){t=g,y&1&&n!==(n="w-16 text-center bg-transparent outline-none focus:ring-0 border-none 1leading-8 "+(t[0]?"text-red-500":"text-black")+" text-base font-semibold placeholder-neutral-300")&&f(e,"class",n),y&2&&r!==(r=`Digit ${t[27]+1}`)&&f(e,"aria-label",r),y&8&&(e.disabled=t[3]),y&2&&i!==(i=t[27]===0?"one-time-code":"off")&&f(e,"autocomplete",i),y&66&&s!==(s=t[6][t[27]])&&e.value!==s&&(e.value=s),o!==t[27]&&(u(),o=t[27],d())},d(g){g&&T(e),u(),l=!1,it(a)}}}function Wl(t){let e;return{c(){e=k("p"),e.textContent="Wrong code, please try again",f(e,"class","text-red-500 text-base font-normal text-center")},m(n,r){I(n,e,r)},d(n){n&&T(e)}}}function ql(t){let e,n,r;return{c(){e=$e("("),n=$e(t[2]),r=$e("s)")},m(i,s){I(i,e,s),I(i,n,s),I(i,r,s)},p(i,s){s&4&&De(n,i[2])},d(i){i&&(T(e),T(n),T(r))}}}function Kl(t){let e,n;return{c(){e=k("img"),Yn(e.src,n=Vs)||f(e,"src",n),f(e,"alt","Loading..."),f(e,"class","mx-auto w-14")},m(r,i){I(r,e,i)},d(r){r&&T(e)}}}function Jl(t){let e,n,r;return{c(){e=k("button"),e.textContent="Try different method",f(e,"class","text-primary font-medium hover:underline hover:text-primary/75")},m(i,s){I(i,e,s),n||(r=he(e,"click",t[24]),n=!0)},p:oe,d(i){i&&T(e),n=!1,r()}}}function j3(t){let e,n,r,i,s,o,l,a,d,u,c,h,b,m,v,g,y,$,C,x,A,K,M,Q,H,Z,D,re,j,S,B,X=nt(Array.from({length:t[1]},Xl)),G=[];for(let te=0;te<X.length;te+=1)G[te]=Gl(Ul(t,X,te));let W=t[0]&&Wl(),ee=t[8]&&ql(t),ce=t[3]&&Kl(),ie=t[4]&&Jl(t);return{c(){e=k("div"),n=k("div"),r=k("div"),i=k("div"),s=k("h1"),s.textContent="Verify Your Identity",o=q(),l=k("p"),l.textContent="Please enter the verification code for",a=q(),d=k("div"),u=k("div"),c=ke("svg"),h=ke("path"),b=q(),m=k("p"),v=$e(t[5]),g=q(),y=k("button"),y.textContent="Change",$=q(),C=k("div"),x=k("div"),A=k("div");for(let te=0;te<G.length;te+=1)G[te].c();M=q(),W&&W.c(),Q=q(),H=k("button"),Z=$e(`Resend Code
                `),ee&&ee.c(),re=q(),ce&&ce.c(),j=q(),ie&&ie.c(),f(s,"class","text-black text-lg font-semibold"),f(l,"class","text-neutral-500 text-sm font-normal"),f(h,"d","M16 21.75H8C5.582 21.75 4.25 20.418 4.25 18V6C4.25 3.582 5.582 2.25 8 2.25H16C18.418 2.25 19.75 3.582 19.75 6V18C19.75 20.418 18.418 21.75 16 21.75ZM8 3.75C6.423 3.75 5.75 4.423 5.75 6V18C5.75 19.577 6.423 20.25 8 20.25H16C17.577 20.25 18.25 19.577 18.25 18V6C18.25 4.423 17.577 3.75 16 3.75H8ZM14.25 6C14.25 5.586 13.914 5.25 13.5 5.25H10.5C10.086 5.25 9.75 5.586 9.75 6C9.75 6.414 10.086 6.75 10.5 6.75H13.5C13.914 6.75 14.25 6.414 14.25 6ZM12 17C11.448 17 11 17.448 11 18C11 18.552 11.448 19 12 19C12.552 19 13 18.552 13 18C13 17.448 12.552 17 12 17Z"),f(c,"xmlns","http://www.w3.org/2000/svg"),f(c,"width","24"),f(c,"height","24"),f(c,"viewBox","0 0 24 24"),f(c,"class","fill-primary"),f(m,"class","text-black text-base font-semibold"),f(u,"class","flex items-center gap-3"),f(y,"class","text-primary font-semibold text-base hover:underline hover:text-primary/75"),f(d,"class","flex justify-between items-center bg-primary/10 rounded-xl p-3 gap-2 mt-2"),f(i,"class","text-center flex flex-col gap-1"),f(A,"class","flex items-center justify-center gap-0"),f(A,"aria-label","Verification code"),f(A,"role","group"),f(x,"class",K="border "+(t[0]?"border-red-500":"border-neutral-200")+" rounded-lg py-3 bg-neutral-50"),f(C,"class","flex flex-col gap-2 justify-center"),H.disabled=t[8],f(H,"class",D=(t[8]?"text-neutral-500":"text-black")+" text-base font-medium hover:not-disabled:underline"),f(r,"class","flex flex-col gap-8 justify-center"),f(n,"class","flex flex-col gap-8 justify-between h-full"),f(e,"class","h-full")},m(te,Ee){I(te,e,Ee),_(e,n),_(n,r),_(r,i),_(i,s),_(i,o),_(i,l),_(i,a),_(i,d),_(d,u),_(u,c),_(c,h),_(u,b),_(u,m),_(m,v),_(d,g),_(d,y),_(r,$),_(r,C),_(C,x),_(x,A);for(let E=0;E<G.length;E+=1)G[E]&&G[E].m(A,null);_(C,M),W&&W.m(C,null),_(r,Q),_(r,H),_(H,Z),ee&&ee.m(H,null),_(r,re),ce&&ce.m(r,null),_(n,j),ie&&ie.m(n,null),S||(B=[he(y,"click",t[16]),he(H,"click",t[23])],S=!0)},p(te,[Ee]){if(Ee&32&&De(v,te[5]),Ee&31947){X=nt(Array.from({length:te[1]},Xl));let E;for(E=0;E<X.length;E+=1){const N=Ul(te,X,E);G[E]?G[E].p(N,Ee):(G[E]=Gl(N),G[E].c(),G[E].m(A,null))}for(;E<G.length;E+=1)G[E].d(1);G.length=X.length}Ee&1&&K!==(K="border "+(te[0]?"border-red-500":"border-neutral-200")+" rounded-lg py-3 bg-neutral-50")&&f(x,"class",K),te[0]?W||(W=Wl(),W.c(),W.m(C,null)):W&&(W.d(1),W=null),te[8]?ee?ee.p(te,Ee):(ee=ql(te),ee.c(),ee.m(H,null)):ee&&(ee.d(1),ee=null),Ee&256&&(H.disabled=te[8]),Ee&256&&D!==(D=(te[8]?"text-neutral-500":"text-black")+" text-base font-medium hover:not-disabled:underline")&&f(H,"class",D),te[3]?ce||(ce=Kl(),ce.c(),ce.m(r,null)):ce&&(ce.d(1),ce=null),te[4]?ie?ie.p(te,Ee):(ie=Jl(te),ie.c(),ie.m(n,null)):ie&&(ie.d(1),ie=null)},i:oe,o:oe,d(te){te&&T(e),ei(G,te),W&&W.d(),ee&&ee.d(),ce&&ce.d(),ie&&ie.d(),S=!1,it(B)}}}const Xl=(t,e)=>e;function D3(t,e,n){let r,{length:i=5}=e,{value:s=""}=e,{resendTime:o=0}=e,{isWrongCode:l=!1}=e,{isLoading:a=!1}=e,{showDifferentMethodsButton:d=!1}=e,{userIdentification:u=""}=e;const c=Rt(),h=Array.from({length:i},(S,B)=>s[B]??"");let b=[];function m(){const S=h.join("");c("input",S),S.length===i&&h.every(B=>B!=="")&&c("finish",S)}function v(S){var X;const B=b[S];B&&(B.focus(),(X=B.select)==null||X.call(B))}function g(S,B){var ee;const X=S.data??"";if(!X)return;const G=X.replace(/\D+/g,"");if(G.length<=1)return;(ee=S.preventDefault)==null||ee.call(S),n(0,l=!1);let W=B;for(const ce of G){if(W>=i)break;n(6,h[W]=ce,h),W++}m(),W<i?v(W):v(i-1)}function y(S,B){if(!(S.target instanceof HTMLInputElement))return;n(0,l=!1);const G=(S.data??""??"").replace(/\D+/g,"");if(G.length>1){let ie=B;for(const te of G){if(ie>=i)break;n(6,h[ie]=te,h),ie++}m(),ie<i?v(ie):v(i-1);return}const ee=S.target.value.replace(/\D+/g,"");if(ee.length<=1){n(6,h[B]=ee,h),ee&&B<i-1&&v(B+1),m();return}let ce=B;for(const ie of ee){if(ce>=i)break;n(6,h[ce]=ie,h),ce++}ce<=i-1?v(ce):v(i-1),m()}function $(S,B){const X=S.key;if(X==="Backspace"){if(h[B]){n(6,h[B]="",h),m();return}B>0&&(S.preventDefault(),v(B-1),n(6,h[B-1]="",h),m())}else X==="ArrowLeft"&&B>0?(S.preventDefault(),v(B-1)):X==="ArrowRight"&&B<i-1&&(S.preventDefault(),v(B+1))}function C(S,B){var ee;const G=(((ee=S.clipboardData)==null?void 0:ee.getData("text"))??"").replace(/\D+/g,"");if(!G)return;S.preventDefault();let W=B;for(const ce of G){if(W>=i)break;n(6,h[W]=ce,h),W++}m(),W<i?v(W):v(i-1)}function x(S,B){const X=h.findIndex(G=>!G);if(X!==-1&&X!==B){setTimeout(()=>v(X),0);return}}bn(()=>{setTimeout(()=>{const S=Math.max(0,h.findIndex(B=>!B));v(S===-1?0:S)},300)});const A=()=>c("restart");function K(S,B){je[S?"unshift":"push"](()=>{b[B]=S,n(7,b)})}const M=(S,B)=>g(B,S),Q=(S,B)=>y(B,S),H=(S,B)=>$(B,S),Z=(S,B)=>C(B,S),D=(S,B)=>x(B,S),re=()=>c("resend"),j=()=>c("changeMethod");return t.$$set=S=>{"length"in S&&n(1,i=S.length),"value"in S&&n(15,s=S.value),"resendTime"in S&&n(2,o=S.resendTime),"isWrongCode"in S&&n(0,l=S.isWrongCode),"isLoading"in S&&n(3,a=S.isLoading),"showDifferentMethodsButton"in S&&n(4,d=S.showDifferentMethodsButton),"userIdentification"in S&&n(5,u=S.userIdentification)},t.$$.update=()=>{t.$$.dirty&4&&n(8,r=o>0)},[l,i,o,a,d,u,h,b,r,c,g,y,$,C,x,s,A,K,M,Q,H,Z,D,re,j]}class dd extends tt{constructor(e){super(),Qe(this,e,D3,j3,qe,{length:1,value:15,resendTime:2,isWrongCode:0,isLoading:3,showDifferentMethodsButton:4,userIdentification:5})}get length(){return this.$$.ctx[1]}set length(e){this.$$set({length:e}),O()}get value(){return this.$$.ctx[15]}set value(e){this.$$set({value:e}),O()}get resendTime(){return this.$$.ctx[2]}set resendTime(e){this.$$set({resendTime:e}),O()}get isWrongCode(){return this.$$.ctx[0]}set isWrongCode(e){this.$$set({isWrongCode:e}),O()}get isLoading(){return this.$$.ctx[3]}set isLoading(e){this.$$set({isLoading:e}),O()}get showDifferentMethodsButton(){return this.$$.ctx[4]}set showDifferentMethodsButton(e){this.$$set({showDifferentMethodsButton:e}),O()}get userIdentification(){return this.$$.ctx[5]}set userIdentification(e){this.$$set({userIdentification:e}),O()}}et(dd,{length:{},value:{},resendTime:{},isWrongCode:{type:"Boolean"},isLoading:{type:"Boolean"},showDifferentMethodsButton:{type:"Boolean"},userIdentification:{}},[],[],!0);function B3(t){let e,n,r,i,s;return n=new dd({props:{isLoading:t[4],isWrongCode:t[5],length:t[6].codeLength,showDifferentMethodsButton:t[7].length>1,userIdentification:t[0],resendTime:t[3][t[2]]}}),n.$on("finish",t[16]),n.$on("resend",t[17]),n.$on("changeMethod",t[18]),n.$on("restart",t[19]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","h-full col-start-1 row-start-1")},m(o,l){I(o,e,l),Te(n,e,null),s=!0},p(o,l){const a={};l&16&&(a.isLoading=o[4]),l&32&&(a.isWrongCode=o[5]),l&1&&(a.userIdentification=o[0]),l&12&&(a.resendTime=o[3][o[2]]),n.$set(a)},i(o){s||(P(n.$$.fragment,o),o&&bt(()=>{s&&(i&&i.end(1),r=ni(e,Mn,{x:"100%",duration:300}),r.start())}),s=!0)},o(o){L(n.$$.fragment,o),r&&r.invalidate(),o&&(i=Ds(e,Mn,{x:"-100%",duration:300})),s=!1},d(o){o&&T(e),Ie(n),o&&i&&i.end()}}}function Z3(t){let e,n,r,i,s;return n=new ad({props:{supportedMethods:t[7]}}),n.$on("select",t[15]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","h-full col-start-1 row-start-1")},m(o,l){I(o,e,l),Te(n,e,null),s=!0},p:oe,i(o){s||(P(n.$$.fragment,o),o&&bt(()=>{s&&(i&&i.end(1),r=ni(e,Mn,{x:"100%",duration:300}),r.start())}),s=!0)},o(o){L(n.$$.fragment,o),r&&r.invalidate(),o&&(i=Ds(e,Mn,{x:"-100%",duration:300})),s=!1},d(o){o&&T(e),Ie(n),o&&i&&i.end()}}}function H3(t){let e,n,r,i,s,o;function l(d){t[13](d)}let a={};return t[0]!==void 0&&(a.userIdentification=t[0]),n=new ld({props:a}),je.push(()=>$n(n,"userIdentification",l)),n.$on("submit",t[14]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","h-full col-start-1 row-start-1")},m(d,u){I(d,e,u),Te(n,e,null),o=!0},p(d,u){const c={};!r&&u&1&&(r=!0,c.userIdentification=d[0],vn(()=>r=!1)),n.$set(c)},i(d){o||(P(n.$$.fragment,d),d&&bt(()=>{o&&(s&&s.end(1),i=ni(e,Mn,{x:"100%",duration:300}),i.start())}),o=!0)},o(d){L(n.$$.fragment,d),i&&i.invalidate(),d&&(s=Ds(e,Mn,{x:"-100%",duration:300})),o=!1},d(d){d&&T(e),Ie(n),d&&s&&s.end()}}}function V3(t){let e,n,r,i;const s=[H3,Z3,B3],o=[];function l(a,d){return a[1]==="enterIdentification"?0:a[1]==="selectMethod"?1:a[1]==="enterCode"?2:-1}return~(n=l(t))&&(r=o[n]=s[n](t)),{c(){e=k("div"),r&&r.c(),f(e,"class","h-full grid py-8 md:py-2")},m(a,d){I(a,e,d),~n&&o[n].m(e,null),i=!0},p(a,[d]){let u=n;n=l(a),n===u?~n&&o[n].p(a,d):(r&&(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae()),~n?(r=o[n],r?r.p(a,d):(r=o[n]=s[n](a),r.c()),P(r,1),r.m(e,null)):r=null)},i(a){i||(P(r),i=!0)},o(a){L(r),i=!1},d(a){a&&T(e),~n&&o[n].d()}}}function U3(t,e,n){let r;const i=Rt(),s=Wi.context,o=li.context.stages.mfa,l=to.context,a=o.supportedMethods,d=o.resendCodeDelay??60;let u="enterIdentification",c="",h="sms",b={sms:0,voice:0,whatsapp:0},m=!1,v=!1;function g(){n(3,b[h]=d,b);const j=setInterval(()=>{n(3,b[h]--,b),b[h]===0&&clearInterval(j)},1e3)}function y(){u==="enterIdentification"?(n(1,u=a.length>1?"selectMethod":"enterCode"),n(2,h=a[0])):u==="selectMethod"&&n(1,u="enterCode"),u==="enterCode"&&x()}function $(){u==="selectMethod"?n(1,u="enterIdentification"):u==="enterCode"&&n(1,u=a.length>1?"selectMethod":"enterIdentification")}function C(){n(1,u="enterIdentification")}function x(){if(!(b[h]>0)){g();try{s.onRequestCode(r,h)}catch(j){console.error(j)}}}async function A(j){n(4,m=!0);try{const S=await s.onVerifyCode(r,h,j);S.success?(n(5,v=!1),i("finish",{userIdentification:r,user:S.user})):n(5,v=!0)}catch(S){console.error(S),l("Failed to validate the code, please try again later",3e3)}finally{n(4,m=!1)}}function K(j){c=j,n(0,c)}const M=()=>y(),Q=j=>{n(2,h=j.detail),y()},H=j=>A(j.detail),Z=()=>x(),D=()=>$(),re=()=>C();return t.$$.update=()=>{var j;t.$$.dirty&1&&(r=((j=Ra(c,"US"))==null?void 0:j.number)??c)},[c,u,h,b,m,v,o,a,y,$,C,x,A,K,M,Q,H,Z,D,re]}class ud extends tt{constructor(e){super(),Qe(this,e,U3,V3,qe,{})}}et(ud,{},[],[],!0);function G3(t){let e,n,r,i,s,o,l,a,d,u,c,h,b;return{c(){e=k("dalia-apply-web"),xe(e,"class","w-full h-full block"),xe(e,"data-apply-token",n=t[0].token),xe(e,"data-custom-css",r=t[0].customCss),xe(e,"data-custom-css-path",i=t[0].customCssPath),xe(e,"data-job-title",s=t[0].title),xe(e,"data-job-location",o=t[0].location),xe(e,"data-client-name",l=t[0].entity_name),xe(e,"data-source",a=t[0].source),xe(e,"data-job-details",d=JSON.stringify(t[0].job)),xe(e,"data-jobs-count",t[1]),xe(e,"data-base-url",u=t[0].baseUrl??t[3].apiUrl),xe(e,"data-show-job-details",c=!!t[0].showJobDetails),xe(e,"data-user-name",h=t[0].userName),xe(e,"data-app-status",b=t[0].appStatus),xe(e,"data-auto-hide-chat-input","true"),o1(e,"--primary-color","hsl(var(--twc-primary))")},m(m,v){I(m,e,v),t[5](e)},p(m,[v]){v&1&&n!==(n=m[0].token)&&xe(e,"data-apply-token",n),v&1&&r!==(r=m[0].customCss)&&xe(e,"data-custom-css",r),v&1&&i!==(i=m[0].customCssPath)&&xe(e,"data-custom-css-path",i),v&1&&s!==(s=m[0].title)&&xe(e,"data-job-title",s),v&1&&o!==(o=m[0].location)&&xe(e,"data-job-location",o),v&1&&l!==(l=m[0].entity_name)&&xe(e,"data-client-name",l),v&1&&a!==(a=m[0].source)&&xe(e,"data-source",a),v&1&&d!==(d=JSON.stringify(m[0].job))&&xe(e,"data-job-details",d),v&2&&xe(e,"data-jobs-count",m[1]),v&1&&u!==(u=m[0].baseUrl??m[3].apiUrl)&&xe(e,"data-base-url",u),v&1&&c!==(c=!!m[0].showJobDetails)&&xe(e,"data-show-job-details",c),v&1&&h!==(h=m[0].userName)&&xe(e,"data-user-name",h),v&1&&b!==(b=m[0].appStatus)&&xe(e,"data-app-status",b)},i:oe,o:oe,d(m){m&&T(e),t[5](null)}}}function W3(t,e,n){let r;const i=["back-btn-clicked","submitted","job_expired","apply-component-loaded"],s=oi.context,o=Rt();let{applyComponentOptions:l}=e,{jobsCount:a=0}=e;const d=qi.context;Ye(t,d,b=>n(6,r=b));let u=null;function c(b){switch(b.type){case"back-btn-clicked":case"job_expired":case"submitted":o("finish",{jobId:l.job.id,eventType:b.type});break;case"apply-component-loaded":We(d,r=!1,r);break}}bn(()=>{u!=null&&i.forEach(b=>{u==null||u.removeEventListener(b,c),u==null||u.addEventListener(b,c)})}),Fs(()=>{u!=null&&i.forEach(b=>{u==null||u.removeEventListener(b,c)})});function h(b){je[b?"unshift":"push"](()=>{u=b,n(2,u)})}return t.$$set=b=>{"applyComponentOptions"in b&&n(0,l=b.applyComponentOptions),"jobsCount"in b&&n(1,a=b.jobsCount)},[l,a,u,s,d,h]}class cd extends tt{constructor(e){super(),Qe(this,e,W3,G3,qe,{applyComponentOptions:0,jobsCount:1})}get applyComponentOptions(){return this.$$.ctx[0]}set applyComponentOptions(e){this.$$set({applyComponentOptions:e}),O()}get jobsCount(){return this.$$.ctx[1]}set jobsCount(e){this.$$set({jobsCount:e}),O()}}et(cd,{applyComponentOptions:{},jobsCount:{}},[],[],!0);function Yl(t,e,n){const r=t.slice();r[8]=e[n];const i=r[2][r[8].id]==="loading";r[9]=i;const s=r[2][r[8].id]==="applied";return r[10]=s,r}function Ql(t){let e,n,r,i,s=nt(t[0]),o=[];for(let a=0;a<s.length;a+=1)o[a]=ea(Yl(t,s,a));const l=a=>L(o[a],1,1,()=>{o[a]=null});return{c(){var a;e=k("p"),e.textContent=`${((a=t[3])==null?void 0:a.successSubtitle)??"Here you are some similar jobs you can check"}`,n=q();for(let d=0;d<o.length;d+=1)o[d].c();r=kt(),f(e,"class","text-zinc-500 text-sm font-medium")},m(a,d){I(a,e,d),I(a,n,d);for(let u=0;u<o.length;u+=1)o[u]&&o[u].m(a,d);I(a,r,d),i=!0},p(a,d){if(d&53){s=nt(a[0]);let u;for(u=0;u<s.length;u+=1){const c=Yl(a,s,u);o[u]?(o[u].p(c,d),P(o[u],1)):(o[u]=ea(c),o[u].c(),P(o[u],1),o[u].m(r.parentNode,r))}for(Me(),u=s.length;u<o.length;u+=1)l(u);Ae()}},i(a){if(!i){for(let d=0;d<s.length;d+=1)P(o[d]);i=!0}},o(a){o=o.filter(Boolean);for(let d=0;d<o.length;d+=1)L(o[d]);i=!1},d(a){a&&(T(e),T(n),T(r)),ei(o,a)}}}function q3(t){let e,n;return{c(){e=ke("svg"),n=ke("path"),f(n,"d","M9.99978 17.25C9.80778 17.25 9.61575 17.1771 9.46975 17.0301C9.17675 16.7371 9.17675 16.262 9.46975 15.969L12.9397 12.499L9.46975 9.02908C9.17675 8.73608 9.17675 8.26104 9.46975 7.96804C9.76275 7.67504 10.2378 7.67504 10.5308 7.96804L14.5308 11.968C14.8238 12.261 14.8238 12.7361 14.5308 13.0291L10.5308 17.0291C10.3838 17.1771 10.1918 17.25 9.99978 17.25Z"),f(e,"class","fill-primary w-8 h-8"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","25"),f(e,"viewBox","0 0 24 25")},m(r,i){I(r,e,i),_(e,n)},d(r){r&&T(e)}}}function K3(t){let e;return{c(){e=k("div"),e.innerHTML='<span class="text-black text-sm font-medium">Applied</span>',f(e,"class","flex h-8 justify-center items-center")},m(n,r){I(n,e,r)},d(n){n&&T(e)}}}function J3(t){let e,n;return{c(){e=k("img"),Yn(e.src,n=Vs)||f(e,"src",n),f(e,"alt","Loading..."),f(e,"class","w-8")},m(r,i){I(r,e,i)},d(r){r&&T(e)}}}function X3(t){let e,n,r=t[8].title+"",i,s,o;function l(u,c){return u[9]?J3:u[10]?K3:q3}let a=l(t),d=a(t);return{c(){e=k("div"),n=k("span"),i=$e(r),s=q(),d.c(),o=q(),f(n,"class","text-black text-sm font-medium"),f(e,"class","flex flex-row gap-2")},m(u,c){I(u,e,c),_(e,n),_(n,i),I(u,s,c),d.m(u,c),I(u,o,c)},p(u,c){c&1&&r!==(r=u[8].title+"")&&De(i,r),a!==(a=l(u))&&(d.d(1),d=a(u),d&&(d.c(),d.m(o.parentNode,o)))},d(u){u&&(T(e),T(s),T(o)),d.d(u)}}}function ea(t){var i,s;let e,n;function r(){return t[6](t[8])}return e=new Zt({props:{href:(i=t[4].eapply)!=null&&i.enabled?void 0:t[8].url,target:(s=t[4].eapply)!=null&&s.enabled?void 0:"_blank",class:"px-2 py-3 rounded-xl text-black justify-between",theme:"neutral",shape:"extraRound",disabled:t[9]||t[10],fontSize:"base",$$slots:{default:[X3]},$$scope:{ctx:t}}}),e.$on("click",function(){var o,l;Et((o=t[4].eapply)!=null&&o.enabled?r:void 0)&&((l=t[4].eapply)!=null&&l.enabled?r:void 0).apply(this,arguments)}),{c(){Ne(e.$$.fragment)},m(o,l){Te(e,o,l),n=!0},p(o,l){var d;t=o;const a={};l&1&&(a.href=(d=t[4].eapply)!=null&&d.enabled?void 0:t[8].url),l&5&&(a.disabled=t[9]||t[10]),l&8197&&(a.$$scope={dirty:l,ctx:t}),e.$set(a)},i(o){n||(P(e.$$.fragment,o),n=!0)},o(o){L(e.$$.fragment,o),n=!1},d(o){Ie(e,o)}}}function Y3(t){let e,n,r,i,s,o,l,a,d=t[0]!=null&&t[0].length>0&&Ql(t);return{c(){var u;e=k("div"),n=k("div"),r=ke("svg"),i=ke("path"),s=q(),o=k("h3"),o.textContent=`${((u=t[3])==null?void 0:u.successTitle)??"You have signed up successfully!"}`,l=q(),d&&d.c(),f(i,"d","M39.9998 4.16667C20.2398 4.16667 4.1665 20.2433 4.1665 40C4.1665 59.7567 20.2398 75.8333 39.9998 75.8333C59.7598 75.8333 75.8332 59.7567 75.8332 40C75.8332 20.2433 59.7598 4.16667 39.9998 4.16667ZM39.9998 70.8333C22.9965 70.8333 9.1665 57.0033 9.1665 40C9.1665 22.9967 22.9965 9.16667 39.9998 9.16667C57.0032 9.16667 70.8332 22.9967 70.8332 40C70.8332 57.0033 57.0032 70.8333 39.9998 70.8333ZM53.4332 30.4533C54.4098 31.43 54.4098 33.0134 53.4332 33.9901L37.8765 49.5467C37.3899 50.0334 36.7499 50.28 36.1099 50.28C35.4699 50.28 34.8299 50.0367 34.3432 49.5467L26.5665 41.77C25.5898 40.7934 25.5898 39.2099 26.5665 38.2332C27.5432 37.2566 29.1265 37.2566 30.1032 38.2332L36.1132 44.2434L49.8998 30.4568C50.8765 29.4801 52.4565 29.48 53.4332 30.4533Z"),f(i,"fill","#1BBB89"),f(r,"xmlns","http://www.w3.org/2000/svg"),f(r,"width","80"),f(r,"height","80"),f(r,"viewBox","0 0 80 80"),f(r,"fill","none"),f(n,"class","flex flex-col bg-neutral-100 justify-center items-center gap-2 rounded-lg px-4 py-8"),f(e,"class","flex flex-col gap-4")},m(u,c){I(u,e,c),_(e,n),_(n,r),_(r,i),_(n,s),_(n,o),_(e,l),d&&d.m(e,null),a=!0},p(u,[c]){u[0]!=null&&u[0].length>0?d?(d.p(u,c),c&1&&P(d,1)):(d=Ql(u),d.c(),P(d,1),d.m(e,null)):d&&(Me(),L(d,1,1,()=>{d=null}),Ae())},i(u){a||(P(d),a=!0)},o(u){L(d),a=!1},d(u){u&&T(e),d&&d.d()}}}function Q3(t,e,n){let r,i=oe,s=()=>(i(),i=As(u,b=>n(2,r=b)),u);t.$$.on_destroy.push(()=>i());const o=Rt(),l=li.context.stages.postSignup,a=oi.context;let{postSignupJobs:d=null}=e,{jobsStatus:u}=e;s();async function c(b){o("startApply",b)}const h=b=>c(b);return t.$$set=b=>{"postSignupJobs"in b&&n(0,d=b.postSignupJobs),"jobsStatus"in b&&s(n(1,u=b.jobsStatus))},[d,u,r,l,a,c,h]}class fd extends tt{constructor(e){super(),Qe(this,e,Q3,Y3,qe,{postSignupJobs:0,jobsStatus:1})}get postSignupJobs(){return this.$$.ctx[0]}set postSignupJobs(e){this.$$set({postSignupJobs:e}),O()}get jobsStatus(){return this.$$.ctx[1]}set jobsStatus(e){this.$$set({jobsStatus:e}),O()}}et(fd,{postSignupJobs:{},jobsStatus:{}},[],[],!0);function e5(t){let e=t[1],n,r,i=ta(t);return{c(){i.c(),n=kt()},m(s,o){i.m(s,o),I(s,n,o),r=!0},p(s,o){o&2&&qe(e,e=s[1])?(Me(),L(i,1,1,oe),Ae(),i=ta(s),i.c(),P(i,1),i.m(n.parentNode,n)):i.p(s,o)},i(s){r||(P(i),r=!0)},o(s){L(i),r=!1},d(s){s&&T(n),i.d(s)}}}function t5(t){let e,n,r,i;return n=new fd({props:{postSignupJobs:t[0],jobsStatus:t[2]}}),n.$on("startApply",t[7]),{c(){e=k("div"),Ne(n.$$.fragment)},m(s,o){I(s,e,o),Te(n,e,null),i=!0},p(s,o){const l={};o&1&&(l.postSignupJobs=s[0]),n.$set(l)},i(s){i||(P(n.$$.fragment,s),s&&(r||bt(()=>{r=ni(e,Pn,{duration:250}),r.start()})),i=!0)},o(s){L(n.$$.fragment,s),i=!1},d(s){s&&T(e),Ie(n)}}}function ta(t){var s,o;let e,n,r,i;return n=new cd({props:{jobsCount:(s=t[0])==null?void 0:s.length,applyComponentOptions:(o=t[1])==null?void 0:o.applyComponentOptions}}),n.$on("finish",t[8]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","h-full md:h-[70vh]")},m(l,a){I(l,e,a),Te(n,e,null),i=!0},p(l,a){var u,c;const d={};a&1&&(d.jobsCount=(u=l[0])==null?void 0:u.length),a&2&&(d.applyComponentOptions=(c=l[1])==null?void 0:c.applyComponentOptions),n.$set(d)},i(l){i||(P(n.$$.fragment,l),l&&bt(()=>{i&&(r||(r=tr(e,Pn,{duration:250},!0)),r.run(1))}),i=!0)},o(l){L(n.$$.fragment,l),l&&(r||(r=tr(e,Pn,{duration:250},!1)),r.run(0)),i=!1},d(l){l&&T(e),Ie(n),l&&r&&r.end()}}}function n5(t){let e,n,r,i;const s=[t5,e5],o=[];function l(a,d){return a[1]==null?0:1}return e=l(t),n=o[e]=s[e](t),{c(){n.c(),r=kt()},m(a,d){o[e].m(a,d),I(a,r,d),i=!0},p(a,[d]){let u=e;e=l(a),e===u?o[e].p(a,d):(Me(),L(o[u],1,1,()=>{o[u]=null}),Ae(),n=o[e],n?n.p(a,d):(n=o[e]=s[e](a),n.c()),P(n,1),n.m(r.parentNode,r))},i(a){i||(P(n),i=!0)},o(a){L(n),i=!1},d(a){a&&T(r),o[e].d(a)}}}function r5(t,e,n){let r,i,s,{postSignupJobs:o=null}=e;const l=At({});Ye(t,l,g=>n(9,r=g));const a=Wi.context,d=sd.context;Ye(t,d,g=>n(10,i=g));const u=qi.context;Ye(t,u,g=>n(11,s=g));let c=null;async function h(g){var A;We(u,s=!0,s);const y=await a.onStartApply(g),{success:$,eApplyData:C}=y;let x=!1;$?(x=((A=C==null?void 0:C.applyApplication)==null?void 0:A.status)==="submitted",x?We(u,s=!1,s):setTimeout(()=>{n(1,c=y),We(d,i=!0,i)},1e3)):(We(u,s=!1,s),window.open(g.url,"_blank")),We(l,r[g.id]=x?"applied":null,r)}function b({jobId:g,eventType:y}){We(d,i=!1,i),n(1,c=null),y==="submitted"&&We(l,r[g]="applied",r)}const m=g=>h(g.detail),v=g=>{b(g.detail)};return t.$$set=g=>{"postSignupJobs"in g&&n(0,o=g.postSignupJobs)},[o,c,l,d,u,h,b,m,v]}class hd extends tt{constructor(e){super(),Qe(this,e,r5,n5,qe,{postSignupJobs:0})}get postSignupJobs(){return this.$$.ctx[0]}set postSignupJobs(e){this.$$set({postSignupJobs:e}),O()}}et(hd,{postSignupJobs:{}},[],[],!0);function i5(t){let e;return{c(){e=k("div"),e.innerHTML=`<img src="${ya}" alt="loading" class="w-20 h-20 bg-zinc-100 rounded-full"/> <p class="text-black text-sm font-medium">Please wait we are processing your data</p>`,f(e,"class","flex flex-col items-center justify-center gap-4 min-h-[16rem] h-full")},m(n,r){I(n,e,r)},p:oe,i:oe,o:oe,d(n){n&&T(e)}}}class pd extends tt{constructor(e){super(),Qe(this,e,null,i5,qe,{})}}et(pd,{},[],[],!0);function s5(t){if(!(t instanceof HTMLElement))throw new Error("syncViewportHeight: element parameter must be an HTMLElement");if(!(/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream))return()=>{};let n=i(),r=null;function i(){return window.visualViewport?window.visualViewport.height:window.innerHeight}function s(){let c=document.activeElement||null;for(;c&&c.shadowRoot&&c.shadowRoot.activeElement;)c=c.shadowRoot.activeElement;return c}function o(){const c=s()||t;try{c.scrollIntoView({block:"center",inline:"nearest"})}catch{c.scrollIntoView()}}function l(){requestAnimationFrame(()=>{setTimeout(()=>{window.scrollTo(0,1),setTimeout(()=>{o()},30)},0)})}function a(c=!1){const h=i();t.style.height=`${h}px`;const b=h<n-8;c&&b&&l(),n=h}a(!1);const d=()=>{r&&clearTimeout(r),r=window.setTimeout(()=>a(!0),100)};window.visualViewport?window.visualViewport.addEventListener("resize",d):window.addEventListener("resize",d);const u=()=>{window.scrollTo(0,0)};return window.addEventListener("touchend",u,{passive:!0}),()=>{window.visualViewport?window.visualViewport.removeEventListener("resize",d):window.removeEventListener("resize",d),window.removeEventListener("touchend",u),r&&(clearTimeout(r),r=null),t.style.height=""}}function o5(t){var u;let e,n,r,i,s=(((u=t[1].general)==null?void 0:u.collapsedLabel)??"Get Job Alerts")+"",o,l,a,d;return{c(){e=ke("svg"),n=ke("path"),r=q(),i=k("span"),o=$e(s),l=q(),a=ke("svg"),d=ke("path"),f(n,"d","M18 5.75H16.75V4.5C16.75 3.535 15.965 2.75 15 2.75H9C8.035 2.75 7.25 3.535 7.25 4.5V5.75H6C3.582 5.75 2.25 7.082 2.25 9.5V9.61902V11.7531V18.5C2.25 20.918 3.582 22.25 6 22.25H18C20.418 22.25 21.75 20.918 21.75 18.5V11.7531V9.61902V9.5C21.75 7.082 20.418 5.75 18 5.75ZM8.75 4.5C8.75 4.362 8.862 4.25 9 4.25H15C15.138 4.25 15.25 4.362 15.25 4.5V5.75H8.75V4.5ZM3.75 9.5C3.75 7.923 4.423 7.25 6 7.25H18C19.577 7.25 20.25 7.923 20.25 9.5V9.61902V11.7531C20.25 12.0541 20.079 12.3169 19.804 12.4399C18.939 12.8259 17.465 13.376 15.358 13.806C15.255 13.827 15.144 13.748 15.084 13.66C14.359 12.577 13.207 11.931 12 11.931C10.793 11.931 9.641 12.577 8.916 13.66C8.857 13.749 8.75 13.829 8.642 13.806C6.536 13.376 5.061 12.8259 4.196 12.4399C3.921 12.3169 3.75 12.0541 3.75 11.7531V9.61902V9.5ZM18 20.75H6C4.423 20.75 3.75 20.077 3.75 18.5V13.88C4.7 14.291 6.223 14.842 8.341 15.275C9.031 15.415 9.749 15.11 10.162 14.493C10.608 13.827 11.295 13.4301 12 13.4301C12.705 13.4301 13.392 13.827 13.837 14.493C14.183 15.01 14.741 15.309 15.32 15.309C15.432 15.309 15.545 15.298 15.657 15.275C17.776 14.842 19.299 14.291 20.249 13.88V18.5C20.25 20.077 19.577 20.75 18 20.75ZM13.02 15.5C13.02 16.052 12.572 16.5 12.02 16.5C11.468 16.5 11.015 16.052 11.015 15.5C11.015 14.948 11.457 14.5 12.01 14.5H12.02C12.572 14.5 13.02 14.948 13.02 15.5Z"),f(n,"fill","white"),f(e,"class","fill-primary-font"),f(e,"xmlns","http://www.w3.org/2000/svg"),f(e,"width","24"),f(e,"height","25"),f(e,"viewBox","0 0 24 25"),f(i,"class","text-sm"),f(d,"d","M19 16.2498C18.808 16.2498 18.616 16.1768 18.47 16.0298L12 9.55984L5.53005 16.0298C5.23705 16.3228 4.76202 16.3228 4.46902 16.0298C4.17602 15.7368 4.17602 15.2618 4.46902 14.9688L11.469 7.96877C11.762 7.67577 12.2371 7.67577 12.5301 7.96877L19.5301 14.9688C19.8231 15.2618 19.8231 15.7368 19.5301 16.0298C19.3841 16.1768 19.192 16.2498 19 16.2498Z"),f(d,"fill","white"),f(a,"class","fill-primary-font"),f(a,"xmlns","http://www.w3.org/2000/svg"),f(a,"width","24"),f(a,"height","25"),f(a,"viewBox","0 0 24 25")},m(c,h){I(c,e,h),_(e,n),I(c,r,h),I(c,i,h),_(i,o),I(c,l,h),I(c,a,h),_(a,d)},p(c,h){var b;h[0]&2&&s!==(s=(((b=c[1].general)==null?void 0:b.collapsedLabel)??"Get Job Alerts")+"")&&De(o,s)},d(c){c&&(T(e),T(r),T(i),T(l),T(a))}}}function l5(t){let e,n,r;return n=new hd({props:{postSignupJobs:t[7]}}),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","p-1 h-full")},m(i,s){I(i,e,s),Te(n,e,null),r=!0},p(i,s){const o={};s[0]&128&&(o.postSignupJobs=i[7]),n.$set(o)},i(i){r||(P(n.$$.fragment,i),r=!0)},o(i){L(n.$$.fragment,i),r=!1},d(i){i&&T(e),Ie(n)}}}function a5(t){let e,n,r;return n=new od({props:{userIdentification:t[6]}}),n.$on("finish",t[29]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","p-1")},m(i,s){I(i,e,s),Te(n,e,null),r=!0},p(i,s){const o={};s[0]&64&&(o.userIdentification=i[6]),n.$set(o)},i(i){r||(P(n.$$.fragment,i),r=!0)},o(i){L(n.$$.fragment,i),r=!1},d(i){i&&T(e),Ie(n)}}}function d5(t){let e,n,r;return n=new ud({}),n.$on("finish",t[28]),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","h-full p-1")},m(i,s){I(i,e,s),Te(n,e,null),r=!0},p:oe,i(i){r||(P(n.$$.fragment,i),r=!0)},o(i){L(n.$$.fragment,i),r=!1},d(i){i&&T(e),Ie(n)}}}function na(t){let e,n,r,i;return n=new pd({}),{c(){e=k("div"),Ne(n.$$.fragment),f(e,"class","absolute top-0 left-0 z-50 w-full h-full bg-white")},m(s,o){I(s,e,o),Te(n,e,null),i=!0},i(s){i||(P(n.$$.fragment,s),s&&bt(()=>{i&&(r||(r=tr(e,Pn,{duration:250},!0)),r.run(1))}),i=!0)},o(s){L(n.$$.fragment,s),s&&(r||(r=tr(e,Pn,{duration:250},!1)),r.run(0)),i=!1},d(s){s&&T(e),Ie(n),s&&r&&r.end()}}}function ra(t){let e,n,r,i,s,o,l,a,d,u;return{c(){e=k("div"),n=k("div"),r=k("div"),i=$e(t[4]),s=q(),o=k("button"),o.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M18.3 5.71a1 1 0 0 0-1.41 0L12 10.59 7.11 5.7A1 1 0 0 0 5.7 7.11L10.59 12 5.7 16.89a1 1 0 1 0 1.41 1.41L12 13.41l4.89 4.89a1 1 0 0 0 1.41-1.41L13.41 12l4.89-4.89a1 1 0 0 0 0-1.4z"></path></svg>',f(r,"class","flex-1 text-sm leading-snug"),f(o,"class","ml-2 shrink-0 rounded p-1 hover:bg-red-500/20 focus:outline-none focus:ring-2 focus:ring-white/40"),f(o,"aria-label","Close error"),f(n,"role","alert"),f(n,"aria-live","assertive"),f(n,"class","flex items-center pointer-events-auto bg-red-600 text-white shadow-lg rounded-md px-4 py-3 max-w-[90%] md:max-w-md w-fit gap-3"),f(e,"class","pointer-events-none absolute left-0 right-0 bottom-4 z-[100000] flex justify-center px-3")},m(c,h){I(c,e,h),_(e,n),_(n,r),_(r,i),_(n,s),_(n,o),a=!0,d||(u=he(o,"click",t[21]),d=!0)},p(c,h){(!a||h[0]&16)&&De(i,c[4])},i(c){a||(c&&bt(()=>{a&&(l||(l=tr(n,Pn,{duration:200},!0)),l.run(1))}),a=!0)},o(c){c&&(l||(l=tr(n,Pn,{duration:200},!1)),l.run(0)),a=!1},d(c){c&&T(e),c&&l&&l.end(),d=!1,u()}}}function ia(t){let e,n;return e=new Zt({props:{class:"px-10 py-3 rounded-xl",theme:"primary",shape:"extraRound",fontSize:"base",$$slots:{default:[u5]},$$scope:{ctx:t}}}),e.$on("click",t[30]),{c(){Ne(e.$$.fragment)},m(r,i){Te(e,r,i),n=!0},p(r,i){const s={};i[1]&131072&&(s.$$scope={dirty:i,ctx:r}),e.$set(s)},i(r){n||(P(e.$$.fragment,r),n=!0)},o(r){L(e.$$.fragment,r),n=!1},d(r){Ie(e,r)}}}function u5(t){let e,n,r,i;return{c(){e=k("span"),e.textContent="Continue",n=q(),r=ke("svg"),i=ke("path"),f(e,"class","font-normal"),f(i,"d","M1.49929 9.75088C1.30729 9.75088 1.11526 9.67791 0.969262 9.53091C0.676262 9.23791 0.676262 8.76287 0.969262 8.46987L4.43923 4.9999L0.969262 1.52993C0.676262 1.23693 0.676262 0.761896 0.969262 0.468896C1.26226 0.175896 1.7373 0.175896 2.0303 0.468896L6.0303 4.4689C6.3233 4.7619 6.3233 5.23693 6.0303 5.52993L2.0303 9.52993C1.8833 9.67793 1.69129 9.75088 1.49929 9.75088Z"),f(i,"fill","white"),f(r,"xmlns","http://www.w3.org/2000/svg"),f(r,"width","7"),f(r,"height","10"),f(r,"viewBox","0 0 7 10"),f(r,"fill","currentColor")},m(s,o){I(s,e,o),I(s,n,o),I(s,r,o),_(r,i)},p:oe,d(s){s&&(T(e),T(n),T(r))}}}function sa(t){let e,n;return e=new Zt({props:{class:"px-10 py-3 rounded-xl",disabled:t[14]||t[10].disabled,theme:"primary",shape:"extraRound",fontSize:"base",$$slots:{default:[c5]},$$scope:{ctx:t}}}),e.$on("click",t[24]),{c(){Ne(e.$$.fragment)},m(r,i){Te(e,r,i),n=!0},p(r,i){const s={};i[0]&17408&&(s.disabled=r[14]||r[10].disabled),i[0]&1024|i[1]&131072&&(s.$$scope={dirty:i,ctx:r}),e.$set(s)},i(r){n||(P(e.$$.fragment,r),n=!0)},o(r){L(e.$$.fragment,r),n=!1},d(r){Ie(e,r)}}}function c5(t){let e,n=t[10].label+"",r,i,s,o;return{c(){e=k("span"),r=$e(n),i=q(),s=ke("svg"),o=ke("path"),f(e,"class","font-normal"),f(o,"d","M1.49929 9.75088C1.30729 9.75088 1.11526 9.67791 0.969262 9.53091C0.676262 9.23791 0.676262 8.76287 0.969262 8.46987L4.43923 4.9999L0.969262 1.52993C0.676262 1.23693 0.676262 0.761896 0.969262 0.468896C1.26226 0.175896 1.7373 0.175896 2.0303 0.468896L6.0303 4.4689C6.3233 4.7619 6.3233 5.23693 6.0303 5.52993L2.0303 9.52993C1.8833 9.67793 1.69129 9.75088 1.49929 9.75088Z"),f(o,"fill","white"),f(s,"xmlns","http://www.w3.org/2000/svg"),f(s,"width","7"),f(s,"height","10"),f(s,"viewBox","0 0 7 10"),f(s,"fill","currentColor")},m(l,a){I(l,e,a),_(e,r),I(l,i,a),I(l,s,a),_(s,o)},p(l,a){a[0]&1024&&n!==(n=l[10].label+"")&&De(r,n)},d(l){l&&(T(e),T(i),T(s))}}}function f5(t){let e,n,r,i,s,o,l,a,d,u,c,h,b,m,v,g,y,$,C,x,A,K,M,Q,H,Z,D,re,j,S,B,X,G,W,ee,ce,ie,te,Ee;r=new Zt({props:{class:"border-0 flex gap-2 rounded-full px-6 py-4 text-primary-font",theme:"primary",$$slots:{default:[o5]},$$scope:{ctx:t}}}),r.$on("click",t[22]);const E=[d5,a5,l5],N=[];function w(J,fe){return J[9]==="mfa"?0:J[9]==="chat"?1:J[9]==="postSignup"?2:-1}~(C=w(t))&&(x=N[C]=E[C](t));let z=t[12]&&na(),de=t[5]&&t[4]&&ra(t),we=!t[0]&&ia(t),ve=t[0]&&t[10].show&&sa(t);return{c(){var J,fe,jt,pt,Ue,Gt,Wt;e=k("div"),n=k("div"),Ne(r.$$.fragment),s=q(),o=k("div"),l=k("div"),a=k("div"),d=k("div"),u=k("img"),b=q(),m=k("button"),m.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M12 16.75C11.808 16.75 11.616 16.6771 11.47 16.5301L4.46999 9.53005C4.17699 9.23705 4.17699 8.76202 4.46999 8.46902C4.76299 8.17602 5.23803 8.17602 5.53103 8.46902L12.001 14.939L18.471 8.46902C18.764 8.17602 19.239 8.17602 19.532 8.46902C19.825 8.76202 19.825 9.23705 19.532 9.53005L12.532 16.5301C12.384 16.6771 12.192 16.75 12 16.75Z" fill="black"></path></svg>',v=q(),g=k("div"),y=k("div"),$=k("div"),x&&x.c(),K=q(),z&&z.c(),Q=q(),de&&de.c(),Z=q(),D=k("div"),re=k("div"),re.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="124" height="18" viewBox="0 0 124 18" fill="none"><path d="M70.9278 12.0745L73.001 6.66608H74.5205L70.168 17.0966H68.6485L70.0907 13.6455L67.2964 6.66608H68.9318L70.9278 12.0745Z" fill="black"></path><path d="M60.8738 7.72202C61.3373 7.07816 62.2259 6.55019 63.3462 6.55019C65.2262 6.55019 66.6814 7.99244 66.6814 10.1816C66.6814 12.3707 65.2134 13.8773 63.3462 13.8773C62.1744 13.8773 61.3373 13.3493 60.8738 12.7312V13.7614H59.4058V4.2323H60.8738V7.72202ZM65.1876 10.1816C65.1876 8.64917 64.1317 7.82503 63.0242 7.82503C61.9297 7.82503 60.8738 8.68781 60.8738 10.2073C60.8738 11.7397 61.9297 12.6025 63.0242 12.6025C64.1317 12.6025 65.1876 11.7139 65.1876 10.1816Z" fill="black"></path><path d="M46.8452 10.1816C46.8452 7.99244 48.3261 6.55019 50.2062 6.55019C51.1333 6.55019 52.112 6.98802 52.6528 7.65763V4.2323H54.1337V13.7614H52.6528V12.6926C52.2021 13.3365 51.3522 13.8773 50.1933 13.8773C48.3261 13.8773 46.8452 12.3707 46.8452 10.1816ZM52.6528 10.2073C52.6528 8.68781 51.6098 7.82503 50.5023 7.82503C49.4078 7.82503 48.3518 8.64917 48.3518 10.1816C48.3518 11.7139 49.4078 12.6025 50.5023 12.6025C51.6098 12.6025 52.6528 11.7397 52.6528 10.2073Z" fill="black"></path><path d="M42.3743 7.78638C41.3828 7.78638 40.5844 8.45599 40.4298 9.57631H44.3574C44.3316 8.48175 43.4689 7.78638 42.3743 7.78638ZM45.6966 11.6495C45.2974 12.8857 44.1771 13.8773 42.4387 13.8773C40.4041 13.8773 38.8975 12.435 38.8975 10.2073C38.8975 7.97954 40.3397 6.55017 42.4387 6.55017C44.4604 6.55017 45.8898 7.95378 45.8898 10.0399C45.8898 10.2846 45.8769 10.5163 45.8383 10.761H40.417C40.52 11.9328 41.357 12.6411 42.4387 12.6411C43.3401 12.6411 43.8423 12.2033 44.1127 11.6495H45.6966Z" fill="black"></path><path d="M35.9118 10.027V13.7614H34.4438V6.66607H35.9118V7.69624C36.3239 6.98799 37.0322 6.55017 38.0366 6.55017V8.06968H37.6631C36.5815 8.06968 35.9118 8.52038 35.9118 10.027Z" fill="black"></path><path d="M29.4847 7.78638C28.4931 7.78638 27.6947 8.45599 27.5402 9.57631H31.4677C31.442 8.48175 30.5792 7.78638 29.4847 7.78638ZM32.807 11.6495C32.4078 12.8857 31.2875 13.8773 29.549 13.8773C27.5144 13.8773 26.0078 12.435 26.0078 10.2073C26.0078 7.97954 27.4501 6.55017 29.549 6.55017C31.5708 6.55017 33.0001 7.95378 33.0001 10.0399C33.0001 10.2846 32.9872 10.5163 32.9486 10.761H27.5273C27.6303 11.9328 28.4674 12.6411 29.549 12.6411C30.4504 12.6411 30.9527 12.2033 31.2231 11.6495H32.807Z" fill="black"></path><path d="M17.2476 13.7614L15.0327 6.66608H16.5265L18.0073 12.3707L19.514 6.66608H21.0464L22.4886 12.3449L23.9566 6.66608H25.3988L23.1969 13.7614H21.6516L20.2222 8.52039L18.7929 13.7614H17.2476Z" fill="black"></path><path d="M14.4191 10.2073C14.4191 12.435 12.7708 13.8773 10.7362 13.8773C8.71451 13.8773 7.18213 12.435 7.18213 10.2073C7.18213 7.97954 8.7789 6.55017 10.8006 6.55017C12.8223 6.55017 14.4191 7.97954 14.4191 10.2073ZM8.67588 10.2073C8.67588 11.8169 9.62879 12.6024 10.7362 12.6024C11.8308 12.6024 12.9125 11.8169 12.9125 10.2073C12.9125 8.59764 11.8694 7.82501 10.7749 7.82501C9.66743 7.82501 8.67588 8.59764 8.67588 10.2073Z" fill="black"></path><path d="M1.468 8.93253H3.09052C4.23659 8.93253 4.75168 8.37881 4.75168 7.47741C4.75168 6.55025 4.23659 6.00941 3.09052 6.00941H1.468V8.93253ZM6.25831 7.47741C6.25831 8.75225 5.42129 10.1301 3.09052 10.1301H1.468V13.7615H0V4.81183H3.09052C5.21526 4.81183 6.25831 6.02228 6.25831 7.47741Z" fill="black"></path><path d="M101.831 6.50565H99.608C99.396 6.50565 99.2245 6.66819 99.2245 6.86915V7.32427C96.8393 5.50381 93.3473 5.85845 91.4267 8.12219C89.5061 10.383 89.8802 13.6929 92.2685 15.5133C94.2983 17.0649 97.1948 17.0649 99.2276 15.5133V15.9685C99.2276 16.1694 99.3991 16.332 99.6111 16.332H101.834C102.046 16.332 102.218 16.1694 102.218 15.9685V6.8662C102.218 6.66524 102.046 6.5027 101.834 6.5027L101.831 6.50565ZM95.7512 13.8407C94.3388 13.8407 93.1945 12.7561 93.1945 11.4173C93.1945 10.0786 94.3388 8.994 95.7512 8.994C97.1636 8.994 98.3079 10.0786 98.3079 11.4173C98.3079 12.7531 97.1636 13.8377 95.7512 13.8407Z" fill="#6F00FF"></path><path d="M82.8298 3.15686H79.2999C79.0969 3.15686 78.9326 3.32478 78.9326 3.5324V16.3006C78.9326 16.5082 79.0969 16.6762 79.2999 16.6762H82.7282C86.3805 16.7372 89.3877 13.7604 89.4474 10.0295C89.5072 6.29549 86.5955 3.22098 82.9462 3.15991C82.9074 3.15991 82.8716 3.15991 82.8328 3.15991L82.8298 3.15686ZM82.7581 13.6505H81.7935V6.18252H82.8298C84.8485 6.18252 86.485 7.86175 86.482 9.92567C86.482 9.9501 86.482 9.97758 86.482 10.002C86.4104 12.0476 84.7589 13.6658 82.7581 13.6505Z" fill="#6F00FF"></path><path d="M123.614 6.50565H121.391C121.179 6.50565 121.007 6.66819 121.007 6.86915V7.32427C118.622 5.50381 115.13 5.85845 113.209 8.12219C111.289 10.383 111.663 13.6929 114.051 15.5133C116.081 17.0649 118.977 17.0649 121.01 15.5133V15.9685C121.01 16.1694 121.182 16.332 121.394 16.332H123.617C123.829 16.332 124 16.1694 124 15.9685V6.8662C124 6.66524 123.829 6.5027 123.617 6.5027L123.614 6.50565ZM117.534 13.8407C116.122 13.8407 114.977 12.7561 114.977 11.4173C114.977 10.0786 116.122 8.994 117.534 8.994C118.946 8.994 120.091 10.0786 120.091 11.4173C120.091 12.7531 118.946 13.8377 117.534 13.8407Z" fill="#6F00FF"></path><path d="M106.351 16.677H104.093C103.886 16.677 103.72 16.5024 103.72 16.2864V1.29405C103.72 1.0781 103.886 0.903442 104.093 0.903442H106.351C106.557 0.903442 106.724 1.0781 106.724 1.29405V16.2864C106.724 16.5024 106.557 16.677 106.351 16.677Z" fill="#6F00FF"></path><path d="M110.858 16.677H108.599C108.393 16.677 108.227 16.503 108.227 16.2879V6.55037C108.227 6.33525 108.393 6.16125 108.599 6.16125H110.858C111.064 6.16125 111.231 6.33525 111.231 6.55037V16.2879C111.231 16.503 111.064 16.677 110.858 16.677Z" fill="#6F00FF"></path><path d="M109.729 4.65906C110.558 4.65906 111.231 3.81834 111.231 2.78125C111.231 1.74417 110.558 0.903442 109.729 0.903442C108.899 0.903442 108.227 1.74417 108.227 2.78125C108.227 3.81834 108.899 4.65906 109.729 4.65906Z" fill="#6F00FF"></path></svg>',j=q(),we&&we.c(),S=q(),ve&&ve.c(),ee=q(),ce=k("div"),ce.innerHTML=`<img src="${ya}" alt="loading"/> <img src="${Vs}" alt="Loading..."/>`,f(n,"class",i=t[0]?"hidden":"open"),Yn(u.src,c=((J=t[1].general)==null?void 0:J.logoUrl)??ko)||f(u,"src",c),f(u,"class","h-8"),f(u,"alt","logo"),f(u,"style",h=(jt=(fe=t[1])==null?void 0:fe.general)!=null&&jt.logoHeight?`height:${(Ue=(pt=t[1])==null?void 0:pt.general)==null?void 0:Ue.logoHeight};`:""),f(m,"class","rounded-full p-2 hover:bg-neutral-100 focus:outline-none focus:ring-2 focus:ring-secondary-500"),f(m,"aria-label","toggle-universal-signup"),f(a,"class","flex items-center justify-between px-4 py-3 bg-white border-b border-stone-200"),f($,"class",A="h-full md:overflow-hidden "+(t[12]?"hidden":"")),f(y,"class",M="h-full "+(t[11]||t[12]?"md:min-h-[50vh]":"")+" md:grid md:[grid-template-rows:0fr] md:transition-[grid-template-rows] md:duration-300 md:ease-out "+(t[0]?"md:[grid-template-rows:1fr]":"")),f(g,"class",H="relative "+(t[11]?"overflow-y-hidden":"p-4 overflow-y-auto")+" flex-1"),f(D,"class",B="px-4 py-3 bg-white border-t border-stone-200 "+(t[11]?"hidden md:flex":"flex")+" items-center "+(t[10].show||!t[0]?"justify-between ":"justify-center")+" min-h-20"),f(l,"class",X="bg-white shadow-2xl flex flex-col overflow-hidden w-full h-full max-h-full rounded-t-3xl transform-gpu transition-transform md:transition-opacity duration-300 ease-out md:w-1/2 md:max-w-[30rem] md:h-auto md:max-h-[95vh] md:rounded-3xl md:translate-y-0 "+(t[0]?"translate-y-0 md:opacity-100":"translate-y-full md:opacity-0")),f(o,"class",G="fixed inset-0 z-[99999] flex items-center justify-center bg-black/50 transition-opacity duration-300 "+(t[0]?"opacity-100 pointer-events-auto":"opacity-0 pointer-events-none")+" "+(!t[3]&&!t[0]?"hidden":"")),f(e,"id","universal-signup"),f(e,"class",W="universal-signup-root fixed "+(((Wt=(Gt=t[1])==null?void 0:Gt.general)==null?void 0:Wt.direction)==="left"?"left-4":"right-4")+" bottom-4 z-[99999]"),f(e,"style",t[20].compiledCss),f(ce,"class","hidden h-0 w-0")},m(J,fe){I(J,e,fe),_(e,n),Te(r,n,null),_(e,s),_(e,o),_(o,l),_(l,a),_(a,d),_(d,u),_(a,b),_(a,m),_(l,v),_(l,g),_(g,y),_(y,$),~C&&N[C].m($,null),_(y,K),z&&z.m(y,null),_(g,Q),de&&de.m(g,null),_(l,Z),_(l,D),_(D,re),_(D,j),we&&we.m(D,null),_(D,S),ve&&ve.m(D,null),t[31](o),t[32](e),I(J,ee,fe),I(J,ce,fe),ie=!0,te||(Ee=he(m,"click",t[22]),te=!0)},p(J,fe){var Ue,Gt,Wt,_n,Ct,Nn,mt;const jt={};fe[0]&2|fe[1]&131072&&(jt.$$scope={dirty:fe,ctx:J}),r.$set(jt),(!ie||fe[0]&1&&i!==(i=J[0]?"hidden":"open"))&&f(n,"class",i),(!ie||fe[0]&2&&!Yn(u.src,c=((Ue=J[1].general)==null?void 0:Ue.logoUrl)??ko))&&f(u,"src",c),(!ie||fe[0]&2&&h!==(h=(Wt=(Gt=J[1])==null?void 0:Gt.general)!=null&&Wt.logoHeight?`height:${(Ct=(_n=J[1])==null?void 0:_n.general)==null?void 0:Ct.logoHeight};`:""))&&f(u,"style",h);let pt=C;C=w(J),C===pt?~C&&N[C].p(J,fe):(x&&(Me(),L(N[pt],1,1,()=>{N[pt]=null}),Ae()),~C?(x=N[C],x?x.p(J,fe):(x=N[C]=E[C](J),x.c()),P(x,1),x.m($,null)):x=null),(!ie||fe[0]&4096&&A!==(A="h-full md:overflow-hidden "+(J[12]?"hidden":"")))&&f($,"class",A),J[12]?z?fe[0]&4096&&P(z,1):(z=na(),z.c(),P(z,1),z.m(y,null)):z&&(Me(),L(z,1,1,()=>{z=null}),Ae()),(!ie||fe[0]&6145&&M!==(M="h-full "+(J[11]||J[12]?"md:min-h-[50vh]":"")+" md:grid md:[grid-template-rows:0fr] md:transition-[grid-template-rows] md:duration-300 md:ease-out "+(J[0]?"md:[grid-template-rows:1fr]":"")))&&f(y,"class",M),J[5]&&J[4]?de?(de.p(J,fe),fe[0]&48&&P(de,1)):(de=ra(J),de.c(),P(de,1),de.m(g,null)):de&&(Me(),L(de,1,1,()=>{de=null}),Ae()),(!ie||fe[0]&2048&&H!==(H="relative "+(J[11]?"overflow-y-hidden":"p-4 overflow-y-auto")+" flex-1"))&&f(g,"class",H),J[0]?we&&(Me(),L(we,1,1,()=>{we=null}),Ae()):we?(we.p(J,fe),fe[0]&1&&P(we,1)):(we=ia(J),we.c(),P(we,1),we.m(D,S)),J[0]&&J[10].show?ve?(ve.p(J,fe),fe[0]&1025&&P(ve,1)):(ve=sa(J),ve.c(),P(ve,1),ve.m(D,null)):ve&&(Me(),L(ve,1,1,()=>{ve=null}),Ae()),(!ie||fe[0]&3073&&B!==(B="px-4 py-3 bg-white border-t border-stone-200 "+(J[11]?"hidden md:flex":"flex")+" items-center "+(J[10].show||!J[0]?"justify-between ":"justify-center")+" min-h-20"))&&f(D,"class",B),(!ie||fe[0]&1&&X!==(X="bg-white shadow-2xl flex flex-col overflow-hidden w-full h-full max-h-full rounded-t-3xl transform-gpu transition-transform md:transition-opacity duration-300 ease-out md:w-1/2 md:max-w-[30rem] md:h-auto md:max-h-[95vh] md:rounded-3xl md:translate-y-0 "+(J[0]?"translate-y-0 md:opacity-100":"translate-y-full md:opacity-0")))&&f(l,"class",X),(!ie||fe[0]&9&&G!==(G="fixed inset-0 z-[99999] flex items-center justify-center bg-black/50 transition-opacity duration-300 "+(J[0]?"opacity-100 pointer-events-auto":"opacity-0 pointer-events-none")+" "+(!J[3]&&!J[0]?"hidden":"")))&&f(o,"class",G),(!ie||fe[0]&2&&W!==(W="universal-signup-root fixed "+(((mt=(Nn=J[1])==null?void 0:Nn.general)==null?void 0:mt.direction)==="left"?"left-4":"right-4")+" bottom-4 z-[99999]"))&&f(e,"class",W)},i(J){ie||(P(r.$$.fragment,J),P(x),P(z),P(de),P(we),P(ve),ie=!0)},o(J){L(r.$$.fragment,J),L(x),L(z),L(de),L(we),L(ve),ie=!1},d(J){J&&(T(e),T(ee),T(ce)),Ie(r),~C&&N[C].d(),z&&z.d(),de&&de.d(),we&&we.d(),ve&&ve.d(),t[31](null),t[32](null),te=!1,Ee()}}}function h5(t,e,n){var N;let r,i,s,o,l,a,d=null;const u=Rt();let{isOpen:c=!1}=e,{config:h}=e,{layout:b}=e,{callbacks:m}=e,v=!1;const g=At(null);Ye(t,g,w=>n(13,l=w));const y=At({}),$=At(!1);Ye(t,$,w=>n(11,s=w));const C=Ja(y,w=>Object.keys(w).length>0);Ye(t,C,w=>n(14,a=w));const x=At({show:!1,label:"Next",disabled:!1,onClick:new Set});Ye(t,x,w=>n(10,i=w));const A=At(!1);Ye(t,A,w=>n(12,o=w));const K=new x0((N=b==null?void 0:b.general)==null?void 0:N.theme);oi.context=h,li.context=b,Wi.context=m,nd.context=g,rd.context=G2,id.context=y,eo.context=x,qi.context=A,sd.context=$;let M=null,Q=!1,H=null;function Z(){n(5,Q=!1),n(4,M=null),H&&(clearTimeout(H),H=null)}to.context=(w,z)=>{w&&(n(4,M=w),n(5,Q=!0),H&&(clearTimeout(H),H=null),typeof z=="number"&&z>0&&(H=setTimeout(()=>{Z()},z)))};const D=["mfa","chat","postSignup"];let re=0,j="",S,B=null,X;function G(){n(0,c=!c),c?B&&(X=s5(B)):X==null||X(),u("toggle",{isOpen:c})}function W(){re<D.length&&n(27,re++,re),D[re]==="postSignup"?We(x,i.label="Close",i):We(x,i.label="Next",i)}function ee(){r==="chat"?$t().then(()=>{i.onClick.forEach(w=>w())}):r==="postSignup"&&G()}bn(async()=>{const w=d==null?void 0:d.getRootNode();if(w!=null&&w instanceof ShadowRoot){const z=(await mo(async()=>{const{default:fe}=await import("../assets/styles-Cff-5Jn5.js");return{default:fe}},[],import.meta.url)).default,de=document.createElement("style");de.textContent=z.replace(/:root/g,":host"),w.appendChild(de);const we=(await mo(async()=>{const{default:fe}=await import("../assets/fonts-DKk_eSxR.js");return{default:fe}},[],import.meta.url)).default,ve=document.createElement("style");ve.textContent=we,document.head.appendChild(ve);const J=document.querySelector('meta[name="viewport"]');if(J){const fe=J.getAttribute("content")||"";fe.includes("interactive-widget=resizes-content")||J.setAttribute("content",fe+", interactive-widget=resizes-content")}else{const fe=document.createElement("meta");fe.name="viewport",fe.content="width=device-width, initial-scale=1.0, interactive-widget=resizes-content",document.head.appendChild(fe)}}setTimeout(()=>n(3,v=!0),0)});const ce=w=>{const z=w.detail;n(6,j=z.userIdentification),We(g,l=z.user,l),W()},ie=w=>{const z=w.detail;n(7,S=z.postSignupJobs),We(g,l=z.user,l),W()},te=()=>G();function Ee(w){je[w?"unshift":"push"](()=>{B=w,n(8,B)})}function E(w){je[w?"unshift":"push"](()=>{d=w,n(2,d)})}return t.$$set=w=>{"isOpen"in w&&n(0,c=w.isOpen),"config"in w&&n(25,h=w.config),"layout"in w&&n(1,b=w.layout),"callbacks"in w&&n(26,m=w.callbacks)},t.$$.update=()=>{t.$$.dirty[0]&134217728&&n(9,r=D[re])},[c,b,d,v,M,Q,j,S,B,r,i,s,o,l,a,g,$,C,x,A,K,Z,G,W,ee,h,m,re,ce,ie,te,Ee,E]}class p5 extends tt{constructor(e){super(),Qe(this,e,h5,f5,qe,{isOpen:0,config:25,layout:1,callbacks:26},null,[-1,-1])}get isOpen(){return this.$$.ctx[0]}set isOpen(e){this.$$set({isOpen:e}),O()}get config(){return this.$$.ctx[25]}set config(e){this.$$set({config:e}),O()}get layout(){return this.$$.ctx[1]}set layout(e){this.$$set({layout:e}),O()}get callbacks(){return this.$$.ctx[26]}set callbacks(e){this.$$set({callbacks:e}),O()}}customElements.define("universal-signup",et(p5,{isOpen:{type:"Boolean"},config:{},layout:{},callbacks:{}},[],[],!0));


//# sourceMappingURL=data:application/json;base64,